{"version":3,"sources":["webpack:///./src/app/app.settings.ts","webpack:///./src async","webpack:///./src/main.ts","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.routes.ts","webpack:///./src/app/components/charts/cpu/cpu.component.ts","webpack:///./src/app/components/charts/disk/disk.component.ts","webpack:///./src/app/components/charts/memory/memory.component.ts","webpack:///./src/app/components/charts/network/network.component.ts","webpack:///./src/app/components/charts/processes/processes.component.ts","webpack:///./src/app/components/common/footer/footer.component.ts","webpack:///./src/app/components/common/footer/footer.module.ts","webpack:///./src/app/components/common/layouts/blank.component.ts","webpack:///./src/app/components/common/layouts/layouts.module.ts","webpack:///./src/app/components/common/navigation/navigation.component.ts","webpack:///./src/app/components/common/navigation/navigation.module.ts","webpack:///./src/app/components/common/topnavbar/topnavbar.component.ts","webpack:///./src/app/components/common/topnavbar/topnavbar.module.ts","webpack:///./src/app/libs/ng2-charts/charts/charts.ts","webpack:///./src/app/libs/ng2-charts/index.ts","webpack:///./src/app/services/charts.services.ts","webpack:///./src/app/services/window.service.ts","webpack:///./src/app/views/backup-view/backup-view.module.ts","webpack:///./src/app/views/main-view/main-view.module.ts","webpack:///./src/app/views/minor-view/minor-view.component.ts","webpack:///./src/app/views/minor-view/minor-view.module.ts","webpack:///./src/app/views/perf-view/perf-view.module.ts","webpack:///./src/app/views/processes-view/processes-view.module.ts","webpack:///./src/app/views/sec-view/sec-correct-login-view.module.ts","webpack:///./src/app/views/sec-view/sec-incorrect-login-view.module.ts","webpack:///./src/app/views/urlstat-view/urlstat-view.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/app/app.component.css","webpack:///./~/moment/locale ^\\.\\/.*$","webpack:///./src/app/app.component.html","webpack:///./src/app/components/charts/cpu/cpu.template.html","webpack:///./src/app/components/charts/disk/disk.template.html","webpack:///./src/app/components/charts/memory/memory.template.html","webpack:///./src/app/components/charts/network/network.template.html","webpack:///./src/app/components/charts/processes/processes.template.html","webpack:///./src/app/components/common/footer/footer.template.html","webpack:///./src/app/components/common/layouts/basic.template.html","webpack:///./src/app/components/common/layouts/blank.template.html","webpack:///./src/app/components/common/navigation/navigation.template.html","webpack:///./src/app/components/common/topnavbar/topnavbar.template.html","webpack:///./src/app/views/backup-view/backup-view.template.html","webpack:///./src/app/views/main-view/main-view.template.html","webpack:///./src/app/views/minor-view/minor-view.template.html","webpack:///./src/app/views/perf-view/perf-view.template.html","webpack:///./src/app/views/processes-view/processes-view.template.html","webpack:///./src/app/views/sec-view/sec-correct-login-view.template.html","webpack:///./src/app/views/sec-view/sec-incorrect-login-view.template.html","webpack:///./src/app/views/urlstat-view/urlstat-view.template.html","webpack:///./src/app/services/user.service.ts","webpack:///./src/app/components/common/layouts/basic.component.ts","webpack:///./src/app/views/backup-view/backup-view.component.ts","webpack:///./src/app/views/main-view/main-view.component.ts","webpack:///./src/app/views/perf-view/perf-view.component.ts","webpack:///./src/app/views/processes-view/processes-view.component.ts","webpack:///./src/app/views/sec-view/sec-correct-login-view.component.ts","webpack:///./src/app/views/sec-view/sec-incorrect-login-view.component.ts","webpack:///./src/app/views/urlstat-view/urlstat-view.component.ts","webpack:///./src/app/libs/ng2-charts/ng2-charts.ts","webpack:///./src/app/services/data.service.ts"],"names":[],"mappings":";;;;;;AAAA;AAAA;IAAA;IA+BA,CAAC;IAAD,kBAAC;AAAD,CAAC;;AA7Bc,mBAAO,GAAG,YAAY,CAAC;AACvB,mBAAO,GAAG,WAAW,CAAC,OAAO,GAAG,OAAO,CAAC;AAExC,sBAAU,GAAG,WAAW,CAAC,OAAO,GAAG,WAAW,CAAC;AAC/C,yBAAa,GAAG,WAAW,CAAC,OAAO,GAAG,cAAc,CAAC;AACrD,uBAAW,GAAG,WAAW,CAAC,OAAO,GAAG,YAAY,CAAC;AACjD,0BAAc,GAAG,WAAW,CAAC,OAAO,GAAG,eAAe,CAAC;AAEvD,uBAAW,GAAG,WAAW,CAAC,OAAO,GAAG,gBAAgB,CAAC;AACrD,oBAAQ,GAAG,WAAW,CAAC,OAAO,GAAG,aAAa,CAAC;AAC/C,mBAAO,GAAG,WAAW,CAAC,OAAO,GAAG,YAAY,CAAC;AAE7C,wBAAY,GAAG,WAAW,CAAC,OAAO,GAAG,YAAY,CAAC;AAClD,qCAAyB,GAAI,WAAW,CAAC,OAAO,GAAG,kBAAkB,CAAC;AACtE,4BAAgB,GAAI,WAAW,CAAC,OAAO,GAAG,iBAAiB,CAAC;AAE5D,8BAAkB,GAAI,WAAW,CAAC,OAAO,GAAG,yBAAyB,CAAC;AACtE,gCAAoB,GAAI,WAAW,CAAC,OAAO,GAAG,2BAA2B,CAAC;AAE1E,yBAAa,GAAI,WAAW,CAAC,OAAO,GAAG,eAAe,CAAC;AACvD,8BAAkB,GAAI,WAAW,CAAC,OAAO,GAAG,qBAAqB,CAAC;AAClE,sBAAU,GAAI,WAAW,CAAC,OAAO,GAAG,UAAU,CAAC;AAC/C,4BAAgB,GAAI,WAAW,CAAC,OAAO,GAAG,kBAAkB,CAAC;AAC7D,6BAAiB,GAAI,WAAW,CAAC,OAAO,GAAG,eAAe,CAAC;AAC3D,6BAAiB,GAAI,WAAW,CAAC,OAAO,GAAG,eAAe,CAAC;AAC3D,6BAAiB,GAAG,WAAW,CAAC,OAAO,GAAG,eAAe,CAAC;AAE1D,sBAAU,GAAG,WAAW,CAAC,OAAO,GAAG,UAAU,CAAC;;;;;;;;AC7B7D;AACA;AACA;AACA,uCAAuC,WAAW;AAClD;AACA;AACA;;;;;;;;;;;;;;ACN+C;AAC4B;AAE9B;AACY;AAEzD,EAAE,CAAC,CAAC,8EAAW,CAAC,UAAU,CAAC,CAAC,CAAC;IAC3B,oFAAc,EAAE,CAAC;AACnB,CAAC;AAED,wHAAsB,EAAE,CAAC,eAAe,CAAC,kEAAS,CAAC,CAAC;;;;;;;;;;;;;;;;;;;;;;ACVF;AAGI;AACA;AAOtD,IAAa,YAAY;IAOrB,sBAAqB,WAAwB,EAAU,WAAwB;QAA1D,gBAAW,GAAX,WAAW,CAAa;QAAU,gBAAW,GAAX,WAAW,CAAa;QAN/E,UAAK,GAAG,YAAY,CAAC;QAErB,YAAO,GAAY,KAAK,CAAC;IAMzB,CAAC;IAGD,+BAAQ,GAAR;QACI,OAAO,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC;IAChC,CAAC;IAGD,8BAAO,GAAP;QACI,IAAI,IAAI,GAAG,IAAI,CAAC;QAChB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;IAGxB,CAAC;IACL,mBAAC;AAAD,CAAC;AAvBY,YAAY;IALxB,+EAAS,CAAC;QACT,QAAQ,EAAE,UAAU;QACpB,kCAAmC;QACnC,kCAAkC;KACnC,CAAC;yDAQoC,2EAAW,oBAAX,2EAAW,sDAAuB,2EAAW,oBAAX,2EAAW;GAPtE,YAAY,CAuBxB;AAvBwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACXiC;AACjB;AACI;AACsC;AAEpC;AAEG;AAEH;AACT;AAEsB;AAE5D,yBAAyB;AACkD;AAE3E,YAAY;AACwD;AACG;AACH;AACgB;AACO;AACI;AACrB;AACG;AAG7E,eAAe;AAC4C;AACL;AACA;AACA;AAIhD;IACF,MAAM,CAAE,IAAI,yEAAkB,CAAC,WAAW,EAAE,aAAa,CAAC,CAAC;AAC/D,CAAC;AAEM,IAAM,OAAO,GAAG;IACrB,OAAO,EAAE,mEAAY;IACrB,UAAU,EAAE,yBAAyB;CACtC,CAAC;AAwCF,IAAa,SAAS;IAAtB;IAAyB,CAAC;IAAD,gBAAC;AAAD,CAAC;AAAb,SAAS;IArCrB,8EAAQ,CAAC;QACR,YAAY,EAAE;YACZ,oEAAY;SACb;QACD,OAAO,EAAE;YACP,gFAAa;YACb,2DAAW;YACX,iEAAU;YAEV,gEAAgB;YAEhB,QAAQ;YACR,0FAAc;YACd,6FAAe;YACf,0FAAc;YACd,yGAAmB;YACnB,iHAAyB;YACzB,qHAA2B;YAC3B,gGAAgB;YAChB,mGAAiB;YAEjB,UAAU;YACV,gGAAa;YAEb,qEAAY,CAAC,OAAO,CAAC,2DAAM,EAAE,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC;YAE/C,kFAAgB,CAAC,OAAO,EAAE;SAC3B;QACD,SAAS,EAAE;YACT,OAAO;YACP,iFAAa;YACb,4EAAW;YACX,4EAAW;YACX,4EAAS;SACV;QACD,SAAS,EAAE,CAAC,oEAAY,CAAC;KAC1B,CAAC;GACW,SAAS,CAAI;AAAJ;;;;;;;;;;;;;;;;;;AClFmD;AACA;AACgB;AACZ;AACoB;AACI;AAClB;AACH;AAGzE,IAAM,MAAM,GAAU;IAC3B,gBAAgB;IAChB,EAAC,IAAI,EAAE,EAAE,EAAE,UAAU,EAAE,MAAM,EAAE,SAAS,EAAE,MAAM,EAAC;IACjD,gDAAgD;IAChD,YAAY;IACZ;QACE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,kGAAc;QACnC,QAAQ,EAAE;YACR,EAAC,IAAI,EAAE,MAAM,EAAE,SAAS,EAAE,+FAAiB,EAAC;YAC5C,EAAC,IAAI,EAAE,MAAM,EAAE,SAAS,EAAE,+FAAiB,EAAC;YAC5C,EAAC,IAAI,EAAE,WAAW,EAAE,SAAS,EAAE,8GAAsB,EAAC;YACtD,EAAC,IAAI,EAAE,cAAc,EAAE,SAAS,EAAE,sHAA4B,EAAC;YAC/D,EAAC,IAAI,EAAE,gBAAgB,EAAE,SAAS,EAAE,0HAA8B,EAAC;YACnE,EAAC,IAAI,EAAE,SAAS,EAAE,SAAS,EAAE,wGAAoB,EAAC;YAClD,EAAC,IAAI,EAAE,SAAS,EAAE,SAAS,EAAE,qGAAmB,EAAC;YACjD,EAAC,IAAI,EAAE,gBAAgB,EAAE,SAAS,EAAE,qGAAmB,EAAC;SACzD;KACF;IAID,0BAA0B;IAC1B,EAAC,IAAI,EAAE,IAAI,EAAE,UAAU,EAAE,MAAM,EAAE;CAGlC,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;ACpC8E;AAGP;AAEpB;AAED;AACS;AAc7D,IAAa,YAAY;IA+BrB,sBAAqB,WAAwB,EAAU,KAAwB;QAA1D,gBAAW,GAAX,WAAW,CAAa;QAAU,UAAK,GAAL,KAAK,CAAmB;QA1B/E,YAAO,GAAW,KAAK,CAAC;QAExB,cAAS,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;QAKrB,cAAS,GAAkB;YACtB,EAAE,EAAF,UAAG,KAAa;gBACb,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;oBACR,MAAM,CAAC,MAAM,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC,MAAM,CAAC,kBAAkB,CAAC,CAAC;gBACzD,CAAC;YACH,CAAC;YACD,IAAI,EAAJ,UAAK,KAAa;gBACd,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;oBACR,EAAE,CAAC,CAAC,MAAM,CAAC,KAAK,EAAE,kBAAkB,CAAC,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;wBAC9C,IAAI,CAAC,GAAG,MAAM,CAAC,KAAK,EAAE,kBAAkB,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC;wBACrD,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;oBACzB,CAAC;oBACD,MAAM,CAAC,KAAK,CAAC;gBACjB,CAAC;YACL,CAAC;SAGN,CAAC;QAKK,kBAAa,GAAc;YAC9B,EAAC,IAAI,EAAE,EAAE,EAAE,KAAK,EAAE,EAAE,EAAC;SACxB,CAAC;QACK,oBAAe,GAAc,EAAE,CAAC;QAEhC,qBAAgB,GAAO;YAC1B,SAAS,EAAE,KAAK;YAChB,UAAU,EAAE,IAAI;YAChB,MAAM,EAAE;gBACJ,KAAK,EAAE,CAAC;wBACJ,OAAO,EAAE,IAAI;wBACb,KAAK,EAAE;4BACH,WAAW,EAAE,IAAI;4BACjB,KAAK,EAAE,CAAC;4BACR,SAAS,EAAE,CAAC;4BACZ,GAAG,EAAE,GAAG;4BACR,QAAQ,EAAE,UAAS,KAAa,EAAE,KAAK,EAAE,MAAM;gCAC3C,MAAM,CAAC,KAAK,GAAG,GAAG,CAAC;4BACvB,CAAC;yBACJ;qBACJ,CAAC;aACL;SACJ,CAAC;QACK,oBAAe,GAAc,CAAC;gBACnC,eAAe,EAAE,sBAAsB;gBACvC,WAAW,EAAE,qBAAqB;gBAClC,oBAAoB,EAAE,oBAAoB;gBAC1C,gBAAgB,EAAE,MAAM;gBACxB,yBAAyB,EAAE,MAAM;gBACjC,qBAAqB,EAAE,oBAAoB;aAC5C,CAAC,CAAC;QAKI,oBAAe,GAAW,IAAI,CAAC;QAC/B,kBAAa,GAAU,MAAM,CAAC;QAIrC,iBAAY,GAAG,CAAC,CAAC;QACjB,iBAAY,GAAG,EAAE,CAAC;QAClB,eAAU,GAAG,KAAK,CAAC;IA5CnB,CAAC;IA6CD,+BAAQ,GAAR;QACI,IAAI,IAAI,GAAG,IAAI,CAAC;QAChB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,kEAAW,CAAC,UAAU,EAAC,EAAE,CAAC;aAClD,SAAS,CACN,UAAS,IAAI;YACT,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;YACrB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,MAAM,CAAC;YACjC,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,KAAK,CAAC;YAClC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;YAE3B,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;YACvB,IAAI,CAAC,YAAY,GAAI,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC;YAChD,IAAI,CAAC,YAAY,GAAI,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC;YAC9C,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,aAAa,CAAC;gBAC7B,KAAK,EAAE,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,EAAE,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC;gBACxD,KAAK,EAAE;oBACH,KAAK,EAAE,IAAI,CAAC,UAAU,CAAC,KAAK;oBAC5B,KAAK,EAAE,IAAI,CAAC,UAAU,CAAC,QAAQ;iBAClC;aACJ,CAAC,CAAC;YACH,IAAI,CAAC,SAAS,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,EAAE,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;YACnE,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,CAAC;YAE3B,UAAU,CAAC;gBACP,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;YAC5B,CAAC,EAAE,IAAI,CAAC,CAAC;QACb,CAAC,EACD,UAAS,KAAK;YACV,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;YACrB,IAAI,CAAC,aAAa,GAAQ,KAAK,CAAC;QACpC,CAAC,CACJ,CAAC;IAEN,CAAC;IAEM,mCAAY,GAAnB,UAAoB,CAAK;QACrB,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IACnB,CAAC;IAEM,mCAAY,GAAnB,UAAoB,CAAK;QACrB,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IACnB,CAAC;IAEM,+BAAQ,GAAf,UAAgB,MAAM;QAClB,+CAA+C;QAC/C,IAAI,CAAC,cAAc,GAAG,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,MAAM,CAAC,cAAc,CAAC,CAAC;QAC5E,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,MAAM,CAAC,cAAc,CAAC,CAAC;QAC1E,IAAI,CAAC,OAAO,EAAE,CAAC;IACnB,CAAC;IAEO,8BAAO,GAAf,UAAgB,OAAQ,EAAE,QAAS;QAC/B,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,UAAW,CAAC,CAAC,CAAC;YACnC,MAAM,CAAC;QACX,CAAC;QAED,IAAI,IAAI,GAAG,IAAI,CAAC;QAChB,IAAI,MAAM,GAAG,OAAO,IAAI;YACpB,UAAU,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;YAC7B,QAAQ,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;SAC9B;QACD,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,kEAAW,CAAC,UAAU,EAAE,MAAM,CAAC;aACvD,SAAS,CACN,UAAS,IAAI;YACT,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;YACrB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,MAAM,CAAC;YACjC,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,KAAK,CAAC;YAClC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;YAC3B,EAAE,CAAC,CAAC,QAAQ,CAAC,EAAC;gBACV,QAAQ,CAAC,IAAI,CAAC;YAClB,CAAC;QACL,CAAC,EACD,UAAS,KAAK;YACV,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;YACrB,IAAI,CAAC,aAAa,GAAQ,KAAK,CAAC;QACpC,CAAC,CACJ,CAAC;IACN,CAAC;IAEM,8BAAO,GAAd;QACI,IAAI,IAAI,GAAG,IAAI,CAAC;QAChB,IAAI,CAAC,OAAO,CAAC,EAAE,EAAE,UAAS,IAAI;YAC1B,IAAI,CAAC,SAAS,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,EAAE,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;YACnE,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,CAAC;QAC/B,CAAC,CAAC,CAAC;IACP,CAAC;IACL,mBAAC;AAAD,CAAC;AAnKoC;IAAhC,+EAAS,CAAE,uFAAkB,CAAE;kDAAQ,uFAAkB,oBAAlB,uFAAkB;2CAAC;AACzB;IAAjC,+EAAS,CAAE,mEAAmB,CAAE;kDAAS,mEAAmB,oBAAnB,mEAAmB;4CAAC;AAFrD,YAAY;IAJxB,+EAAS,CAAC;QACP,QAAQ,EAAE,WAAW;QACrB,kCAAgC;KACnC,CAAC;yDAgCoC,2EAAW,oBAAX,2EAAW,sDAAiB,gEAAiB,oBAAjB,gEAAiB;GA/BtE,YAAY,CAoKxB;AApKwB;;;;;;;;;;;;;;;;;;;;;;;;;;ACtBuD;AAGP;AAEpB;AAED;AACS;AAc7D,IAAa,aAAa;IA+BtB,uBAAqB,WAAwB,EAAU,KAAwB;QAA1D,gBAAW,GAAX,WAAW,CAAa;QAAU,UAAK,GAAL,KAAK,CAAmB;QA1B/E,YAAO,GAAW,KAAK,CAAC;QAExB,cAAS,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;QAKrB,cAAS,GAAkB;YACtB,EAAE,EAAF,UAAG,KAAa;gBACb,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;oBACR,MAAM,CAAC,MAAM,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC,MAAM,CAAC,kBAAkB,CAAC,CAAC;gBACzD,CAAC;YACH,CAAC;YACD,IAAI,EAAJ,UAAK,KAAa;gBACd,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;oBACR,EAAE,CAAC,CAAC,MAAM,CAAC,KAAK,EAAE,kBAAkB,CAAC,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;wBAC9C,IAAI,CAAC,GAAG,MAAM,CAAC,KAAK,EAAE,kBAAkB,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC;wBACrD,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;oBACzB,CAAC;oBACD,MAAM,CAAC,KAAK,CAAC;gBACjB,CAAC;YACL,CAAC;SAGN,CAAC;QAMK,kBAAa,GAAc;YAC9B,EAAC,IAAI,EAAE,EAAE,EAAE,KAAK,EAAE,EAAE,EAAC;SACxB,CAAC;QACK,oBAAe,GAAc,EAAE,CAAC;QAEhC,qBAAgB,GAAO;YAC1B,SAAS,EAAE,KAAK;YAChB,UAAU,EAAE,IAAI;YAChB,MAAM,EAAE;gBACJ,KAAK,EAAE,CAAC;wBACJ,OAAO,EAAE,IAAI;wBACb,KAAK,EAAE;4BACH,WAAW,EAAE,IAAI;4BACjB,KAAK,EAAE,CAAC;4BACR,SAAS,EAAE,CAAC;4BACZ,GAAG,EAAE,GAAG;4BACR,QAAQ,EAAE,UAAS,KAAa,EAAE,KAAK,EAAE,MAAM;gCAC3C,MAAM,CAAC,KAAK,GAAG,GAAG,CAAC;4BACvB,CAAC;yBACJ;qBACJ,CAAC;aACL;SAEJ,CAAC;QACK,oBAAe,GAAc,CAAC;gBACnC,eAAe,EAAE,sBAAsB;gBACvC,WAAW,EAAE,qBAAqB;gBAClC,oBAAoB,EAAE,oBAAoB;gBAC1C,gBAAgB,EAAE,MAAM;gBACxB,yBAAyB,EAAE,MAAM;gBACjC,qBAAqB,EAAE,oBAAoB;aAC5C,CAAC,CAAC;QAKI,oBAAe,GAAW,IAAI,CAAC;QAC/B,kBAAa,GAAU,MAAM,CAAC;QAIrC,iBAAY,GAAG,CAAC,CAAC;QACjB,iBAAY,GAAG,EAAE,CAAC;QAClB,eAAU,GAAG,KAAK,CAAC;IA7CnB,CAAC;IA8CD,gCAAQ,GAAR;QACI,IAAI,IAAI,GAAG,IAAI,CAAC;QAChB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,kEAAW,CAAC,WAAW,EAAE,EAAE,CAAC;aACpD,SAAS,CACN,UAAS,IAAI;YACT,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;YACrB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,MAAM,CAAC;YACjC,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,KAAK,CAAC;YAClC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;YAE3B,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;YACvB,IAAI,CAAC,YAAY,GAAI,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC;YAChD,IAAI,CAAC,YAAY,GAAI,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC;YAE9C,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,aAAa,CAAC;gBAC7B,KAAK,EAAE,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,EAAE,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC;gBACxD,KAAK,EAAE;oBACH,KAAK,EAAE,IAAI,CAAC,UAAU,CAAC,KAAK;oBAC5B,KAAK,EAAE,IAAI,CAAC,UAAU,CAAC,QAAQ;iBAClC;aACJ,CAAC,CAAC;YACH,IAAI,CAAC,SAAS,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,EAAE,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;YACnE,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,CAAC;YAG3B,UAAU,CAAC;gBACP,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;YAC5B,CAAC,EAAE,IAAI,CAAC,CAAC;QACb,CAAC,EACD,UAAS,KAAK;YACV,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;YACrB,IAAI,CAAC,aAAa,GAAQ,KAAK,CAAC;QACpC,CAAC,CACJ,CAAC;IAEN,CAAC;IAEM,oCAAY,GAAnB,UAAoB,CAAK;QACrB,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IACnB,CAAC;IAEM,oCAAY,GAAnB,UAAoB,CAAK;QACrB,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IACnB,CAAC;IAEM,gCAAQ,GAAf,UAAgB,MAAM;QAClB,IAAI,CAAC,cAAc,GAAG,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,MAAM,CAAC,cAAc,CAAC,CAAC;QAC5E,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,MAAM,CAAC,cAAc,CAAC,CAAC;QAC1E,IAAI,CAAC,OAAO,EAAE,CAAC;IACnB,CAAC;IAEO,+BAAO,GAAf,UAAgB,OAAQ,EAAE,QAAS;QAC/B,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,UAAW,CAAC,CAAC,CAAC;YACnC,MAAM,CAAC;QACX,CAAC;QAED,IAAI,IAAI,GAAG,IAAI,CAAC;QAChB,IAAI,MAAM,GAAG,OAAO,IAAI;YACpB,UAAU,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;YAC7B,QAAQ,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;SAC9B;QACD,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,kEAAW,CAAC,WAAW,EAAE,MAAM,CAAC;aACxD,SAAS,CACN,UAAS,IAAI;YACT,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;YACrB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,MAAM,CAAC;YACjC,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,KAAK,CAAC;YAClC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;YAC3B,EAAE,CAAC,CAAC,QAAQ,CAAC,EAAC;gBACV,QAAQ,CAAC,IAAI,CAAC;YAClB,CAAC;QACL,CAAC,EACD,UAAS,KAAK;YACV,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;YACrB,IAAI,CAAC,aAAa,GAAQ,KAAK,CAAC;QACpC,CAAC,CACJ,CAAC;IACN,CAAC;IAEM,+BAAO,GAAd;QACI,IAAI,IAAI,GAAG,IAAI,CAAC;QAChB,IAAI,CAAC,OAAO,CAAC,EAAE,EAAE,UAAS,IAAI;YAC1B,IAAI,CAAC,SAAS,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,EAAE,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;YACnE,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,CAAC;QAC/B,CAAC,CAAC,CAAC;IACP,CAAC;IACL,oBAAC;AAAD,CAAC;AAtKoC;IAAhC,+EAAS,CAAE,uFAAkB,CAAE;kDAAQ,uFAAkB,oBAAlB,uFAAkB;4CAAC;AACzB;IAAjC,+EAAS,CAAE,mEAAmB,CAAE;kDAAS,mEAAmB,oBAAnB,mEAAmB;6CAAC;AAFrD,aAAa;IAJzB,+EAAS,CAAC;QACP,QAAQ,EAAE,YAAY;QACtB,kCAAiC;KACpC,CAAC;yDAgCoC,2EAAW,oBAAX,2EAAW,sDAAiB,gEAAiB,oBAAjB,gEAAiB;GA/BtE,aAAa,CAuKzB;AAvKyB;;;;;;;;;;;;;;;;;;;;;;;;;;ACtBsD;AAGP;AAEpB;AAED;AACS;AAe7D,IAAa,eAAe;IAuFxB,yBAAqB,WAAwB,EAAU,KAAwB;QAA1D,gBAAW,GAAX,WAAW,CAAa;QAAU,UAAK,GAAL,KAAK,CAAmB;QAlF/E,YAAO,GAAW,KAAK,CAAC;QAExB,cAAS,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;QAMrB,cAAS,GAAkB;YACtB,EAAE,EAAF,UAAG,KAAa;gBACb,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;oBACR,MAAM,CAAC,MAAM,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC,MAAM,CAAC,kBAAkB,CAAC,CAAC;gBACzD,CAAC;YACH,CAAC;YACD,IAAI,EAAJ,UAAK,KAAa;gBACd,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;oBACR,EAAE,CAAC,CAAC,MAAM,CAAC,KAAK,EAAE,kBAAkB,CAAC,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;wBAC9C,IAAI,CAAC,GAAG,MAAM,CAAC,KAAK,EAAE,kBAAkB,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC;wBACrD,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;oBACzB,CAAC;oBACD,MAAM,CAAC,KAAK,CAAC;gBACjB,CAAC;YACL,CAAC;SAGN,CAAC;QAEK,kBAAa,GAAc;YAC9B,EAAC,IAAI,EAAE,EAAE,EAAE,KAAK,EAAE,EAAE,EAAC,EAAE,EAAC,IAAI,EAAE,EAAE,EAAE,KAAK,EAAE,EAAE,EAAC,EAAE,EAAC,IAAI,EAAE,EAAE,EAAE,KAAK,EAAE,EAAE,EAAC;SACtE,CAAC;QACK,oBAAe,GAAc,EAAE,CAAC;QAEhC,qBAAgB,GAAO;YAC1B,SAAS,EAAE,KAAK;YAChB,UAAU,EAAE,IAAI;YAChB,MAAM,EAAE;gBACJ,KAAK,EAAE,CAAC;wBACJ,KAAK,EAAE;4BACH,QAAQ,EAAE,UAAS,KAAa,EAAE,KAAK,EAAE,MAAM;gCAC3C,IAAI,CAAC,GAAG,IAAI,EAAE,EAAE,GAAG,CAAC,CAAC;gCACrB,IAAI,KAAK,GAAG,KAAK,CAAC;gCAClB,EAAE,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC,CAAC;oCACb,MAAM,CAAC,SAAS,CAAC;gCACrB,CAAC;gCACD,IAAI,KAAK,GAAG,CAAC,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,EACrE,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;gCAC9C,IAAI,IAAI,GAAG,UAAU,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,GAAG,GAAG,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;gCAC7E,MAAM,CAAC,IAAI,CAAC;4BAChB,CAAC;yBACJ;qBACL,CAAC;aACH;SACL,CAAC;QACK,oBAAe,GAAc,CAAC;gBACnC,eAAe,EAAE,sBAAsB;gBACvC,WAAW,EAAE,sBAAsB;gBACnC,oBAAoB,EAAE,oBAAoB;gBAC1C,gBAAgB,EAAE,MAAM;gBACxB,yBAAyB,EAAE,MAAM;gBACjC,qBAAqB,EAAE,oBAAoB;aAC5C,EAAE;gBACD,eAAe,EAAE,uBAAuB;gBACxC,WAAW,EAAE,qBAAqB;gBAClC,oBAAoB,EAAE,oBAAoB;gBAC1C,gBAAgB,EAAE,MAAM;gBACxB,yBAAyB,EAAE,MAAM;gBACjC,qBAAqB,EAAE,oBAAoB;aAC5C,EAAE;gBACD,eAAe,EAAE,sBAAsB;gBACvC,WAAW,EAAE,qBAAqB;gBAClC,oBAAoB,EAAE,oBAAoB;gBAC1C,gBAAgB,EAAE,MAAM;gBACxB,yBAAyB,EAAE,MAAM;gBACjC,qBAAqB,EAAE,oBAAoB;aAC5C,CAAC,CAAC;QAKI,oBAAe,GAAW,IAAI,CAAC;QAC/B,kBAAa,GAAU,MAAM,CAAC;QAMrC,iBAAY,GAAG,CAAC,CAAC;QACjB,iBAAY,GAAG,EAAE,CAAC;QAClB,eAAU,GAAG,KAAK,CAAC;IAJnB,CAAC;IAKD,kCAAQ,GAAR;QACI,IAAI,IAAI,GAAG,IAAI,CAAC;QAChB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,kEAAW,CAAC,aAAa,EAAE,EAAE,CAAC;aACtD,SAAS,CACN,UAAS,IAAI;YACT,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;YACrB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,MAAM,CAAC;YACjC,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,KAAK,CAAC;YAClC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;YAE3B,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;YACvB,IAAI,CAAC,YAAY,GAAI,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC;YAChD,IAAI,CAAC,YAAY,GAAI,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC;YAC9C,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,aAAa,CAAC;gBAC7B,KAAK,EAAE,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,EAAE,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC;gBACxD,KAAK,EAAE;oBACH,KAAK,EAAE,IAAI,CAAC,UAAU,CAAC,KAAK;oBAC5B,KAAK,EAAE,IAAI,CAAC,UAAU,CAAC,QAAQ;iBAClC;aACJ,CAAC,CAAC;YACH,IAAI,CAAC,SAAS,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,EAAE,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;YAEnE,UAAU,CAAC;gBACP,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;YAC5B,CAAC,EAAE,IAAI,CAAC,CAAC;QACb,CAAC,EACD,UAAS,KAAK;YACV,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;YACrB,IAAI,CAAC,aAAa,GAAQ,KAAK,CAAC;QACpC,CAAC,CACJ,CAAC;IAEN,CAAC;IAEM,sCAAY,GAAnB,UAAoB,CAAK;QACrB,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IACnB,CAAC;IAEM,sCAAY,GAAnB,UAAoB,CAAK;QACrB,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IACnB,CAAC;IAEM,kCAAQ,GAAf,UAAgB,MAAM;QAClB,IAAI,CAAC,cAAc,GAAG,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,MAAM,CAAC,cAAc,CAAC,CAAC;QAC5E,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,MAAM,CAAC,cAAc,CAAC,CAAC;QAC1E,IAAI,CAAC,OAAO,EAAE,CAAC;IACnB,CAAC;IAEO,iCAAO,GAAf,UAAgB,OAAQ,EAAE,QAAS;QAC/B,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,UAAW,CAAC,CAAC,CAAC;YACnC,MAAM,CAAC;QACX,CAAC;QAED,IAAI,IAAI,GAAG,IAAI,CAAC;QAChB,IAAI,MAAM,GAAG,OAAO,IAAI;YACpB,UAAU,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;YAC7B,QAAQ,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;SAC9B;QACD,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,kEAAW,CAAC,aAAa,EAAE,MAAM,CAAC;aAC1D,SAAS,CACN,UAAS,IAAI;YACT,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;YACrB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,MAAM,CAAC;YACjC,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,KAAK,CAAC;YAClC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;YAC3B,EAAE,CAAC,CAAC,QAAQ,CAAC,EAAC;gBACV,QAAQ,CAAC,IAAI,CAAC;YAClB,CAAC;QACL,CAAC,EACD,UAAS,KAAK;YACV,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;YACrB,IAAI,CAAC,aAAa,GAAQ,KAAK,CAAC;QACpC,CAAC,CACJ,CAAC;IACN,CAAC;IAEM,iCAAO,GAAd;QACI,IAAI,IAAI,GAAG,IAAI,CAAC;QAChB,IAAI,CAAC,OAAO,CAAC,EAAE,EAAE,UAAS,IAAI;YAC1B,IAAI,CAAC,SAAS,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,EAAE,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;YACnE,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,CAAC;QAC/B,CAAC,CAAC,CAAC;IACP,CAAC;IACL,sBAAC;AAAD,CAAC;AAlLoC;IAAhC,+EAAS,CAAE,uFAAkB,CAAE;kDAAQ,uFAAkB,oBAAlB,uFAAkB;8CAAC;AACzB;IAAjC,+EAAS,CAAE,mEAAmB,CAAE;kDAAS,mEAAmB,oBAAnB,mEAAmB;+CAAC;AAFrD,eAAe;IAJ3B,+EAAS,CAAC;QACP,QAAQ,EAAE,cAAc;QACxB,kCAAmC;KACtC,CAAC;yDAwFoC,2EAAW,oBAAX,2EAAW,sDAAiB,gEAAiB,oBAAjB,gEAAiB;GAvFtE,eAAe,CAmL3B;AAnL2B;;;;;;;;;;;;;;;;;;;;;;;;;;ACvBoD;AAGP;AAEpB;AAED;AACS;AAe7D,IAAa,gBAAgB;IAgFzB,0BAAqB,WAAwB,EAAU,KAAwB;QAA1D,gBAAW,GAAX,WAAW,CAAa;QAAU,UAAK,GAAL,KAAK,CAAmB;QA3E/E,YAAO,GAAW,KAAK,CAAC;QAExB,cAAS,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;QAMrB,cAAS,GAAkB;YACtB,EAAE,EAAF,UAAG,KAAa;gBACb,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;oBACR,MAAM,CAAC,MAAM,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC,MAAM,CAAC,kBAAkB,CAAC,CAAC;gBACzD,CAAC;YACH,CAAC;YACD,IAAI,EAAJ,UAAK,KAAa;gBACd,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;oBACR,EAAE,CAAC,CAAC,MAAM,CAAC,KAAK,EAAE,kBAAkB,CAAC,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;wBAC9C,IAAI,CAAC,GAAG,MAAM,CAAC,KAAK,EAAE,kBAAkB,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC;wBACrD,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;oBACzB,CAAC;oBACD,MAAM,CAAC,KAAK,CAAC;gBACjB,CAAC;YACL,CAAC;SAGN,CAAC;QAEK,kBAAa,GAAc;YAC9B,EAAC,IAAI,EAAE,EAAE,EAAE,KAAK,EAAE,EAAE,EAAC,EAAE,EAAC,IAAI,EAAE,EAAE,EAAE,KAAK,EAAE,EAAE,EAAC;SAC/C,CAAC;QACK,oBAAe,GAAc,EAAE,CAAC;QAEhC,qBAAgB,GAAO;YAC1B,SAAS,EAAE,KAAK;YAChB,UAAU,EAAE,IAAI;YAChB,MAAM,EAAE;gBACJ,KAAK,EAAE,CAAC;wBACJ,KAAK,EAAE;4BACH,QAAQ,EAAE,UAAS,KAAa,EAAE,KAAK,EAAE,MAAM;gCAC3C,IAAI,CAAC,GAAG,IAAI,EAAE,EAAE,GAAG,CAAC,CAAC;gCACrB,IAAI,KAAK,GAAG,KAAK,CAAC;gCAClB,EAAE,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC,CAAC;oCACb,MAAM,CAAC,SAAS,CAAC;gCACrB,CAAC;gCACD,IAAI,KAAK,GAAG,CAAC,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,EACrE,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;gCAC9C,IAAI,IAAI,GAAG,UAAU,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,GAAG,GAAG,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;gCAC7E,MAAM,CAAC,IAAI,CAAC;4BAChB,CAAC;yBACJ;qBACL,CAAC;aACH;SACL,CAAC;QACK,oBAAe,GAAc,CAAC;gBACnC,eAAe,EAAE,sBAAsB;gBACvC,WAAW,EAAE,sBAAsB;gBACnC,oBAAoB,EAAE,oBAAoB;gBAC1C,gBAAgB,EAAE,MAAM;gBACxB,yBAAyB,EAAE,MAAM;gBACjC,qBAAqB,EAAE,oBAAoB;aAC5C,EAAE;gBACD,eAAe,EAAE,uBAAuB;gBACxC,WAAW,EAAE,qBAAqB;gBAClC,oBAAoB,EAAE,oBAAoB;gBAC1C,gBAAgB,EAAE,MAAM;gBACxB,yBAAyB,EAAE,MAAM;gBACjC,qBAAqB,EAAE,oBAAoB;aAC5C,CAAC,CAAC;QAKI,oBAAe,GAAW,IAAI,CAAC;QAC/B,kBAAa,GAAU,MAAM,CAAC;QAMrC,iBAAY,GAAG,CAAC,CAAC;QACjB,iBAAY,GAAG,EAAE,CAAC;QAClB,eAAU,GAAG,KAAK,CAAC;IAJnB,CAAC;IAKD,mCAAQ,GAAR;QACI,IAAI,IAAI,GAAG,IAAI,CAAC;QAChB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,kEAAW,CAAC,cAAc,EAAE,EAAE,CAAC;aACvD,SAAS,CACN,UAAS,IAAI;YACT,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;YACrB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,MAAM,CAAC;YACjC,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,KAAK,CAAC;YAClC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;YAE3B,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;YACvB,IAAI,CAAC,YAAY,GAAI,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC;YAChD,IAAI,CAAC,YAAY,GAAI,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC;YAC9C,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,aAAa,CAAC;gBAC7B,KAAK,EAAE,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,EAAE,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC;gBACxD,KAAK,EAAE;oBACH,KAAK,EAAE,IAAI,CAAC,UAAU,CAAC,KAAK;oBAC5B,KAAK,EAAE,IAAI,CAAC,UAAU,CAAC,QAAQ;iBAClC;aACJ,CAAC,CAAC;YACH,IAAI,CAAC,SAAS,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,EAAE,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;YAEnE,UAAU,CAAC;gBACP,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;YAC5B,CAAC,EAAE,IAAI,CAAC,CAAC;QACb,CAAC,EACD,UAAS,KAAK;YACV,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;YACrB,IAAI,CAAC,aAAa,GAAQ,KAAK,CAAC;QACpC,CAAC,CACJ,CAAC;IAEN,CAAC;IAEM,uCAAY,GAAnB,UAAoB,CAAK;QACrB,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IACnB,CAAC;IAEM,uCAAY,GAAnB,UAAoB,CAAK;QACrB,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IACnB,CAAC;IAEM,mCAAQ,GAAf,UAAgB,MAAM;QAClB,IAAI,CAAC,cAAc,GAAG,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,MAAM,CAAC,cAAc,CAAC,CAAC;QAC5E,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,MAAM,CAAC,cAAc,CAAC,CAAC;QAC1E,IAAI,CAAC,OAAO,EAAE,CAAC;IACnB,CAAC;IAEO,kCAAO,GAAf,UAAgB,OAAQ,EAAE,QAAS;QAC/B,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,UAAW,CAAC,CAAC,CAAC;YACnC,MAAM,CAAC;QACX,CAAC;QAED,IAAI,IAAI,GAAG,IAAI,CAAC;QAChB,IAAI,MAAM,GAAG,OAAO,IAAI;YACpB,UAAU,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;YAC7B,QAAQ,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;SAC9B;QACD,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,kEAAW,CAAC,cAAc,EAAE,MAAM,CAAC;aAC3D,SAAS,CACN,UAAS,IAAI;YACT,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;YACrB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,MAAM,CAAC;YACjC,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,KAAK,CAAC;YAClC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;YAC3B,EAAE,CAAC,CAAC,QAAQ,CAAC,EAAC;gBACV,QAAQ,CAAC,IAAI,CAAC;YAClB,CAAC;QACL,CAAC,EACD,UAAS,KAAK;YACV,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;YACrB,IAAI,CAAC,aAAa,GAAQ,KAAK,CAAC;QACpC,CAAC,CACJ,CAAC;IACN,CAAC;IAEM,kCAAO,GAAd;QACI,IAAI,IAAI,GAAG,IAAI,CAAC;QAChB,IAAI,CAAC,OAAO,CAAC,EAAE,EAAE,UAAS,IAAI;YAC1B,IAAI,CAAC,SAAS,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,EAAE,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;YACnE,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,CAAC;QAC/B,CAAC,CAAC,CAAC;IACP,CAAC;IACL,uBAAC;AAAD,CAAC;AA3KoC;IAAhC,+EAAS,CAAE,uFAAkB,CAAE;kDAAQ,uFAAkB,oBAAlB,uFAAkB;+CAAC;AACzB;IAAjC,+EAAS,CAAE,mEAAmB,CAAE;kDAAS,mEAAmB,oBAAnB,mEAAmB;gDAAC;AAFrD,gBAAgB;IAJ5B,+EAAS,CAAC;QACP,QAAQ,EAAE,eAAe;QACzB,kCAAoC;KACvC,CAAC;yDAiFoC,2EAAW,oBAAX,2EAAW,sDAAiB,gEAAiB,oBAAjB,gEAAiB;GAhFtE,gBAAgB,CA4K5B;AA5K4B;;;;;;;;;;;;;;;;;;;;;;;;;;ACvBmD;AAGP;AAEpB;AAED;AACS;AAe7D,IAAa,kBAAkB;IAgC3B,4BAAqB,WAAwB,EAAU,KAAwB;QAA1D,gBAAW,GAAX,WAAW,CAAa;QAAU,UAAK,GAAL,KAAK,CAAmB;QA3B/E,YAAO,GAAW,KAAK,CAAC;QAExB,cAAS,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;QAMrB,cAAS,GAAkB;YACtB,EAAE,EAAF,UAAG,KAAa;gBACb,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;oBACR,MAAM,CAAC,MAAM,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC,MAAM,CAAC,kBAAkB,CAAC,CAAC;gBACzD,CAAC;YACH,CAAC;YACD,IAAI,EAAJ,UAAK,KAAa;gBACd,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;oBACR,EAAE,CAAC,CAAC,MAAM,CAAC,KAAK,EAAE,kBAAkB,CAAC,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;wBAC9C,IAAI,CAAC,GAAG,MAAM,CAAC,KAAK,EAAE,kBAAkB,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC;wBACrD,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;oBACzB,CAAC;oBACD,MAAM,CAAC,KAAK,CAAC;gBACjB,CAAC;YACL,CAAC;SAGN,CAAC;QAKK,kBAAa,GAAc;YAC9B,EAAC,IAAI,EAAE,EAAE,EAAE,KAAK,EAAE,EAAE,EAAC;SACxB,CAAC;QACK,oBAAe,GAAc,EAAE,CAAC;QAEhC,qBAAgB,GAAO;YAC1B,SAAS,EAAE,KAAK;YAChB,UAAU,EAAE,IAAI;SACnB,CAAC;QACK,oBAAe,GAAc,CAAC;gBACnC,eAAe,EAAE,sBAAsB;gBACvC,WAAW,EAAE,qBAAqB;gBAClC,oBAAoB,EAAE,oBAAoB;gBAC1C,gBAAgB,EAAE,MAAM;gBACxB,yBAAyB,EAAE,MAAM;gBACjC,qBAAqB,EAAE,oBAAoB;aAC5C,CAAC,CAAC;QAKI,oBAAe,GAAW,IAAI,CAAC;QAC/B,kBAAa,GAAU,MAAM,CAAC;QAIrC,iBAAY,GAAG,CAAC,CAAC;QACjB,iBAAY,GAAG,EAAE,CAAC;QAClB,eAAU,GAAG,KAAK,CAAC;IA9BnB,CAAC;IA+BD,qCAAQ,GAAR;QACI,IAAI,IAAI,GAAG,IAAI,CAAC;QAChB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,kEAAW,CAAC,YAAY,EAAC,EAAE,CAAC;aACpD,SAAS,CACN,UAAS,IAAI;YACT,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;YACrB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,MAAM,CAAC;YACjC,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,KAAK,CAAC;YAClC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;YAE3B,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;YACvB,IAAI,CAAC,YAAY,GAAI,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC;YAChD,IAAI,CAAC,YAAY,GAAI,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC;YAC9C,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,aAAa,CAAC;gBAC7B,KAAK,EAAE,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,EAAE,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC;gBACxD,KAAK,EAAE;oBACH,KAAK,EAAE,IAAI,CAAC,UAAU,CAAC,KAAK;oBAC5B,KAAK,EAAE,IAAI,CAAC,UAAU,CAAC,QAAQ;iBAClC;aACJ,CAAC,CAAC;YACH,IAAI,CAAC,SAAS,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,EAAE,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;YACnE,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,CAAC;YAE3B,UAAU,CAAC;gBACP,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;YAC5B,CAAC,EAAE,IAAI,CAAC,CAAC;QAGb,CAAC,EACD,UAAS,KAAK;YACV,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;YACrB,IAAI,CAAC,aAAa,GAAQ,KAAK,CAAC;QACpC,CAAC,CACJ,CAAC;IAEN,CAAC;IAEM,yCAAY,GAAnB,UAAoB,CAAK;QACrB,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IACnB,CAAC;IAEM,yCAAY,GAAnB,UAAoB,CAAK;QACrB,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IACnB,CAAC;IAEM,qCAAQ,GAAf,UAAgB,MAAM;QAClB,IAAI,CAAC,cAAc,GAAG,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,MAAM,CAAC,cAAc,CAAC,CAAC;QAC5E,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,MAAM,CAAC,cAAc,CAAC,CAAC;QAC1E,IAAI,CAAC,OAAO,EAAE,CAAC;IACnB,CAAC;IAEO,oCAAO,GAAf,UAAgB,OAAQ,EAAE,QAAS;QAC/B,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,UAAW,CAAC,CAAC,CAAC;YACnC,MAAM,CAAC;QACX,CAAC;QAED,IAAI,IAAI,GAAG,IAAI,CAAC;QAChB,IAAI,MAAM,GAAG,OAAO,IAAI;YACpB,UAAU,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;YAC7B,QAAQ,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;SAC9B;QACD,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,kEAAW,CAAC,YAAY,EAAE,MAAM,CAAC;aACzD,SAAS,CACN,UAAS,IAAI;YACT,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;YACrB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,MAAM,CAAC;YACjC,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,KAAK,CAAC;YAClC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;YAC3B,EAAE,CAAC,CAAC,QAAQ,CAAC,EAAC;gBACV,QAAQ,CAAC,IAAI,CAAC;YAClB,CAAC;QACL,CAAC,EACD,UAAS,KAAK;YACV,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;YACrB,IAAI,CAAC,aAAa,GAAQ,KAAK,CAAC;QACpC,CAAC,CACJ,CAAC;IACN,CAAC;IAEM,oCAAO,GAAd;QACI,IAAI,IAAI,GAAG,IAAI,CAAC;QAChB,IAAI,CAAC,OAAO,CAAC,EAAE,EAAE,UAAS,IAAI;YAC1B,IAAI,CAAC,SAAS,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,EAAE,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;YACnE,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,CAAC;QAC/B,CAAC,CAAC,CAAC;IACP,CAAC;IAEL,yBAAC;AAAD,CAAC;AAxJoC;IAAhC,+EAAS,CAAE,uFAAkB,CAAE;kDAAQ,uFAAkB,oBAAlB,uFAAkB;iDAAC;AACzB;IAAjC,+EAAS,CAAE,mEAAmB,CAAE;kDAAS,mEAAmB,oBAAnB,mEAAmB;kDAAC;AAFrD,kBAAkB;IAJ9B,+EAAS,CAAC;QACP,QAAQ,EAAE,iBAAiB;QAC3B,kCAAsC;KACzC,CAAC;yDAiCoC,2EAAW,oBAAX,2EAAW,sDAAiB,gEAAiB,oBAAjB,gEAAiB;GAhCtE,kBAAkB,CAyJ9B;AAzJ8B;;;;;;;;;;;;;;;;;;ACvBW;AAM1C,IAAa,eAAe;IAA5B;IAA+B;IAAA;AAAA;AAAlB,eAAe;IAJ3B,+EAAS,CAAC;QACP,QAAQ,EAAE,QAAQ;QAClB,kCAAmC;KACtC,CAAC;GACW,eAAe,CAAG;AAAH;;;;;;;;;;;;;;;;;;;ACNW;AACiB;AACL;AAQnD,IAAa,YAAY;IAAzB;IAA2B,CAAC;IAAD,mBAAC;AAAD,CAAC;AAAf,YAAY;IANxB,8EAAQ,CAAC;QACN,YAAY,EAAE,CAAC,0EAAe,CAAC;QAC/B,OAAO,EAAO,CAAC,gFAAa,CAAC;QAC7B,OAAO,EAAO,CAAC,0EAAe,CAAC;KAClC,CAAC;GAEW,YAAY,CAAG;AAAH;;;;;;;;;;;;;;;;;ACViB;AAQ1C,IAAa,cAAc;IAA3B;IASA;IAPI,wCAAe,GAAf;QACI,MAAM,CAAC,MAAM,CAAC,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;IACvC,CAAC;IAED,oCAAW,GAAX;QACI,MAAM,CAAC,MAAM,CAAC,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC;IAC1C,CAAC;IACL;AAAA;AATa,cAAc;IAJ1B,+EAAS,CAAC;QACP,QAAQ,EAAE,OAAO;QACjB,kCAAkC;KACrC,CAAC;GACW,cAAc,CAS3B;AAT2B;;;;;;;;;;;;;;;;;;;;;;;;ACRY;AACM;AACW;AAEP;AACA;AAEgB;AACH;AACT;AAQrD,IAAa,aAAa;IAA1B;IAA4B,CAAC;IAAD,oBAAC;AAAD,CAAC;AAAhB,aAAa;IANzB,8EAAQ,CAAC;QACN,YAAY,EAAE,CAAC,wEAAc,EAAC,wEAAc,CAAC;QAC7C,OAAO,EAAO,CAAC,gFAAa,EAAE,qEAAY,EAAE,uFAAgB,EAAE,oFAAe,EAAE,2EAAY,CAAC;QAC5F,OAAO,EAAO,CAAC,wEAAc,EAAC,wEAAc,CAAC;KAChD,CAAC;GAEW,aAAa,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;ACjBgB;AACD;AAEoB;AAS7D,IAAa,mBAAmB;IAS5B,6BAAoB,MAAc,EAAU,WAAwB;QAAhD,WAAM,GAAN,MAAM,CAAQ;QAAU,gBAAW,GAAX,WAAW,CAAa;QAPvE,SAAI,GAAG;YACN,QAAQ,EAAE,EAAE;SACZ,CAAC;QACC,SAAI,GAAG;YACH,MAAM,EAAE,KAAK;SAChB,CAAC;IAEqE,CAAC;IAExE,6CAAe,GAAf;QACI,MAAM,CAAC,YAAY,CAAC,CAAC,SAAS,EAAE,CAAC;IACrC,CAAC;IAED,sCAAQ,GAAR;QACC,IAAI,IAAI,GAAG,IAAI,CAAC;QAEhB,IAAI,CAAC,WAAW,CAAC,iBAAiB,CAAC,UAAS,IAAI;YAC/C,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;YAChB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QAC7B,CAAC,CAAC;IACH,CAAC;IAED,yCAAW,GAAX,UAAY,SAAiB;QACzB,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC;IACnD,CAAC;IAGL;AAAA;AA7Ba,mBAAmB;IAL/B,+EAAS,CAAC;QACP,QAAQ,EAAE,YAAY;QACtB,kCAAuC;KAC1C,CAAC;yDAW8B,+DAAM,oBAAN,+DAAM,sDAAuB,2EAAW,oBAAX,2EAAW;GAT3D,mBAAmB,CA6BhC;AA7BgC;;;;;;;;;;;;;;;;;;;;;ACZO;AACiB;AACX;AACc;AAQ3D,IAAa,gBAAgB;IAA7B;IAA+B,CAAC;IAAD,uBAAC;AAAD,CAAC;AAAnB,gBAAgB;IAN5B,8EAAQ,CAAC;QACN,YAAY,EAAE,CAAC,kFAAmB,CAAC;QACnC,OAAO,EAAO,CAAC,gFAAa,EAAE,qEAAY,CAAC;QAC3C,OAAO,EAAO,CAAC,kFAAmB,CAAC;KACtC,CAAC;GAEW,gBAAgB,CAAG;AAAH;;;;;;;;;;;;;;;;;ACXa;AAY1C,IAAa,kBAAkB;IAL/B;QAOI,cAAS,GAAU,KAAK,CAAC;IAK7B,CAAC;IAJG,6CAAgB,GAAhB;QACI,MAAM,CAAC,MAAM,CAAC,CAAC,WAAW,CAAC,aAAa,CAAC,CAAC;QAC3C,kBAAkB;IACrB,CAAC;IACL,yBAAC;AAAD,CAAC;AAPY,kBAAkB;IAL9B,+EAAS,CAAC;QACP,QAAQ,EAAE,WAAW;QACrB,kCAAsC;KAEzC,CAAC;GACW,kBAAkB,CAO9B;AAP8B;;;;;;;;;;;;;;;;;;;ACZQ;AACiB;AACC;AAQzD,IAAa,eAAe;IAA5B;IAA8B,CAAC;IAAD,sBAAC;AAAD,CAAC;AAAlB,eAAe;IAN3B,8EAAQ,CAAC;QACN,YAAY,EAAE,CAAC,gFAAkB,CAAC;QAClC,OAAO,EAAO,CAAC,gFAAa,CAAC;QAC7B,OAAO,EAAO,CAAC,gFAAkB,CAAC;KACrC,CAAC;GAEW,eAAe,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;ACCL;AAEM;AAE7B,8BAA8B;AAE9B,IAAa,kBAAkB;IAkC7B,4BAAmB,OAAkB;QAhBrB,WAAM,GAAc,EAAE,CAAC;QACvB,YAAO,GAAO,EAAE,CAAC;QAKhB,eAAU,GAAqB,IAAI,2DAAY,EAAE,CAAC;QAClD,eAAU,GAAqB,IAAI,2DAAY,EAAE,CAAC;QAK3D,aAAQ,GAAW,KAAK,CAAC;QAK/B,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;IACzB,CAAC;IAEM,qCAAQ,GAAf;QACE,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;QACvD,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC;QACtC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACrB,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;YAC/B,IAAI,CAAC,OAAO,EAAE,CAAC;QACjB,CAAC;IACH,CAAC;IAEM,wCAAW,GAAlB,UAAmB,OAAsB;QACvC,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;YAClB,EAAE,CAAC,CAAC,OAAO,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;gBACnC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC,YAAY,CAAC;YACzD,CAAC;YACD,mDAAmD;YACnD,EAAE,CAAC,CAAC,OAAO,CAAC,cAAc,CAAC,MAAM,CAAC,IAAI,OAAO,CAAC,cAAc,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;gBACzE,EAAE,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;oBACpB,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,YAAY,CAAC,CAAC;gBACrD,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACN,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,YAAY,CAAC,CAAC;gBACzD,CAAC;gBAED,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC;YACtB,CAAC;YAAC,IAAI,CAAC,CAAC;gBACR,8BAA8B;gBAC5B,IAAI,CAAC,OAAO,EAAE,CAAC;YACjB,CAAC;QACH,CAAC;IACH,CAAC;IAEM,wCAAW,GAAlB;QACE,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;YACf,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC;YACrB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,CAAC;QACtB,CAAC;IACH,CAAC;IAEM,4CAAe,GAAtB,UAAuB,GAAO,mCAAkC;QAAhE,iBAkCC;QAjCC,IAAI,QAAQ,GAAO,IAAI,CAAC,WAAW,EAAE,CAAC;QAEtC,IAAI,OAAO,GAAO,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;QAClD,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,KAAK,KAAK,CAAC,CAAC,CAAC;YAC1B,OAAO,CAAC,MAAM,GAAG,EAAC,OAAO,EAAE,KAAK,EAAC,CAAC;QACpC,CAAC;QACD,sCAAsC;QACtC,OAAO,CAAC,KAAK,GAAG,OAAO,CAAC,KAAK,IAAI,EAAE,CAAC;QACpC,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC;YAC3B,OAAO,CAAC,KAAK,CAAC,OAAO,GAAG,UAAC,MAAiB;gBACxC,EAAE,CAAC,CAAC,MAAM,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC;oBAC7B,MAAM,CAAC;gBACT,CAAC;gBACD,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,EAAC,MAAM,UAAC,CAAC,CAAC;YACjC,CAAC,CAAC;QACJ,CAAC;QAED,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC;YACrB,OAAO,CAAC,OAAO,GAAG,UAAC,KAAS,EAAE,MAAiB;gBAC7C,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,EAAC,KAAK,SAAE,MAAM,UAAC,CAAC,CAAC;YACxC,CAAC,CAAC;QACJ,CAAC;QAED,IAAI,IAAI,GAAG;YACT,IAAI,EAAE,IAAI,CAAC,SAAS;YACpB,IAAI,EAAE;gBACJ,MAAM,EAAE,IAAI,CAAC,MAAM;gBACnB,QAAQ,EAAE,QAAQ;aACnB;YACD,OAAO,EAAE,OAAO;SACjB,CAAC;QAEF,MAAM,CAAC,IAAI,gDAAK,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;IAC9B,CAAC;IAEO,4CAAe,GAAvB,UAAwB,aAA+B;QACrD,EAAE,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YACzC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,UAAC,OAAY,EAAE,CAAS;gBACvD,OAAO,CAAC,IAAI,GAAG,aAAa,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;gBAErC,EAAE,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;oBAC3B,OAAO,CAAC,KAAK,GAAG,aAAa,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;gBACzC,CAAC;YACH,CAAC,CAAC,CAAC;QACL,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,IAAI,GAAG,aAAa,CAAC;QACnD,CAAC;IACH,CAAC;IAEO,wCAAW,GAAnB;QAAA,iBAiCC;QAhCC,IAAI,QAAQ,GAAO,KAAK,CAAC,CAAC;QAC1B,2DAA2D;QAC3D,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,IAAI,CAAC,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;YAC/E,EAAE,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBAChC,QAAQ,GAAI,IAAI,CAAC,IAAwB,CAAC,GAAG,CAAC,UAAC,IAAa,EAAE,KAAY;oBACxE,MAAM,CAAC,EAAC,IAAI,QAAE,KAAK,EAAE,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,WAAS,KAAO,EAAC,CAAC;gBAC/D,CAAC,CAAC,CAAC;YACL,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,QAAQ,GAAG,CAAC,EAAC,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,KAAK,EAAE,SAAS,EAAC,CAAC,CAAC;YACnD,CAAC;QACH,CAAC;QAED,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,QAAQ,CAAC,MAAM;YACvC,CAAC,QAAQ,IAAI,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;YAChC,QAAQ,GAAG,CAAC,IAAI,CAAC,QAAQ,IAAI,QAAQ,CAAC;iBACnC,GAAG,CAAC,UAAC,GAAU,EAAE,KAAY;gBAC5B,IAAI,MAAM,GAAO,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC;gBACxC,EAAE,CAAC,CAAC,KAAI,CAAC,MAAM,IAAI,KAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC;oBACtC,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;gBAC5C,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACN,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,SAAS,CAAC,KAAI,CAAC,SAAS,EAAE,KAAK,EAAE,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;gBAC9E,CAAC;gBACD,MAAM,CAAC,MAAM,CAAC;YAChB,CAAC,CAAC,CAAC;QACP,CAAC;QAED,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;YACd,MAAM,IAAI,KAAK,CAAC,8FACqC,IAAI,CAAC,SAAW,CAAC,CAAC;QACzE,CAAC;QAED,MAAM,CAAC,QAAQ,CAAC;IAClB,CAAC;IAEO,oCAAO,GAAf;QACE,iDAAiD;QACjD,0CAA0C;QAC1C,IAAI;QAEJ,qDAAqD;QACrD,IAAI,CAAC,WAAW,EAAE,CAAC;QACnB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,GAAG,yBAAwB,CAAC,CAAC;IACtE,CAAC;IACH,yBAAC;AAAD,CAAC;AAxKe,gCAAa,GAAmB;IAC5C,CAAC,GAAG,EAAE,EAAE,EAAE,GAAG,CAAC;IACd,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,CAAC;IACd,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE,CAAC;IACd,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;IACf,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,CAAC;IACd,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;IACf,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;IACf,CAAC,GAAG,EAAE,EAAE,EAAE,EAAE,CAAC;IACb,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,CAAC;IACd,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE,CAAC;IACd,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;IACf,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;CACb,CAAC;AAEO;IAAR,2EAAK,EAAE;;gDAA8B;AAC7B;IAAR,2EAAK,EAAE;;oDAAuB;AACtB;IAAR,2EAAK,EAAE;;kDAA+B;AAC9B;IAAR,2EAAK,EAAE;;mDAAyB;AACxB;IAAR,2EAAK,EAAE;;qDAAyB;AACxB;IAAR,2EAAK,EAAE;;kDAA0B;AACzB;IAAR,2EAAK,EAAE;;kDAAuB;AAErB;IAAT,4EAAM,EAAE;kDAAmB,2DAAY,oBAAZ,2DAAY;sDAA2B;AACzD;IAAT,4EAAM,EAAE;kDAAmB,2DAAY,oBAAZ,2DAAY;sDAA2B;AAzBxD,kBAAkB;IAD9B,+EAAS,CAAC,EAAC,QAAQ,EAAE,mBAAmB,EAAE,QAAQ,EAAE,YAAY,EAAC,CAAC;yDAmCtC,yDAAU,oBAAV,yDAAU;GAlC1B,kBAAkB,CAyK9B;AAzK8B;AA6M/B,cAAc,MAAoB,EAAE,KAAY;IAC9C,MAAM,CAAC,OAAO,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC;AACxD,CAAC;AAED,sBAAsB,GAAU,EAAE,GAAU;IAC1C,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;AAC3D,CAAC;AAED,yBAAyB,MAAoB;IAC3C,MAAM,CAAC;QACL,eAAe,EAAE,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC;QAClC,WAAW,EAAE,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC;QAC5B,oBAAoB,EAAE,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC;QACrC,gBAAgB,EAAE,MAAM;QACxB,yBAAyB,EAAE,MAAM;QACjC,qBAAqB,EAAE,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC;KACzC,CAAC;AACJ,CAAC;AAED,wBAAwB,MAAoB;IAC1C,MAAM,CAAC;QACL,eAAe,EAAE,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC;QAClC,WAAW,EAAE,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC;QAC5B,oBAAoB,EAAE,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC;QACvC,gBAAgB,EAAE,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC;KAClC,CAAC;AACJ,CAAC;AAED,yBAAyB,MAAsB;IAC7C,MAAM,CAAC;QACL,eAAe,EAAE,MAAM,CAAC,GAAG,CAAC,UAAC,KAAc,IAAK,WAAI,CAAC,KAAK,EAAE,GAAG,CAAC,EAAhB,CAAgB,CAAC;QACjE,WAAW,EAAE,MAAM,CAAC,GAAG,CAAC,cAAM,aAAM,EAAN,CAAM,CAAC;QACrC,oBAAoB,EAAE,MAAM,CAAC,GAAG,CAAC,UAAC,KAAc,IAAK,WAAI,CAAC,KAAK,EAAE,CAAC,CAAC,EAAd,CAAc,CAAC;QACpE,gBAAgB,EAAE,MAAM,CAAC,GAAG,CAAC,cAAM,aAAM,EAAN,CAAM,CAAC;QAC1C,yBAAyB,EAAE,MAAM,CAAC,GAAG,CAAC,UAAC,KAAc,IAAK,WAAI,CAAC,KAAK,EAAE,CAAC,CAAC,EAAd,CAAc,CAAC;QACzE,qBAAqB,EAAE,MAAM,CAAC,GAAG,CAAC,UAAC,KAAc,IAAK,WAAI,CAAC,KAAK,EAAE,CAAC,CAAC,EAAd,CAAc,CAAC;KACtE,CAAC;AACJ,CAAC;AAED,+BAA+B,MAAsB;IACnD,MAAM,CAAC;QACL,eAAe,EAAE,MAAM,CAAC,GAAG,CAAC,UAAC,KAAc,IAAK,WAAI,CAAC,KAAK,EAAE,GAAG,CAAC,EAAhB,CAAgB,CAAC;QACjE,WAAW,EAAE,MAAM,CAAC,GAAG,CAAC,UAAC,KAAc,IAAK,WAAI,CAAC,KAAK,EAAE,CAAC,CAAC,EAAd,CAAc,CAAC;QAC3D,oBAAoB,EAAE,MAAM,CAAC,GAAG,CAAC,UAAC,KAAc,IAAK,WAAI,CAAC,KAAK,EAAE,GAAG,CAAC,EAAhB,CAAgB,CAAC;QACtE,gBAAgB,EAAE,MAAM,CAAC,GAAG,CAAC,UAAC,KAAc,IAAK,WAAI,CAAC,KAAK,EAAE,CAAC,CAAC,EAAd,CAAc,CAAC;KACjE,CAAC;AACJ,CAAC;AAED;IACE,MAAM,CAAC,CAAC,YAAY,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,YAAY,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,YAAY,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;AAC5E,CAAC;AAED;;;;GAIG;AACH,uBAAuB,KAAY;IACjC,MAAM,CAAC,kBAAkB,CAAC,aAAa,CAAC,KAAK,CAAC,IAAI,cAAc,EAAE,CAAC;AACrE,CAAC;AAED;;;;GAIG;AACH,wBAAwB,KAAY;IAClC,IAAI,SAAS,GAAmB,IAAI,KAAK,CAAC,KAAK,CAAC,CAAC;IACjD,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,EAAE,CAAC,EAAE,EAAE,CAAC;QAC/B,SAAS,CAAC,CAAC,CAAC,GAAG,kBAAkB,CAAC,aAAa,CAAC,CAAC,CAAC,IAAI,cAAc,EAAE,CAAC;IACzE,CAAC;IACD,MAAM,CAAC,SAAS,CAAC;AACnB,CAAC;AAED;;;;;;GAMG;AACH,mBAAmB,SAAgB,EAAE,KAAY,EAAE,KAAY;IAC7D,EAAE,CAAC,CAAC,SAAS,KAAK,KAAK,IAAI,SAAS,KAAK,UAAU,CAAC,CAAC,CAAC;QACpD,MAAM,CAAC,eAAe,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC,CAAC;IAChD,CAAC;IAED,EAAE,CAAC,CAAC,SAAS,KAAK,WAAW,CAAC,CAAC,CAAC;QAC9B,MAAM,CAAC,qBAAqB,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC,CAAC;IACtD,CAAC;IAED,EAAE,CAAC,CAAC,SAAS,KAAK,MAAM,IAAI,SAAS,KAAK,OAAO,CAAC,CAAC,CAAC;QAClD,MAAM,CAAC,eAAe,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC,CAAC;IAC/C,CAAC;IAED,EAAE,CAAC,CAAC,SAAS,KAAK,KAAK,IAAI,SAAS,KAAK,eAAe,CAAC,CAAC,CAAC;QACzD,MAAM,CAAC,cAAc,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC,CAAC;IAC9C,CAAC;IACD,MAAM,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;AAC9B,CAAC;AAWD,IAAa,YAAY;IAAzB;IACA,CAAC;IAAD,mBAAC;AAAD,CAAC;AADY,YAAY;IATxB,8EAAQ,CAAC;QACR,YAAY,EAAE;YACZ,kBAAkB;SACnB;QACD,OAAO,EAAE;YACP,kBAAkB;SACnB;QACD,OAAO,EAAE,EAAE;KACZ,CAAC;GACW,YAAY,CACxB;AADwB;;;;;;;;;;;;;AC3UQ;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAU;AACqC;AAEnC;AACZ;AACF;AAM/B,IAAa,aAAa;IAEzB,uBAAqB,IAAU;QAAV,SAAI,GAAJ,IAAI,CAAM;IAAG,CAAC;IAK5B,+BAAO,GAAd,UAAe,GAAG,EAAE,OAAO;QAC1B,IAAI,IAAI,GAAG,OAAO,IAAI,EAAE,CAAC;QACzB,IAAI,CAAC,CAAC,GAAG,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,CAAC;QAE9B,IAAI,MAAM,GAAoB,IAAI,sEAAe,EAAE,CAAC;QAC9C,GAAG,CAAC,CAAC,IAAI,GAAG,IAAI,IAAI,CAAC,CAAC,CAAC;YACpB,EAAE,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;gBAC7B,IAAI,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC;gBACnB,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;YACxB,CAAC;QACJ,CAAC;QACD,IAAI,OAAO,GAAG,IAAI,qEAAc,CAAC;YAChC,MAAM,EAAE,MAAM;SACf,CAAC,CAAC;QAER,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,OAAO,CAAC;aAChC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC;aACrB,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IAC3B,CAAC;IAGO,mCAAW,GAAnB,UAAoB,GAAa;QAChC,IAAI,IAAI,GAAG,GAAG,CAAC,IAAI,EAAE,CAAC;QACtB,MAAM,CAAC,IAAI,IAAI,EAAE,CAAC;IACnB,CAAC;IAEO,mCAAW,GAAnB,UAAoB,KAAqB;QACxC,qEAAqE;QACrE,IAAI,MAAc,CAAC;QACnB,EAAE,CAAC,CAAC,KAAK,YAAY,+DAAQ,CAAC,CAAC,CAAC;YAC/B,IAAM,IAAI,GAAG,KAAK,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC;YAChC,IAAM,GAAG,GAAG,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;YAC/C,MAAM,GAAM,KAAK,CAAC,MAAM,YAAM,KAAK,CAAC,UAAU,IAAI,EAAE,UAAI,GAAK,CAAC;QAC/D,CAAC;QAAC,IAAI,CAAC,CAAC;YACP,MAAM,GAAG,KAAK,CAAC,OAAO,GAAG,KAAK,CAAC,OAAO,GAAG,KAAK,CAAC,QAAQ,EAAE,CAAC;QAC3D,CAAC;QAED,OAAO,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;QACtB,MAAM,CAAC,2DAAU,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;IACjC,CAAC;IAIF,oBAAC;AAAD,CAAC;AAlDY,aAAa;IADzB,gFAAU,EAAE;yDAGe,2DAAI,oBAAJ,2DAAI;GAFnB,aAAa,CAkDzB;AAlDyB;;;;;;;;;;;;;;;;;;;;;ACXiB;AAG3C,IAAa,SAAS;IAClB;IAAe,CAAC;IAEhB,mCAAe,GAAf;QACI,MAAM,CAAC,MAAM,CAAC;IAClB,CAAC;IACL,gBAAC;AAAD,CAAC;AANY,SAAS;IADrB,gFAAU,EAAE;;GACA,SAAS,CAMrB;AANqB;;;;;;;;;;;;;;;;;;;;;;ACHmB;AACiB;AACI;AAEjB;AACE;AAEa;AAe5D,IAAa,gBAAgB;IAA7B;IAA+B,CAAC;IAAD,uBAAC;AAAD,CAAC;AAAnB,gBAAgB;IAb5B,8EAAQ,CAAC;QACN,YAAY,EAAE;YACb,mFAAmB;SACnB;QACD,OAAO,EAAE;YACX,gFAAa;YACb,2DAAW;YACX,qEAAY;YAEZ,kFAAgB,CAAC,OAAO,EAAE;SACvB;KACJ,CAAC;GAEW,gBAAgB,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;ACtBU;AACiB;AACA;AAEX;AAa7C,IAAa,cAAc;IAA3B;IAA6B,CAAC;IAAD,qBAAC;AAAD,CAAC;AAAjB,cAAc;IAV1B,8EAAQ,CAAC;QACN,YAAY,EAAE;YACb,+EAAiB;SACjB;QACD,OAAO,EAAE;YACX,gFAAa;YACb,2DAAW;SACR;KACJ,CAAC;GAEW,cAAc,CAAG;AAAH;;;;;;;;;;;;;;;;;ACjBe;AAM1C,IAAa,kBAAkB;IAA/B;IAAkC;IAAA;AAAA;AAArB,kBAAkB;IAJ9B,+EAAS,CAAC;QACP,QAAQ,EAAE,WAAW;QACrB,kCAAuC;KAC1C,CAAC;GACW,kBAAkB,CAAG;AAAH;;;;;;;;;;;;;;;;;;;ACNQ;AACiB;AACE;AAO1D,IAAa,eAAe;IAA5B;IAA8B,CAAC;IAAD,sBAAC;AAAD,CAAC;AAAlB,eAAe;IAL3B,8EAAQ,CAAC;QACN,YAAY,EAAE,CAAC,iFAAkB,CAAC;QAClC,OAAO,EAAO,CAAC,gFAAa,CAAC;KAChC,CAAC;GAEW,eAAe,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;;;;;ACTW;AACiB;AAEX;AAEa;AAEe;AACS;AACN;AACS;AAErB;AACd;AAkBlD,IAAa,cAAc;IAA3B;IAA6B,CAAC;IAAD,qBAAC;AAAD,CAAC;AAAjB,cAAc;IAhB1B,8EAAQ,CAAC;QACN,YAAY,EAAE;YACV,+EAAiB;YACpB,0FAAY;YACT,mGAAe;YACf,6FAAa;YACb,sGAAgB;SACnB;QACD,OAAO,EAAE;YACX,gFAAa;YACb,2DAAW;YACX,iFAAY;YACZ,gEAAgB;SACb;KACJ,CAAC;GAEW,cAAc,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;;AC/BY;AACiB;AAEX;AAEuB;AAEuB;AAC3B;AACd;AAelD,IAAa,mBAAmB;IAAhC;IAAkC,CAAC;IAAD,0BAAC;AAAD,CAAC;AAAtB,mBAAmB;IAb/B,8EAAQ,CAAC;QACN,YAAY,EAAE;YACV,yFAAsB;YACtB,4GAAkB;SACrB;QACD,OAAO,EAAE;YACX,gFAAa;YACb,2DAAW;YACX,iFAAY;YACZ,gEAAgB;SACb;KACJ,CAAC;GAEW,mBAAmB,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;ACxBO;AACiB;AAEX;AAEqC;AAElB;AACd;AAgBlD,IAAa,yBAAyB;IAAtC;IAAwC,CAAC;IAAD,gCAAC;AAAD,CAAC;AAA5B,yBAAyB;IAdrC,8EAAQ,CAAC;QACN,YAAY,EAAE;YACV,uGAA4B;SAC/B;QACD,OAAO,EAAE;YACX,gFAAa;YACb,2DAAW;YACX,iFAAY;YACZ,gEAAgB;SAGb;KACJ,CAAC;GAEW,yBAAyB,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;ACxBC;AACiB;AAEX;AAEyC;AAEtB;AACd;AAclD,IAAa,2BAA2B;IAAxC;IAA0C,CAAC;IAAD,kCAAC;AAAD,CAAC;AAA9B,2BAA2B;IAZvC,8EAAQ,CAAC;QACN,YAAY,EAAE;YACV,2GAA8B;SACjC;QACD,OAAO,EAAE;YACX,gFAAa;YACb,2DAAW;YACX,iFAAY;YACZ,gEAAgB;SACb;KACJ,CAAC;GAEW,2BAA2B,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;ACtBD;AACiB;AAEX;AAEmB;AAEA;AACd;AAclD,IAAa,iBAAiB;IAA9B;IAAgC,CAAC;IAAD,wBAAC;AAAD,CAAC;AAApB,iBAAiB;IAZ7B,8EAAQ,CAAC;QACN,YAAY,EAAE;YACV,qFAAoB;SACvB;QACD,OAAO,EAAE;YACX,gFAAa;YACb,2DAAW;YACX,gEAAgB;YACV,iFAAY;SACf;KACJ,CAAC;GAEW,iBAAiB,CAAG;AAAH;;;;;;;;;ACtB9B;AAAA,mFAAmF;AACnF,8FAA8F;AAC9F,yEAAyE;AACzE,gFAAgF;AAEhF,mFALmF;AAK5E,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;;;;;;;;ACPF;AACA;;;AAGA;AACA;;AAEA;;;AAGA;AACA,2C;;;;;;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACtPA,oF;;;;;;;ACAA,kDAAkD,4jBAA4jB,kBAAkB,KAAK,gBAAgB,wUAAwU,MAAM,OAAO,WAAW,YAAY,aAAa,6CAA6C,aAAa,WAAW,YAAY,wBAAwB,sDAAsD,aAAa,iBAAiB,yEAAyE,8E;;;;;;;ACApxC,kDAAkD,0jBAA0jB,kBAAkB,KAAK,gBAAgB,0UAA0U,MAAM,OAAO,WAAW,YAAY,aAAa,6CAA6C,aAAa,WAAW,YAAY,wBAAwB,sDAAsD,aAAa,iBAAiB,yEAAyE,8E;;;;;;;ACApxC,kDAAkD,0jBAA0jB,kBAAkB,KAAK,gBAAgB,0UAA0U,MAAM,OAAO,WAAW,YAAY,aAAa,6CAA6C,aAAa,WAAW,YAAY,wBAAwB,sDAAsD,aAAa,iBAAiB,yEAAyE,8E;;;;;;;ACApxC,kDAAkD,0jBAA0jB,kBAAkB,KAAK,gBAAgB,0UAA0U,MAAM,OAAO,WAAW,YAAY,aAAa,6CAA6C,aAAa,WAAW,YAAY,wBAAwB,sDAAsD,aAAa,iBAAiB,yEAAyE,8E;;;;;;;ACApxC,kDAAkD,WAAW,0jBAA0jB,kBAAkB,KAAK,gBAAgB,wUAAwU,MAAM,OAAO,WAAW,YAAY,aAAa,6CAA6C,aAAa,WAAW,YAAY,wBAAwB,sDAAsD,aAAa,iBAAiB,yEAAyE,8E;;;;;;;ACA7xC,mMAAmM,0B;;;;;;;ACAnM,0e;;;;;;;ACAA,iF;;;;;;;ACAA,4XAA4X,eAAe,4MAA4M,4BAA4B,gLAAgL,4BAA4B,yLAAyL,iCAAiC,uLAAuL,qEAAqE,+jBAA+jB,mRAAmR,iPAAiP,+BAA+B,kNAAkN,+BAA+B,0L;;;;;;;ACAxmF,87B;;;;;;;ACAA,iWAAiW,kPAAkP,+BAA+B,wJAAwJ,sCAAsC,8rBAA8rB,oBAAoB,sHAAsH,iBAAiB,6KAA6K,YAAY,kLAAkL,ipBAAipB,qMAAqM,0kBAA0kB,eAAe,2BAA2B,sSAAsS,KAAK,UAAU,sxDAAsxD,wCAAwC,iEAAiE,iBAAiB,iEAAiE,aAAa,+9BAA+9B,wCAAwC,iEAAiE,iBAAiB,iEAAiE,aAAa,k+BAAk+B,wCAAwC,iEAAiE,iBAAiB,iEAAiE,aAAa,0rBAA0rB,MAAM,OAAO,WAAW,YAAY,aAAa,iDAAiD,aAAa,WAAW,YAAY,wBAAwB,8DAA8D,aAAa,iBAAiB,6EAA6E,wqBAAwqB,wDAAwD,0LAA0L,qIAAqI,giB;;;;;;;ACAlkU,sIAAsI,aAAa,6BAA6B,iBAAiB,+IAA+I,qBAAqB,yMAAyM,gMAAgM,wBAAwB,2EAA2E,4BAA4B,6cAA6c,yMAAyM,wBAAwB,0EAA0E,+BAA+B,kaAAka,mMAAmM,wBAAwB,0EAA0E,6BAA6B,4bAA4b,iMAAiM,oFAAoF,8BAA8B,eAAe,qDAAqD,eAAe,kBAAkB,KAAK,8BAA8B,4GAA4G,GAAG,iDAAiD,SAAS,KAAK,SAAS,wL;;;;;;;ACAt5G,6Y;;;;;;;ACAA,sNAAsN,yvB;;;;;;;ACAtN,sTAAsT,YAAY,ogBAAogB,KAAK,OAAO,yFAAyF,QAAQ,kDAAkD,UAAU,6CAA6C,OAAO,6CAA6C,eAAe,kMAAkM,MAAM,OAAO,WAAW,YAAY,aAAa,iEAAiE,aAAa,WAAW,YAAY,wBAAwB,8FAA8F,aAAa,iBAAiB,6FAA6F,gaAAga,SAAS,sPAAsP,uFAAuF,uBAAuB,+e;;;;;;;ACAr7E,0kBAA0kB,QAAQ,kFAAkF,SAAS,kDAAkD,aAAa,2iBAA2iB,sFAAsF,8BAA8B,4VAA4V,63BAA63B,kBAAkB,KAAK,gBAAgB,gZAAgZ,MAAM,OAAO,WAAW,YAAY,aAAa,qEAAqE,aAAa,WAAW,YAAY,wBAAwB,sGAAsG,aAAa,iBAAiB,iGAAiG,wpBAAwpB,YAAY,kGAAkG,SAAS,0DAA0D,aAAa,mR;;;;;;;ACAxwI,0kBAA0kB,QAAQ,kFAAkF,SAAS,kDAAkD,aAAa,2iBAA2iB,gBAAgB,oMAAoM,sFAAsF,gCAAgC,4YAA4Y,i2BAAi2B,kBAAkB,KAAK,gBAAgB,gZAAgZ,MAAM,OAAO,WAAW,YAAY,aAAa,qEAAqE,aAAa,WAAW,YAAY,wBAAwB,sGAAsG,aAAa,iBAAiB,iGAAiG,orBAAorB,YAAY,kGAAkG,SAAS,0DAA0D,aAAa,mR;;;;;;;ACA9gJ,sTAAsT,YAAY,urBAAurB,mFAAmF,iFAAiF,sFAAsF,2FAA2F,iGAAiG,qOAAqO,+JAA+J,uGAAuG,SAAS,mIAAmI,sDAAsD,OAAO,iFAAiF,WAAW,GAAG,gBAAgB,mGAAmG,6BAA6B,qDAAqD,qBAAqB,qDAAqD,6BAA6B,qDAAqD,0CAA0C,sRAAsR,MAAM,OAAO,WAAW,YAAY,aAAa,iEAAiE,aAAa,WAAW,YAAY,wBAAwB,8FAA8F,aAAa,iBAAiB,6FAA6F,0XAA0X,WAAW,w0CAAw0C,kBAAkB,KAAK,gBAAgB,gZAAgZ,MAAM,OAAO,WAAW,YAAY,aAAa,qEAAqE,aAAa,WAAW,YAAY,wBAAwB,sGAAsG,aAAa,iBAAiB,iGAAiG,sT;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA1tL;AACqC;AAEnC;AACZ;AACF;AAEe;AAG9C,IAAa,WAAW;IAEvB,qBAAqB,IAAU;QAAV,SAAI,GAAJ,IAAI,CAAM;IAAG,CAAC;IAK5B,uCAAiB,GAAxB,UAAyB,QAAQ;QAChC,IAAI,IAAI,GAAG,IAAI,CAAC;QAChB,IAAI,IAAI,GAAG;YACV,CAAC,EAAE,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE;SACvB;QAED,IAAI,MAAM,GAAoB,IAAI,sEAAe,EAAE,CAAC;QAC9C,GAAG,CAAC,CAAC,IAAI,GAAG,IAAI,IAAI,CAAC,CAAC,CAAC;YACpB,EAAE,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;gBAC7B,IAAI,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC;gBACnB,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;YACxB,CAAC;QACJ,CAAC;QACD,IAAI,OAAO,GAAG,IAAI,qEAAc,CAAC;YAChC,MAAM,EAAE,MAAM;SACf,CAAC,CAAC;QAER,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,kEAAW,CAAC,OAAO,EAAE,OAAO,CAAC;aACzC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC;aACrB,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC;aACvB,SAAS,CACA,UAAS,IAAI;YACT,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC;gBACzB,MAAM,CAAC,QAAQ,CAAC,IAAI,GAAG,GAAG,CAAC;YAC/B,CAAC;YACD,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;YACtB,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;gBACd,QAAQ,CAAC,IAAI,CAAC,CAAC;YAChB,CAAC;QAEL,CAAC,EACD,UAAS,KAAK;QACd,CAAC,CACJ,CAAC;IACV,CAAC;IAED,6BAAO,GAAP;QACC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC;IAClB,CAAC;IAEO,iCAAW,GAAnB,UAAoB,GAAa;QAChC,IAAI,IAAI,GAAG,GAAG,CAAC,IAAI,EAAE,CAAC;QACtB,MAAM,CAAC,IAAI,IAAI,EAAE,CAAC;IACnB,CAAC;IAEO,iCAAW,GAAnB,UAAoB,KAAqB;QACxC,qEAAqE;QACrE,IAAI,MAAc,CAAC;QACnB,EAAE,CAAC,CAAC,KAAK,YAAY,+DAAQ,CAAC,CAAC,CAAC;YAC/B,IAAM,IAAI,GAAG,KAAK,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC;YAChC,IAAM,GAAG,GAAG,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;YAC/C,MAAM,GAAM,KAAK,CAAC,MAAM,YAAM,KAAK,CAAC,UAAU,IAAI,EAAE,UAAI,GAAK,CAAC;QAC/D,CAAC;QAAC,IAAI,CAAC,CAAC;YACP,MAAM,GAAG,KAAK,CAAC,OAAO,GAAG,KAAK,CAAC,OAAO,GAAG,KAAK,CAAC,QAAQ,EAAE,CAAC;QAC3D,CAAC;QAED,OAAO,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;QACtB,MAAM,CAAC,2DAAU,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;IACjC,CAAC;IAIF,kBAAC;AAAD,CAAC;AArEY,WAAW;IADvB,gFAAU,EAAE;yDAGe,2DAAI,oBAAJ,2DAAI;GAFnB,WAAW,CAqEvB;AArEuB;;;;;;;;;;;;;;;;;;;;;;;;;;ACVkB;AAQ1C,IAAa,cAAc;IAA3B;IAA6B;IAAA;AAAA;AAAhB,cAAc;IAJ1B,+EAAS,CAAC;QACP,QAAQ,EAAE,OAAO;QACjB,kCAAkC;KACrC,CAAC;GACW,cAAc,CAAE;AAAF;;;;;;;;;;;;;;;;;;;;;;;ACRuB;AACT;AAGQ;AACS;AAQ1D,IAAa,mBAAmB;IAsB/B,6BAAqB,WAAwB,EAAU,MAAc;QAAhD,gBAAW,GAAX,WAAW,CAAa;QAAU,WAAM,GAAN,MAAM,CAAQ;QApBrE,YAAO,GAAY,KAAK,CAAC;QACzB,kBAAa,GAAW,EAAE,CAAC;QAIxB,kBAAa,GAAO,EAAE,CAAC;QACvB,mBAAc,GAAO,EAAE,CAAC;QACxB,oBAAe,GAAO,EAAE,CAAC;QACzB,mBAAc,GAAW,IAAI,CAAC;QAI9B,cAAS,GAAG,EAAE,CAAC;QACf,UAAK,GAAG;YACJ,UAAU,EAAE,EAAE;YACd,UAAU,EAAE,EAAE;SACjB;QACD,wBAAmB,GAAG,KAAK,CAAC;IAI5B,CAAC;IAED,sCAAQ,GAAR;QACC,IAAI,IAAI,GAAG,IAAI,CAAC;QACb,IAAI,CAAC,aAAa,GAAG,kEAAW,CAAC,aAAa,CAAC;QAC/C,IAAI,CAAC,kBAAkB,GAAG,kEAAW,CAAC,kBAAkB,CAAC;QACzD,IAAI,CAAC,iBAAiB,GAAG,kEAAW,CAAC,iBAAiB,CAAC;QACvD,IAAI,CAAC,UAAU,EAAE,CAAC;IACtB,CAAC;IAED,wCAAU,GAAV;QACI,IAAI,IAAI,GAAG,IAAI,CAAC;QAChB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,kEAAW,CAAC,UAAU,EAAE,EAAE,CAAC;aACnD,SAAS,CACN,UAAS,IAAI;YACT,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;YACrB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC;YACxC,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC;YAC1C,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC;YAC5C,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,MAAM,CAAC;YAClC,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC;YAC5C,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,iBAAiB,CAAC;YACxC,IAAI,CAAC,sBAAsB,GAAG,IAAI,CAAC,MAAM,CAAC;YAC1C,IAAI,CAAC,KAAK,CAAC,UAAU,GAAG,IAAI,CAAC,QAAQ,CAAC;YACtC,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,QAAQ,CAAC;YACvC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC,CAAC;gBACzB,IAAI,CAAC,KAAK,CAAC,UAAU,GAAG,MAAM,EAAE,CAAC,MAAM,EAAE,CAAC;gBAC1C,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC;YACpC,CAAC;QACL,CAAC,EACD,UAAS,KAAK;YACV,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;YACrB,IAAI,CAAC,aAAa,GAAQ,KAAK,CAAC;QACpC,CAAC,CACJ,CAAC;IACN,CAAC;IAED,iDAAmB,GAAnB,UAAoB,KAAK;QACrB,MAAM,CAAC,MAAM,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC,MAAM,CAAC,kBAAkB,CAAC;IACxD,CAAC;IAED,0CAAY,GAAZ;QACI,IAAI,IAAI,GAAG,IAAI,CAAC;QAChB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,kEAAW,CAAC,gBAAgB,EAAE,EAAE,CAAC;aAC1D,SAAS,CACN,UAAS,IAAI;YACT,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;YACrB,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,MAAM,CAAC;QACtC,CAAC,EACD,UAAS,KAAK;YACV,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;YACrB,IAAI,CAAC,aAAa,GAAQ,KAAK,CAAC;QACpC,CAAC,CACJ,CAAC;IACN,CAAC;IAED,0CAAY,GAAZ;QACI,IAAI,IAAI,GAAG,IAAI,CAAC;QAEhB,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC;YAChB,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,UAAU;YAC3B,OAAO,EAAE,KAAK;SACjB,CAAC,CAAC;QAEH,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,kEAAW,CAAC,iBAAiB,EAAE;YACrD,IAAI,EAAG,IAAI,CAAC,SAAS;SACxB,CAAC;aACD,SAAS,CACN,UAAS,IAAI;YACT,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;YACrB,IAAI,CAAC,KAAK,CAAC,UAAU,GAAG,EAAE,CAAC;YAC3B,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,iBAAiB,CAAC;QAC5C,CAAC,EACD,UAAS,KAAK;YACV,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;YACrB,IAAI,CAAC,aAAa,GAAQ,KAAK,CAAC;QACpC,CAAC,CACJ,CAAC;IAEN,CAAC;IAED,wCAAU,GAAV,UAAW,KAAK;QACZ,IAAI,IAAI,GAAG,IAAI,CAAC;QAChB,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;QAChC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,kEAAW,CAAC,iBAAiB,EAAE;YACrD,IAAI,EAAG,IAAI,CAAC,SAAS;SACxB,CAAC;aACD,SAAS,CACN,UAAS,IAAI;YACT,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;YACrB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,iBAAiB,CAAC;QAC5C,CAAC,EACD,UAAS,KAAK;YACV,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;YACrB,IAAI,CAAC,aAAa,GAAQ,KAAK,CAAC;QACpC,CAAC,CACJ,CAAC;IACN,CAAC;IAED,yCAAW,GAAX;QACI,EAAE,CAAC,CAAC,IAAI,CAAC,iBAAiB;YAClB,MAAM,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;YAC9F,IAAI,CAAC,mBAAmB,GAAG,KAAK,CAAC;QACrC,CAAC;QAAC,IAAI,CAAC,CAAC;YACJ,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC;QACpC,CAAC;IAEL,CAAC;IAED,0CAAY,GAAZ;QACI,IAAI,IAAI,GAAG,IAAI,CAAC;QAChB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,kEAAW,CAAC,iBAAiB,EAAE;YACrD,IAAI,EAAE,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC;SAClD,CAAC;aACD,SAAS,CACN,UAAS,IAAI;YACT,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;YACrB,IAAI,CAAC,mBAAmB,GAAG,KAAK,CAAC;QACrC,CAAC,EACD,UAAS,KAAK;YACV,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;YACrB,IAAI,CAAC,aAAa,GAAQ,KAAK,CAAC;QACpC,CAAC,CACJ,CAAC;IACN,CAAC;IAGM,qCAAO,GAAd;QACI,IAAI,CAAC,UAAU,EAAE,CAAC;IACtB,CAAC;IAEM,wCAAU,GAAjB,UAAkB,QAAQ;QACtB,MAAM,CAAC,kEAAW,CAAC,iBAAiB,GAAG,QAAQ,CAAC;IACpD,CAAC;IACL;AAAA;AAlKa,mBAAmB;IAJ/B,+EAAS,CAAC;QACP,QAAQ,EAAE,YAAY;QACtB,kCAAwC;KAC3C,CAAC;yDAuBiC,2EAAW,oBAAX,2EAAW,sDAAkB,+DAAM,oBAAN,+DAAM;GAtBzD,mBAAmB,CAkKhC;AAlKgC;;;;;;;;;;;;;;;;;;;;;;;ACbkB;AAED;AACS;AAQ1D,IAAa,iBAAiB;IAS7B,2BAAqB,gBAA6B;QAA7B,qBAAgB,GAAhB,gBAAgB,CAAa;QAPlD,YAAO,GAAY,KAAK,CAAC;QACzB,kBAAa,GAAW,EAAE,CAAC;QAC3B,aAAQ,GAAU,EAAE,CAAC;QAElB,YAAO,GAAG,EACT,CAAC;IAGF,CAAC;IAED,oCAAQ,GAAR;QACC,IAAI,IAAI,GAAG,IAAI,CAAC;QAChB,IAAI,CAAC,WAAW,CAAC;YAChB,IAAI,CAAC,eAAe,CAAC;gBACX,IAAI,CAAC,gBAAgB,EAAE,CAAC;YAC5B,CAAC,CAAC,CAAC;QACV,CAAC,CAAC;IAEH,CAAC;IAED,uCAAW,GAAX,UAAY,QAAS;QACpB,IAAI,IAAI,GAAG,IAAI,CAAC;QAChB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,kEAAW,CAAC,WAAW,EAAE,EAAE,CAAC;aACzD,SAAS,CACH,UAAS,IAAI;YACT,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;YACrB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;YAC9B,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;gBACd,QAAQ,EAAE,CAAC;YACZ,CAAC;QACL,CAAC,EACD,UAAS,KAAK;YACV,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;YACrB,IAAI,CAAC,aAAa,GAAQ,KAAK,CAAC;QACpC,CAAC,CACJ,CAAC;IACN,CAAC;IAED,2CAAe,GAAf,UAAgB,QAAQ;QACvB,IAAI,IAAI,GAAG,IAAI,CAAC;QAChB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,kEAAW,CAAC,QAAQ,EAAE,EAAE,CAAC;aACtD,SAAS,CACH,UAAS,IAAI;YACT,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;YACrB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;YACxB,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;gBACX,QAAQ,EAAE,CAAC;YACf,CAAC;QACL,CAAC,EACD,UAAS,KAAK;YACV,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;YACrB,IAAI,CAAC,aAAa,GAAQ,KAAK,CAAC;QACpC,CAAC,CACJ,CAAC;IACN,CAAC;IAED,+CAAmB,GAAnB,UAAoB,KAAK;QACxB,MAAM,CAAC,MAAM,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC,MAAM,CAAC,kBAAkB,CAAC;IACrD,CAAC;IAED,4CAAgB,GAAhB;QACI,IAAI,IAAI,GAAG,IAAI,CAAC;QAChB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,kEAAW,CAAC,OAAO,EAAE,EAAE,CAAC;aACrD,SAAS,CACN,UAAS,IAAI;YACT,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;YACrB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACxB,CAAC,EACD,UAAS,KAAK;YACV,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;YACrB,IAAI,CAAC,aAAa,GAAQ,KAAK,CAAC;QACpC,CAAC,CACJ,CAAC;IACN,CAAC;IACL;AAAA;AA/Ea,iBAAiB;IAJ7B,+EAAS,CAAC;QACP,QAAQ,EAAE,UAAU;QACpB,kCAAsC;KACzC,CAAC;yDAUsC,2EAAW,oBAAX,2EAAW;GATtC,iBAAiB,CA+E9B;AA/E8B;;;;;;;;;;;;;;;;;;ACXY;AAM1C,IAAa,iBAAiB;IAA9B;IAAiC;IAAA;AAAA;AAApB,iBAAiB;IAJ7B,+EAAS,CAAC;QACP,QAAQ,EAAE,UAAU;QACpB,kCAAsC;KACzC,CAAC;GACW,iBAAiB,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;ACNoB;AAED;AACS;AAM1D,IAAa,sBAAsB;IAUlC,gCAAqB,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;QAR7C,YAAO,GAAY,KAAK,CAAC;QAKtB,mBAAc,GAAG,EAAE,CAAC;IAIpB,CAAC;IAEJ,yCAAQ,GAAR;QACI,IAAI,IAAI,GAAG,IAAI,CAAC;QAChB,IAAI,CAAC,gBAAgB,CAAC;YACrB,IAAI,CAAC,YAAY,EAAE,CAAC;QACrB,CAAC,CAAC,CAAC;IACJ,CAAC;IAEO,6CAAY,GAApB,UAAqB,QAAS;QAC7B,IAAI,IAAI,GAAG,IAAI,CAAC;QAChB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,kEAAW,CAAC,gBAAgB,EAAE,EAAE,CAAC;aACzD,SAAS,CACH,UAAS,IAAI;YACT,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;YACrB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC;YAC3B,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,SAAS,CAAC;YACrC,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;gBACd,QAAQ,EAAE,CAAC;YACZ,CAAC;QACL,CAAC,EACD,UAAS,KAAK;YACV,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;YACrB,IAAI,CAAC,aAAa,GAAQ,KAAK,CAAC;QACpC,CAAC,CACJ,CAAC;IACN,CAAC;IAEO,iDAAgB,GAAxB,UAAyB,QAAQ;QAE7B,IAAI,IAAI,GAAG,IAAI,CAAC;QAEhB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,kEAAW,CAAC,yBAAyB,EAAE,EAAE,CAAC;aAClE,SAAS,CACN,UAAS,IAAI;YACT,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;YACrB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;YACxB,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,cAAc,CAAC;YAC1C,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;gBACd,QAAQ,EAAE,CAAC;YACZ,CAAC;QACL,CAAC,EACD,UAAS,KAAK;YACV,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;YACrB,IAAI,CAAC,aAAa,GAAQ,KAAK,CAAC;QACpC,CAAC,CACJ,CAAC;IACN,CAAC;IAEM,wCAAO,GAAd;QACI,IAAI,CAAC,YAAY,EAAE,CAAC;IACxB,CAAC;IACL;AAAA;AAjEa,sBAAsB;IAJlC,+EAAS,CAAC;QACP,QAAQ,EAAE,eAAe;QACzB,kCAA2C;KAC9C,CAAC;yDAWiC,2EAAW,oBAAX,2EAAW;GAVjC,sBAAsB,CAiEnC;AAjEmC;;;;;;;;;;;;;;;;;;;;;;;;;;ACT8C;AAEX;AAEjB;AAEJ;AACS;AAe1D,IAAa,4BAA4B;IAmCrC,sCAAqB,WAAwB,EAAU,KAAwB;QAA1D,gBAAW,GAAX,WAAW,CAAa;QAAU,UAAK,GAAL,KAAK,CAAmB;QA9B/E,YAAO,GAAW,KAAK,CAAC;QAExB,cAAS,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;QAIrB,0BAAqB,GAAU,CAAC,CAAC;QACjC,UAAK,GAAG,EAAE,CAAC;QACX,UAAK,GAAG,EAAE,CAAC;QAGX,cAAS,GAAkB;YACtB,EAAE,EAAF,UAAG,KAAa;gBACb,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;oBACR,MAAM,CAAC,MAAM,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC,MAAM,CAAC,kBAAkB,CAAC,CAAC;gBACzD,CAAC;YACH,CAAC;YACD,IAAI,EAAJ,UAAK,KAAa;gBACd,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;oBACR,EAAE,CAAC,CAAC,MAAM,CAAC,KAAK,EAAE,kBAAkB,CAAC,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;wBAC9C,IAAI,CAAC,GAAG,MAAM,CAAC,KAAK,EAAE,kBAAkB,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC;wBACrD,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;oBACzB,CAAC;oBACD,MAAM,CAAC,KAAK,CAAC;gBACjB,CAAC;YACL,CAAC;SAGN,CAAC;QAKK,kBAAa,GAAc;YAC9B,EAAC,IAAI,EAAE,EAAE,EAAE,KAAK,EAAE,EAAE,EAAC;SACxB,CAAC;QACK,oBAAe,GAAc,EAAE,CAAC;QAEhC,qBAAgB,GAAO;YAC1B,SAAS,EAAE,KAAK;YAChB,UAAU,EAAE,IAAI;SACnB,CAAC;QACK,oBAAe,GAAc,CAAC;gBACnC,eAAe,EAAE,sBAAsB;gBACvC,WAAW,EAAE,qBAAqB;gBAClC,oBAAoB,EAAE,oBAAoB;gBAC1C,gBAAgB,EAAE,MAAM;gBACxB,yBAAyB,EAAE,MAAM;gBACjC,qBAAqB,EAAE,oBAAoB;aAC5C,CAAC,CAAC;QAKI,oBAAe,GAAW,IAAI,CAAC;QAC/B,kBAAa,GAAU,MAAM,CAAC;QAIrC,iBAAY,GAAG,CAAC,CAAC;QACjB,iBAAY,GAAG,EAAE,CAAC;QAClB,eAAU,GAAG,KAAK,CAAC;IA9BnB,CAAC;IA+BD,+CAAQ,GAAR;QACI,IAAI,IAAI,GAAG,IAAI,CAAC;QAChB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,kEAAW,CAAC,kBAAkB,EAAC,EAAE,CAAC;aAC1D,SAAS,CACN,UAAS,IAAI;YACT,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;YACrB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,MAAM,CAAC;YACjC,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,KAAK,CAAC;YAClC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;YAE3B,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;YACvB,IAAI,CAAC,YAAY,GAAI,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC;YAChD,IAAI,CAAC,YAAY,GAAI,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC;YAC9C,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,aAAa,CAAC;gBAC7B,KAAK,EAAE,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,EAAE,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC;gBACxD,KAAK,EAAE;oBACH,KAAK,EAAE,IAAI,CAAC,UAAU,CAAC,KAAK;oBAC5B,KAAK,EAAE,IAAI,CAAC,UAAU,CAAC,QAAQ;iBAClC;aACJ,CAAC,CAAC;YACH,IAAI,CAAC,SAAS,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,EAAE,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;YACnE,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC,qBAAqB,CAAC;YACxD,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;YACxB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;YACxB,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,CAAC;YAE3B,UAAU,CAAC;gBACP,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;YAC5B,CAAC,EAAE,IAAI,CAAC,CAAC;QACb,CAAC,EACD,UAAS,KAAK;YACV,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;YACrB,IAAI,CAAC,aAAa,GAAQ,KAAK,CAAC;QACpC,CAAC,CACJ,CAAC;IAEN,CAAC;IAEM,mDAAY,GAAnB,UAAoB,CAAK;QACrB,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IACnB,CAAC;IAEM,mDAAY,GAAnB,UAAoB,CAAK;QACrB,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IACnB,CAAC;IAEM,+CAAQ,GAAf,UAAgB,MAAM;QAClB,+CAA+C;QAC/C,IAAI,CAAC,cAAc,GAAG,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,MAAM,CAAC,cAAc,CAAC,CAAC;QAC5E,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,MAAM,CAAC,cAAc,CAAC,CAAC;QAC1E,IAAI,CAAC,OAAO,EAAE,CAAC;IACnB,CAAC;IAEO,8CAAO,GAAf,UAAgB,OAAQ,EAAE,QAAS;QAC/B,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,UAAW,CAAC,CAAC,CAAC;YACnC,MAAM,CAAC;QACX,CAAC;QAED,IAAI,IAAI,GAAG,IAAI,CAAC;QAChB,IAAI,MAAM,GAAG,OAAO,IAAI;YACpB,UAAU,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;YAC7B,QAAQ,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;SAC9B;QACD,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,kEAAW,CAAC,kBAAkB,EAAE,MAAM,CAAC;aAC/D,SAAS,CACN,UAAS,IAAI;YACT,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;YACrB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,MAAM,CAAC;YACjC,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,KAAK,CAAC;YAClC,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC,qBAAqB,CAAC;YACxD,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;YACxB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;YACxB,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;YAC3B,EAAE,CAAC,CAAC,QAAQ,CAAC,EAAC;gBACV,QAAQ,CAAC,IAAI,CAAC;YAClB,CAAC;QACL,CAAC,EACD,UAAS,KAAK;YACV,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;YACrB,IAAI,CAAC,aAAa,GAAQ,KAAK,CAAC;QACpC,CAAC,CACJ,CAAC;IACN,CAAC;IAEM,mDAAY,GAAnB;QACI,IAAI,IAAI,GAAG,IAAI,CAAC;QAChB,IAAI,CAAC,OAAO,CAAC,EAAE,EAAE,UAAS,IAAI;YAC1B,IAAI,CAAC,SAAS,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,EAAE,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;YACnE,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,CAAC;QAC/B,CAAC,CAAC,CAAC;IACP,CAAC;IACL;AAAA;AA/JkC;IAAhC,+EAAS,CAAE,uFAAkB,CAAE;kDAAQ,uFAAkB,oBAAlB,uFAAkB;2DAAC;AACtB;IAAjC,+EAAS,CAAE,mEAAmB,CAAE;kDAAS,mEAAmB,oBAAnB,mEAAmB;4DAAC;AAFrD,4BAA4B;IAJxC,+EAAS,CAAC;QACP,QAAQ,EAAE,qBAAqB;QAC/B,kCAAmD;KACtD,CAAC;yDAoCoC,2EAAW,oBAAX,2EAAW,sDAAiB,gEAAiB,oBAAjB,gEAAiB;GAnCtE,4BAA4B,CAgKzC;AAhKyC;;;;;;;;;;;;;;;;;;;;;;;;;;ACtBuC;AAEV;AAEjB;AAEJ;AACS;AAc1D,IAAa,8BAA8B;IAkCvC,wCAAqB,WAAwB,EAAU,KAAwB;QAA1D,gBAAW,GAAX,WAAW,CAAa;QAAU,UAAK,GAAL,KAAK,CAAmB;QA7B/E,YAAO,GAAW,KAAK,CAAC;QAExB,cAAS,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;QAGrB,4BAAuB,GAAU,CAAC,CAAC;QACnC,UAAK,GAAG,EAAE,CAAC;QACX,UAAK,GAAG,EAAE,CAAC;QAGX,cAAS,GAAkB;YACtB,EAAE,EAAF,UAAG,KAAa;gBACb,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;oBACR,MAAM,CAAC,MAAM,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC,MAAM,CAAC,kBAAkB,CAAC,CAAC;gBACzD,CAAC;YACH,CAAC;YACD,IAAI,EAAJ,UAAK,KAAa;gBACd,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;oBACR,EAAE,CAAC,CAAC,MAAM,CAAC,KAAK,EAAE,kBAAkB,CAAC,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;wBAC9C,IAAI,CAAC,GAAG,MAAM,CAAC,KAAK,EAAE,kBAAkB,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC;wBACrD,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;oBACzB,CAAC;oBACD,MAAM,CAAC,KAAK,CAAC;gBACjB,CAAC;YACL,CAAC;SAGN,CAAC;QAKK,kBAAa,GAAc;YAC9B,EAAC,IAAI,EAAE,EAAE,EAAE,KAAK,EAAE,EAAE,EAAC;SACxB,CAAC;QACK,oBAAe,GAAc,EAAE,CAAC;QAEhC,qBAAgB,GAAO;YAC1B,SAAS,EAAE,KAAK;YAChB,UAAU,EAAE,IAAI;SACnB,CAAC;QACK,oBAAe,GAAc,CAAC;gBACnC,eAAe,EAAE,sBAAsB;gBACvC,WAAW,EAAE,qBAAqB;gBAClC,oBAAoB,EAAE,oBAAoB;gBAC1C,gBAAgB,EAAE,MAAM;gBACxB,yBAAyB,EAAE,MAAM;gBACjC,qBAAqB,EAAE,oBAAoB;aAC5C,CAAC,CAAC;QAKI,oBAAe,GAAW,IAAI,CAAC;QAC/B,kBAAa,GAAU,MAAM,CAAC;QAIrC,iBAAY,GAAG,CAAC,CAAC;QACjB,iBAAY,GAAG,EAAE,CAAC;QAClB,eAAU,GAAG,KAAK,CAAC;IA9BnB,CAAC;IA+BD,iDAAQ,GAAR;QACI,IAAI,IAAI,GAAG,IAAI,CAAC;QAChB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,kEAAW,CAAC,oBAAoB,EAAC,EAAE,CAAC;aAC5D,SAAS,CACN,UAAS,IAAI;YACT,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;YACrB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,MAAM,CAAC;YACjC,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,KAAK,CAAC;YAClC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;YAE3B,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;YACvB,IAAI,CAAC,YAAY,GAAI,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC;YAChD,IAAI,CAAC,YAAY,GAAI,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC;YAC9C,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,aAAa,CAAC;gBAC7B,KAAK,EAAE,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,EAAE,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC;gBACxD,KAAK,EAAE;oBACH,KAAK,EAAE,IAAI,CAAC,UAAU,CAAC,KAAK;oBAC5B,KAAK,EAAE,IAAI,CAAC,UAAU,CAAC,QAAQ;iBAClC;aACJ,CAAC,CAAC;YACH,IAAI,CAAC,SAAS,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,EAAE,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;YACnE,IAAI,CAAC,uBAAuB,GAAG,IAAI,CAAC,uBAAuB,CAAC;YAC5D,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;YACxB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;YAExB,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,CAAC;YAE3B,UAAU,CAAC;gBACP,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;YAC5B,CAAC,EAAE,IAAI,CAAC,CAAC;QACb,CAAC,EACD,UAAS,KAAK;YACV,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;YACrB,IAAI,CAAC,aAAa,GAAQ,KAAK,CAAC;QACpC,CAAC,CACJ,CAAC;IAEN,CAAC;IAGM,iDAAQ,GAAf,UAAgB,MAAM;QAClB,+CAA+C;QAC/C,IAAI,CAAC,cAAc,GAAG,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,MAAM,CAAC,cAAc,CAAC,CAAC;QAC5E,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,MAAM,CAAC,cAAc,CAAC,CAAC;QAC1E,IAAI,CAAC,OAAO,EAAE,CAAC;IACnB,CAAC;IAEO,gDAAO,GAAf,UAAgB,OAAQ,EAAE,QAAS;QAC/B,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,UAAW,CAAC,CAAC,CAAC;YACnC,MAAM,CAAC;QACX,CAAC;QAED,IAAI,IAAI,GAAG,IAAI,CAAC;QAChB,IAAI,MAAM,GAAG,OAAO,IAAI;YACpB,UAAU,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;YAC7B,QAAQ,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;SAC9B;QACD,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,kEAAW,CAAC,oBAAoB,EAAE,MAAM,CAAC;aACjE,SAAS,CACN,UAAS,IAAI;YACT,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;YACrB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,MAAM,CAAC;YACjC,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,KAAK,CAAC;YAClC,IAAI,CAAC,uBAAuB,GAAG,IAAI,CAAC,uBAAuB,CAAC;YAC5D,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;YACxB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;YACxB,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;YAC3B,EAAE,CAAC,CAAC,QAAQ,CAAC,EAAC;gBACV,QAAQ,CAAC,IAAI,CAAC;YAClB,CAAC;QACL,CAAC,EACD,UAAS,KAAK;YACV,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;YACrB,IAAI,CAAC,aAAa,GAAQ,KAAK,CAAC;QACpC,CAAC,CACJ,CAAC;IACN,CAAC;IAEM,qDAAY,GAAnB;QACI,IAAI,IAAI,GAAG,IAAI,CAAC;QAChB,IAAI,CAAC,OAAO,CAAC,EAAE,EAAE,UAAS,IAAI;YAC1B,IAAI,CAAC,SAAS,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,EAAE,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;YACnE,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,CAAC;QAC/B,CAAC,CAAC,CAAC;IACP,CAAC;IAIL;AAAA;AA3JqC;IAAhC,+EAAS,CAAE,uFAAkB,CAAE;kDAAQ,uFAAkB,oBAAlB,uFAAkB;6DAAC;AACzB;IAAjC,+EAAS,CAAE,mEAAmB,CAAE;kDAAS,mEAAmB,oBAAnB,mEAAmB;8DAAC;AAFrD,8BAA8B;IAJ1C,+EAAS,CAAC;QACP,QAAQ,EAAE,uBAAuB;QACjC,kCAAqD;KACxD,CAAC;yDAmCoC,2EAAW,oBAAX,2EAAW,sDAAiB,gEAAiB,oBAAjB,gEAAiB;GAlCtE,8BAA8B,CA4J3C;AA5J2C;;;;;;;;;;;;;;;;;;;;;;;;;;ACrBqC;AAGV;AAEjB;AAEJ;AACS;AAe1D,IAAa,oBAAoB;IAkC7B,8BAAqB,WAAwB,EAAU,KAAwB;QAA1D,gBAAW,GAAX,WAAW,CAAa;QAAU,UAAK,GAAL,KAAK,CAAmB;QA7B/E,YAAO,GAAW,KAAK,CAAC;QAExB,cAAS,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;QAGrB,gBAAW,GAAG,EAAE,CAAC;QAKjB,cAAS,GAAkB;YACtB,EAAE,EAAF,UAAG,KAAa;gBACb,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;oBACR,MAAM,CAAC,MAAM,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC,MAAM,CAAC,kBAAkB,CAAC,CAAC;gBACzD,CAAC;YACH,CAAC;YACD,IAAI,EAAJ,UAAK,KAAa;gBACd,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;oBACR,EAAE,CAAC,CAAC,MAAM,CAAC,KAAK,EAAE,kBAAkB,CAAC,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;wBAC9C,IAAI,CAAC,GAAG,MAAM,CAAC,KAAK,EAAE,kBAAkB,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC;wBACrD,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;oBACzB,CAAC;oBACD,MAAM,CAAC,KAAK,CAAC;gBACjB,CAAC;YACL,CAAC;SAGN,CAAC;QAKK,kBAAa,GAAc;YAC9B,EAAC,IAAI,EAAE,EAAE,EAAE,KAAK,EAAE,EAAE,EAAC,EAAC,EAAC,IAAI,EAAE,EAAE,EAAE,KAAK,EAAE,EAAE,EAAC;SAC9C,CAAC;QACK,sBAAiB,GAAc;YAClC,EAAC,IAAI,EAAE,EAAE,EAAE,KAAK,EAAE,EAAE,EAAC,EAAC,EAAC,IAAI,EAAE,EAAE,EAAE,KAAK,EAAE,EAAE,EAAC;SAC9C,CAAC;QACK,oBAAe,GAAc,EAAE,CAAC;QAEhC,qBAAgB,GAAO;YAC1B,SAAS,EAAE,KAAK;YAChB,UAAU,EAAE,IAAI;SACnB,CAAC;QACK,oBAAe,GAAc,CAAC;gBACnC,eAAe,EAAE,sBAAsB;gBACvC,WAAW,EAAE,qBAAqB;gBAClC,oBAAoB,EAAE,oBAAoB;gBAC1C,gBAAgB,EAAE,MAAM;gBACxB,yBAAyB,EAAE,MAAM;gBACjC,qBAAqB,EAAE,oBAAoB;aAC5C,EAAE;gBACD,eAAe,EAAE,sBAAsB;gBACvC,WAAW,EAAE,qBAAqB;gBAClC,oBAAoB,EAAE,oBAAoB;gBAC1C,gBAAgB,EAAE,MAAM;gBACxB,yBAAyB,EAAE,MAAM;gBACjC,qBAAqB,EAAE,oBAAoB;aAC5C,CAAC,CAAC;QAEI,wBAAmB,GAAc,CAAC;gBACvC,eAAe,EAAE,sBAAsB;gBACvC,WAAW,EAAE,qBAAqB;gBAClC,oBAAoB,EAAE,oBAAoB;gBAC1C,gBAAgB,EAAE,MAAM;gBACxB,yBAAyB,EAAE,MAAM;gBACjC,qBAAqB,EAAE,oBAAoB;aAC5C,EAAE;gBACD,eAAe,EAAE,sBAAsB;gBACvC,WAAW,EAAE,qBAAqB;gBAClC,oBAAoB,EAAE,oBAAoB;gBAC1C,gBAAgB,EAAE,MAAM;gBACxB,yBAAyB,EAAE,MAAM;gBACjC,qBAAqB,EAAE,oBAAoB;aAC5C,CAAC,CAAC;QAKI,oBAAe,GAAW,IAAI,CAAC;QAC/B,kBAAa,GAAU,MAAM,CAAC;QAIrC,iBAAY,GAAG,CAAC,CAAC;QACjB,iBAAY,GAAG,EAAE,CAAC;QAClB,eAAU,GAAG,KAAK,CAAC;IAxDnB,CAAC;IAyDD,uCAAQ,GAAR;QACI,IAAI,IAAI,GAAG,IAAI,CAAC;QAChB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,kEAAW,CAAC,UAAU,EAAC,EAAE,CAAC;aAClD,SAAS,CACN,UAAS,IAAI;YACT,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;YACrB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,MAAM,CAAC;YACjC,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,WAAW,CAAC;YAC1C,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,KAAK,CAAC;YAClC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,YAAY,CAAC;YACrC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;YAChC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;YAE3B,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;YACvB,IAAI,CAAC,YAAY,GAAI,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC;YAChD,IAAI,CAAC,YAAY,GAAI,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC;YAC9C,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,aAAa,CAAC;gBAC7B,KAAK,EAAE,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,EAAE,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC;gBACxD,KAAK,EAAE;oBACH,KAAK,EAAE,IAAI,CAAC,UAAU,CAAC,KAAK;oBAC5B,KAAK,EAAE,IAAI,CAAC,UAAU,CAAC,QAAQ;iBAClC;aACJ,CAAC,CAAC;YACH,IAAI,CAAC,SAAS,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,EAAE,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;YACnE,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,CAAC;YAE3B,UAAU,CAAC;gBACP,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;YAC5B,CAAC,EAAE,IAAI,CAAC,CAAC;QAGb,CAAC,EACD,UAAS,KAAK;YACV,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;YACrB,IAAI,CAAC,aAAa,GAAQ,KAAK,CAAC;QACpC,CAAC,CACJ,CAAC;IAEN,CAAC;IAEM,2CAAY,GAAnB,UAAoB,CAAK;QACrB,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IACnB,CAAC;IAEM,2CAAY,GAAnB,UAAoB,CAAK;QACrB,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IACnB,CAAC;IAEM,uCAAQ,GAAf,UAAgB,MAAM;QAClB,IAAI,CAAC,cAAc,GAAG,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,MAAM,CAAC,cAAc,CAAC,CAAC;QAC5E,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,MAAM,CAAC,cAAc,CAAC,CAAC;QAC1E,IAAI,CAAC,OAAO,EAAE,CAAC;IACnB,CAAC;IAEO,sCAAO,GAAf,UAAgB,OAAQ,EAAE,QAAS;QAC/B,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,UAAW,CAAC,CAAC,CAAC;YACnC,MAAM,CAAC;QACX,CAAC;QAED,IAAI,IAAI,GAAG,IAAI,CAAC;QAChB,IAAI,MAAM,GAAG,OAAO,IAAI;YACpB,UAAU,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;YAC7B,QAAQ,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;SAC9B;QACD,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,kEAAW,CAAC,UAAU,EAAE,MAAM,CAAC;aACvD,SAAS,CACN,UAAS,IAAI;YACT,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;YACrB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,MAAM,CAAC;YACjC,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,WAAW,CAAC;YAC1C,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,KAAK,CAAC;YAClC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,YAAY,CAAC;YACrC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;YAEhC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;YAC3B,EAAE,CAAC,CAAC,QAAQ,CAAC,EAAC;gBACV,QAAQ,CAAC,IAAI,CAAC;YAClB,CAAC;QACL,CAAC,EACD,UAAS,KAAK;YACV,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;YACrB,IAAI,CAAC,aAAa,GAAQ,KAAK,CAAC;QACpC,CAAC,CACJ,CAAC;IACN,CAAC;IAEM,kDAAmB,GAA1B,UAA2B,KAAK;QAC5B,MAAM,CAAC,MAAM,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC,MAAM,CAAC,cAAc,CAAC;IACpD,CAAC;IAEM,sCAAO,GAAd;QACI,IAAI,IAAI,GAAG,IAAI,CAAC;QAChB,IAAI,CAAC,OAAO,CAAC,EAAE,EAAE,UAAS,IAAI;YAC1B,IAAI,CAAC,SAAS,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,EAAE,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;YACnE,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,CAAC;QAC/B,CAAC,CAAC,CAAC;IACP,CAAC;IAEM,sCAAO,GAAd,UAAe,KAAK;QAChB,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;IAC5B,CAAC;IAEL,2BAAC;AAAD,CAAC;AAnMoC;IAAhC,+EAAS,CAAE,uFAAkB,CAAE;kDAAQ,uFAAkB,oBAAlB,uFAAkB;mDAAC;AACzB;IAAjC,+EAAS,CAAE,mEAAmB,CAAE;kDAAS,mEAAmB,oBAAnB,mEAAmB;oDAAC;AAFrD,oBAAoB;IAJhC,+EAAS,CAAC;QACP,QAAQ,EAAE,aAAa;QACvB,kCAAyC;KAC5C,CAAC;yDAmCoC,2EAAW,oBAAX,2EAAW,sDAAiB,gEAAiB,oBAAjB,gEAAiB;GAlCtE,oBAAoB,CAoMhC;AApMgC;;;;;;;;;;;;;ACvBR;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAkB;AACqC;AAEnC;AACZ;AACF;AAI/B,IAAa,WAAW;IAEvB,qBAAqB,IAAU;QAAV,SAAI,GAAJ,IAAI,CAAM;IAAG,CAAC;IAK5B,6BAAO,GAAd,UAAe,GAAG,EAAE,OAAO;QAC1B,IAAI,IAAI,GAAG,OAAO,IAAI,EAAE,CAAC;QACzB,IAAI,CAAC,CAAC,GAAG,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,CAAC;QAE9B,IAAI,MAAM,GAAoB,IAAI,sEAAe,EAAE,CAAC;QAC9C,GAAG,CAAC,CAAC,IAAI,GAAG,IAAI,IAAI,CAAC,CAAC,CAAC;YACpB,EAAE,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;gBAC7B,IAAI,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC;gBACnB,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;YACxB,CAAC;QACJ,CAAC;QACD,IAAI,OAAO,GAAG,IAAI,qEAAc,CAAC;YAChC,MAAM,EAAE,MAAM;SACf,CAAC,CAAC;QAER,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,OAAO,CAAC;aAChC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC;aACrB,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IAC3B,CAAC;IAGM,8BAAQ,GAAf,UAAgB,GAAG,EAAE,OAAO;QAC3B,IAAI,IAAI,GAAG,OAAO,IAAI,EAAE,CAAC;QAEzB,IAAI,MAAM,GAAoB,IAAI,sEAAe,EAAE,CAAC;QAC9C,GAAG,CAAC,CAAC,IAAI,GAAG,IAAI,IAAI,CAAC,CAAC,CAAC;YACpB,EAAE,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;gBAC7B,IAAI,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC;gBACnB,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;YACxB,CAAC;QACJ,CAAC;QACD,IAAI,OAAO,GAAG,IAAI,qEAAc,CAAC;YAChC,MAAM,EAAE,MAAM;SACf,CAAC,CAAC;QAER,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC;aAC9B,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC;aACrB,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IAC3B,CAAC;IAGO,iCAAW,GAAnB,UAAoB,GAAa;QAChC,IAAI,IAAI,GAAG,GAAG,CAAC,IAAI,EAAE,CAAC;QACtB,MAAM,CAAC,IAAI,IAAI,EAAE,CAAC;IACnB,CAAC;IAEO,iCAAW,GAAnB,UAAoB,KAAqB;QACxC,qEAAqE;QACrE,IAAI,MAAc,CAAC;QACnB,EAAE,CAAC,CAAC,KAAK,YAAY,+DAAQ,CAAC,CAAC,CAAC;YAC/B,IAAM,IAAI,GAAG,KAAK,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC;YAChC,IAAM,GAAG,GAAG,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;YAC/C,MAAM,GAAM,KAAK,CAAC,MAAM,YAAM,KAAK,CAAC,UAAU,IAAI,EAAE,UAAI,GAAK,CAAC;QAC/D,CAAC;QAAC,IAAI,CAAC,CAAC;YACP,MAAM,GAAG,KAAK,CAAC,OAAO,GAAG,KAAK,CAAC,OAAO,GAAG,KAAK,CAAC,QAAQ,EAAE,CAAC;QAC3D,CAAC;QAED,OAAO,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;QACtB,MAAM,CAAC,2DAAU,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;IACjC,CAAC;IAIF,kBAAC;AAAD,CAAC;AAtEY,WAAW;IADvB,gFAAU,EAAE;yDAGe,2DAAI,oBAAJ,2DAAI;GAFnB,WAAW,CAsEvB;AAtEuB","file":"main.bundle.js","sourcesContent":["export class AppSettings {\n\n\tpublic static baseUrl = '/dash/api/';\n\tpublic static userUrl = AppSettings.baseUrl + 'user/';\n\n\tpublic static perfCpuUrl = AppSettings.baseUrl + 'perf/cpu/';\n\tpublic static perfMemoryUrl = AppSettings.baseUrl + 'perf/memory/';\n\tpublic static perfDiskUrl = AppSettings.baseUrl + 'perf/disk/';\n\tpublic static perfNetworkUrl = AppSettings.baseUrl + 'perf/network/';\n\n\tpublic static bootTimeUrl = AppSettings.baseUrl + 'perf/boottime/';\n\tpublic static usersUrl = AppSettings.baseUrl + 'perf/users/';\n\tpublic static dashUrl = AppSettings.baseUrl + 'perf/dash/';\n\n\tpublic static processesUrl = AppSettings.baseUrl + 'processes/';\n\tpublic static processesAvarageNumberUrl =  AppSettings.baseUrl + 'processes/hours/';\n\tpublic static processesLastUrl =  AppSettings.baseUrl + 'processes/last/';\n\n\tpublic static secCorrectLoginUrl =  AppSettings.baseUrl + 'security/correctlogins/';\n\tpublic static secIncorrectLoginUrl =  AppSettings.baseUrl + 'security/incorrectlogins/';\n\n\tpublic static backupMakeUrl =  AppSettings.baseUrl + 'backups/make/';\n\tpublic static backupMakeMediaUrl =  AppSettings.baseUrl + 'backups/make/media/';\n\tpublic static backupsUrl =  AppSettings.baseUrl + 'backups/';\n\tpublic static backupsEnableUrl =  AppSettings.baseUrl + 'backups/stoprun/';\n\tpublic static backupsSetTimeUrl =  AppSettings.baseUrl + 'backups/time/';\n\tpublic static backupsPathDirUrl =  AppSettings.baseUrl + 'backups/dirs/';\n\tpublic static backupGetMediaUrl = AppSettings.baseUrl + 'backups/file/';\n\n\tpublic static urlStatUrl = AppSettings.baseUrl + 'urlstat/';\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.settings.ts","function webpackEmptyContext(req) {\n\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 227;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src async\n// module id = 227\n// module chunks = 1","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts","import { Component, OnInit } from '@angular/core';\n\n\nimport { DataService } from './services/data.service';\nimport { UserService } from './services/user.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n    title = 'app works!';\n\n    loading: boolean = false;\n    error_message;\n    user;\n\n    constructor (private dataService: DataService, private userService: UserService) {\n        \n    }\n\n\n    ngOnInit() { \n        console.log(\"AppComponent\");\n    }\n    \n\n    getUser() {\n        let self = this;\n        self.loading = true;\n        \n        \n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { Http, HttpModule, XSRFStrategy, CookieXSRFStrategy } from '@angular/http';\n\nimport { RouterModule } from \"@angular/router\";\n\nimport { NouisliderModule } from 'ng2-nouislider';\n\nimport { AppComponent } from './app.component';\nimport { ROUTES } from \"./app.routes\";\n\nimport { TimepickerModule } from 'ngx-bootstrap/timepicker';\n\n// App modules/components\nimport { LayoutsModule } from \"./components/common/layouts/layouts.module\";\n\n// App views\nimport { MainViewModule } from \"./views/main-view/main-view.module\";\nimport { MinorViewModule } from \"./views/minor-view/minor-view.module\";\nimport { PerfViewModule } from \"./views/perf-view/perf-view.module\";\nimport { ProcessesViewModule  } from \"./views/processes-view/processes-view.module\";\nimport { SecCorrectLoginViewModule } from \"./views/sec-view/sec-correct-login-view.module\";\nimport { SecIncorrectLoginViewModule } from \"./views/sec-view/sec-incorrect-login-view.module\";\nimport { BackupViewModule } from \"./views/backup-view/backup-view.module\";\nimport { UrlStatViewModule } from \"./views/urlstat-view/urlstat-view.module\";\n\n\n// App services\nimport { ChartsService } from \"./services/charts.services\";\nimport { DataService } from './services/data.service';\nimport { UserService } from './services/user.service';\nimport { WindowRef } from './services/window.service';\n\n\n\nexport function CookieXSRFStrategyFactory() {\n    return  new CookieXSRFStrategy('csrftoken', 'X-CSRFToken');\n}\n\nexport const AppCSRF = {\n  provide: XSRFStrategy,\n  useFactory: CookieXSRFStrategyFactory,\n};\n\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpModule,\n\n    NouisliderModule,\n\n    // Views\n    MainViewModule,\n    MinorViewModule,\n    PerfViewModule,\n    ProcessesViewModule,\n    SecCorrectLoginViewModule,\n    SecIncorrectLoginViewModule,\n    BackupViewModule,\n    UrlStatViewModule,\n\n    // Modules\n    LayoutsModule,\n\n    RouterModule.forRoot(ROUTES, { useHash: true }),\n\n    TimepickerModule.forRoot()\n  ],\n  providers: [\n    AppCSRF,\n    ChartsService,\n    DataService,\n    UserService,\n    WindowRef\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import { Routes} from \"@angular/router\";\nimport { mainViewComponent} from \"./views/main-view/main-view.component\";\nimport { perfViewComponent} from \"./views/perf-view/perf-view.component\";\nimport { processesViewComponent } from \"./views/processes-view/processes-view.component\";\nimport { basicComponent } from \"./components/common/layouts/basic.component\";\nimport { secCorrectLoginViewComponent } from \"./views/sec-view/sec-correct-login-view.component\";\nimport { secIncorrectLoginViewComponent } from \"./views/sec-view/sec-incorrect-login-view.component\";\nimport { urlstatViewComponent } from \"./views/urlstat-view/urlstat-view.component\";\nimport { backupViewComponent } from \"./views/backup-view/backup-view.component\";\n\n\nexport const ROUTES:Routes = [\n  // Main redirect\n  {path: '', redirectTo: 'dash', pathMatch: 'full'},\n  //{path: '', redirectTo: '', pathMatch: 'full'},\n  // App views\n  {\n    path: '', component: basicComponent,\n    children: [\n      {path: 'dash', component: mainViewComponent},\n      {path: 'perf', component: perfViewComponent},\n      {path: 'processes', component: processesViewComponent},\n      {path: 'correctlogin', component: secCorrectLoginViewComponent},\n      {path: 'incorrectlogin', component: secIncorrectLoginViewComponent},\n      {path: 'urlstat', component: urlstatViewComponent},\n      {path: 'backups', component: backupViewComponent},\n      {path: 'backups/result', component: backupViewComponent},\n    ]\n  },\n  \n\n\n  // Handle all other routes\n  {path: '**', redirectTo: 'dash' }\n\n\n];\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.routes.ts","import { Component, OnInit, ViewChild, ChangeDetectorRef } from '@angular/core';\n\n\nimport { BaseChartDirective } from '../../../libs/ng2-charts/ng2-charts';\n\nimport { NouisliderComponent } from 'ng2-nouislider';\n\nimport { AppSettings } from '../../../app.settings';\nimport { DataService } from '../../../services/data.service';\n\ndeclare var moment: any;\n\ninterface NouiFormatter {\n    to(value: number): string;\n    from(value: string): any;\n}\n\n\n@Component({\n    selector: 'cpu-chart',\n    templateUrl: 'cpu.template.html',\n})\nexport class CpuComponent implements OnInit { \n    @ViewChild( BaseChartDirective ) chart: BaseChartDirective;\n    @ViewChild( NouisliderComponent ) slider: NouisliderComponent;\n\n    error_message;\n    loading:boolean = false;\n\n    dateRange = [0, 100];\n    rangeStartDate;\n    rangeEndDate;\n   \n    \n    formatter: NouiFormatter = {\n         to(value: number): string {\n            if (value) {\n                return moment(value, 'X').format('YYYY-DD-MM HH:mm');\n            }\n          },\n          from(value: string): any {\n              if (value) {\n                  if (moment(value, 'YYYY-DD-MM HH:mm').isValid()) {\n                      let d = moment(value, 'YYYY-DD-MM HH:mm').format('X')\n                      return parseFloat(d);\n                  }\n                  return value;\n              }\n          }\n         \n\n    };\n\n    constructor (private dataService: DataService, private chRef: ChangeDetectorRef) {\n    }\n\n    public lineChartData:Array<any> = [\n        {data: [], label: ''}\n    ];\n    public lineChartLabels:Array<any> = [];\n\n    public lineChartOptions:any = {\n        animation: false,\n        responsive: true,\n        scales: {\n            yAxes: [{\n                display: true,\n                ticks: {\n                    beginAtZero: true,\n                    steps: 5,\n                    stepValue: 5,\n                    max: 100,\n                    callback: function(value: number, index, values) {\n                        return value + \"%\";\n                    }\n                }\n            }]\n        }\n    };\n    public lineChartColors:Array<any> = [{\n      backgroundColor: 'rgba(10,159,177,0.5)',\n      borderColor: 'rgba(225,10,24,0.2)',\n      pointBackgroundColor: 'rgba(10,10,24,0.2)',\n      pointBorderColor: '#fff',\n      pointHoverBackgroundColor: '#fff',\n      pointHoverBorderColor: 'rgba(10,10,24,0.2)'\n    }];\n\n\n    \n\n    public lineChartLegend:boolean = true;\n    public lineChartType:string = 'line';\n\n    \n\n    dateRangeMin = 0;\n    dateRangeMax = 10;\n    onInitTime = false;\n    ngOnInit() { \n        let self = this;\n        self.loading = true;\n        self.dataService.getData(AppSettings.perfCpuUrl,{})\n        .subscribe(\n            function(data) {\n                self.loading = false;\n                self.lineChartData = data.values;\n                self.lineChartLabels = data.dates;\n                self.chart.ngOnChanges({});\n\n                self.onInitTime = true;\n                self.dateRangeMin =  data.date_range.start_date;\n                self.dateRangeMax =  data.date_range.end_date;\n                self.slider.slider.updateOptions({\n                    start: [data.date_range.start, data.date_range.end_date],\n                    range: {\n                        'min': data.date_range.start,\n                        'max': data.date_range.end_date\n                    }\n                });\n                self.dateRange = [data.date_range.start, data.date_range.end_date];\n                self.chRef.detectChanges();\n                    \n                setTimeout(function() {\n                    self.onInitTime = false;\n                }, 1000);\n            },\n            function(error) {\n                self.loading = false;\n                self.error_message = <any>error;\n            }\n        );\n        \n    }\n\n    public chartClicked(e:any):void {\n        console.log(e);\n    }\n \n    public chartHovered(e:any):void {\n        console.log(e);\n    }\n\n    public onChange($event) {\n        //console.log('this.dateRange', this.dateRange)\n        this.rangeStartDate = moment(this.dateRange[0], 'X').format('MMM DD HH:mm');\n        this.rangeEndDate = moment(this.dateRange[1], 'X').format('MMM-DD HH:mm');\n        this.getData();\n    }\n\n    private getData(_params?, callback?) {\n        if (this.loading || this.onInitTime ) {\n            return;\n        }\n\n        let self = this;\n        let params = _params || {\n            date_start: this.dateRange[0],\n            date_end: this.dateRange[1]\n        }\n        self.loading = true;\n        self.dataService.getData(AppSettings.perfCpuUrl, params)\n        .subscribe(\n            function(data) {\n                self.loading = false;\n                self.lineChartData = data.values;\n                self.lineChartLabels = data.dates;\n                self.chart.ngOnChanges({});\n                if (callback){\n                    callback(data)\n                }\n            },\n            function(error) {\n                self.loading = false;\n                self.error_message = <any>error;\n            }\n        );\n    }\n\n    public refresh() {\n        let self = this;\n        this.getData({}, function(data) {\n            self.dateRange = [data.date_range.start, data.date_range.end_date];\n            self.chRef.detectChanges();\n        });\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/charts/cpu/cpu.component.ts","import { Component, OnInit, ViewChild, ChangeDetectorRef } from '@angular/core';\n\n\nimport { BaseChartDirective } from '../../../libs/ng2-charts/ng2-charts';\n\nimport { NouisliderComponent } from 'ng2-nouislider';\n\nimport { AppSettings } from '../../../app.settings';\nimport { DataService } from '../../../services/data.service';\n\ndeclare var moment: any;\n\ninterface NouiFormatter {\n    to(value: number): string;\n    from(value: string): any;\n}\n\n\n@Component({\n    selector: 'disk-chart',\n    templateUrl: 'disk.template.html',\n})\nexport class DiskComponent implements OnInit { \n    @ViewChild( BaseChartDirective ) chart: BaseChartDirective;\n    @ViewChild( NouisliderComponent ) slider: NouisliderComponent;\n\n    error_message;\n    loading:boolean = false;\n\n    dateRange = [0, 100];\n    rangeStartDate;\n    rangeEndDate;\n   \n    \n    formatter: NouiFormatter = {\n         to(value: number): string {\n            if (value) {\n                return moment(value, 'X').format('YYYY-DD-MM HH:mm');\n            }\n          },\n          from(value: string): any {\n              if (value) {\n                  if (moment(value, 'YYYY-DD-MM HH:mm').isValid()) {\n                      let d = moment(value, 'YYYY-DD-MM HH:mm').format('X')\n                      return parseFloat(d);\n                  }\n                  return value;\n              }\n          }\n         \n\n    };\n\n    constructor (private dataService: DataService, private chRef: ChangeDetectorRef) {\n        \n    }\n\n    public lineChartData:Array<any> = [\n        {data: [], label: ''}\n    ];\n    public lineChartLabels:Array<any> = [];\n\n    public lineChartOptions:any = {\n        animation: false,\n        responsive: true,\n        scales: {\n            yAxes: [{\n                display: true,\n                ticks: {\n                    beginAtZero: true,\n                    steps: 5,\n                    stepValue: 5,\n                    max: 100,\n                    callback: function(value: number, index, values) {\n                        return value + \"%\";\n                    }\n                }\n            }]\n        }\n\n    };\n    public lineChartColors:Array<any> = [{\n      backgroundColor: 'rgba(248,172,89,0.5)',\n      borderColor: 'rgba(225,10,24,0.2)',\n      pointBackgroundColor: 'rgba(10,10,24,0.2)',\n      pointBorderColor: '#fff',\n      pointHoverBackgroundColor: '#fff',\n      pointHoverBorderColor: 'rgba(10,10,24,0.2)'\n    }];\n\n\n    \n\n    public lineChartLegend:boolean = true;\n    public lineChartType:string = 'line';\n\n    \n\n    dateRangeMin = 0;\n    dateRangeMax = 10;\n    onInitTime = false;\n    ngOnInit() { \n        let self = this;\n        self.loading = true;\n        self.dataService.getData(AppSettings.perfDiskUrl, {})\n        .subscribe(\n            function(data) {\n                self.loading = false;\n                self.lineChartData = data.values;\n                self.lineChartLabels = data.dates;\n                self.chart.ngOnChanges({});\n\n                self.onInitTime = true;\n                self.dateRangeMin =  data.date_range.start_date;\n                self.dateRangeMax =  data.date_range.end_date;\n                \n                self.slider.slider.updateOptions({\n                    start: [data.date_range.start, data.date_range.end_date],\n                    range: {\n                        'min': data.date_range.start,\n                        'max': data.date_range.end_date\n                    }\n                });\n                self.dateRange = [data.date_range.start, data.date_range.end_date];\n                self.chRef.detectChanges();\n\n\n                setTimeout(function() {\n                    self.onInitTime = false;\n                }, 1000);\n            },\n            function(error) {\n                self.loading = false;\n                self.error_message = <any>error;\n            }\n        );\n        \n    }\n\n    public chartClicked(e:any):void {\n        console.log(e);\n    }\n \n    public chartHovered(e:any):void {\n        console.log(e);\n    }\n\n    public onChange($event) {\n        this.rangeStartDate = moment(this.dateRange[0], 'X').format('MMM DD HH:mm');\n        this.rangeEndDate = moment(this.dateRange[1], 'X').format('MMM-DD HH:mm');\n        this.getData();\n    }\n\n    private getData(_params?, callback?) {\n        if (this.loading || this.onInitTime ) {\n            return;\n        }\n\n        let self = this;\n        let params = _params || {\n            date_start: this.dateRange[0],\n            date_end: this.dateRange[1]\n        }\n        self.loading = true;\n        self.dataService.getData(AppSettings.perfDiskUrl, params)\n        .subscribe(\n            function(data) {\n                self.loading = false;\n                self.lineChartData = data.values;\n                self.lineChartLabels = data.dates;\n                self.chart.ngOnChanges({});\n                if (callback){\n                    callback(data)\n                }\n            },\n            function(error) {\n                self.loading = false;\n                self.error_message = <any>error;\n            }\n        );\n    }\n\n    public refresh() {\n        let self = this;\n        this.getData({}, function(data) {\n            self.dateRange = [data.date_range.start, data.date_range.end_date];\n            self.chRef.detectChanges();\n        });\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/charts/disk/disk.component.ts","import { Component, OnInit, ViewChild, ChangeDetectorRef } from '@angular/core';\n\n\nimport { BaseChartDirective } from '../../../libs/ng2-charts/ng2-charts';\n\nimport { NouisliderComponent } from 'ng2-nouislider';\n\nimport { AppSettings } from '../../../app.settings';\nimport { DataService } from '../../../services/data.service';\n\ndeclare var moment: any;\n\ninterface NouiFormatter {\n    to(value: number): string;\n    from(value: string): any;\n}\n\n\n\n@Component({\n    selector: 'memory-chart',\n    templateUrl: 'memory.template.html',\n})\nexport class MemoryComponent implements OnInit { \n    @ViewChild( BaseChartDirective ) chart: BaseChartDirective;\n    @ViewChild( NouisliderComponent ) slider: NouisliderComponent;\n\n    error_message;\n    loading:boolean = false;\n\n    dateRange = [0, 100];\n    rangeStartDate;\n    rangeEndDate;\n   \n    \n\n    formatter: NouiFormatter = {\n         to(value: number): string {\n            if (value) {\n                return moment(value, 'X').format('YYYY-DD-MM HH:mm');\n            }\n          },\n          from(value: string): any {\n              if (value) {\n                  if (moment(value, 'YYYY-DD-MM HH:mm').isValid()) {\n                      let d = moment(value, 'YYYY-DD-MM HH:mm').format('X')\n                      return parseFloat(d);\n                  }\n                  return value;\n              }\n          }\n         \n\n    };\n\n    public lineChartData:Array<any> = [\n        {data: [], label: ''}, {data: [], label: ''}, {data: [], label: ''}\n    ];\n    public lineChartLabels:Array<any> = [];\n\n    public lineChartOptions:any = {\n        animation: false,\n        responsive: true,\n        scales: {\n            yAxes: [{\n                ticks: {\n                    callback: function(value: number, index, values) {\n                        let k = 1000, dm = 2;\n                        let bytes = value;\n                        if (value == 0) {\n                            return '0 Bytes';\n                        }\n                        let sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'],\n                        i = Math.floor(Math.log(bytes) / Math.log(k));\n                        let data = parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];\n                        return data;\n                    }\n                }\n           }]\n         }\n    };\n    public lineChartColors:Array<any> = [{\n      backgroundColor: 'rgba(28,132,198,0.3)',\n      borderColor: 'rgba(35,198,200,0.2)',\n      pointBackgroundColor: 'rgba(10,10,24,0.2)',\n      pointBorderColor: '#fff',\n      pointHoverBackgroundColor: '#fff',\n      pointHoverBorderColor: 'rgba(10,10,24,0.2)'\n    }, {\n      backgroundColor: 'rgba(200,159,177,0.8)',\n      borderColor: 'rgba(225,10,24,0.2)',\n      pointBackgroundColor: 'rgba(10,10,24,0.2)',\n      pointBorderColor: '#fff',\n      pointHoverBackgroundColor: '#fff',\n      pointHoverBorderColor: 'rgba(10,10,24,0.2)'\n    }, {\n      backgroundColor: 'rgba(35,198,177,0.8)',\n      borderColor: 'rgba(225,10,24,0.2)',\n      pointBackgroundColor: 'rgba(10,10,24,0.2)',\n      pointBorderColor: '#fff',\n      pointHoverBackgroundColor: '#fff',\n      pointHoverBorderColor: 'rgba(10,10,24,0.2)'\n    }];\n\n\n    \n\n    public lineChartLegend:boolean = true;\n    public lineChartType:string = 'line';\n\n    constructor (private dataService: DataService, private chRef: ChangeDetectorRef) {\n        \n    }\n\n    dateRangeMin = 0;\n    dateRangeMax = 10;\n    onInitTime = false;\n    ngOnInit() { \n        let self = this;\n        self.loading = true;\n        self.dataService.getData(AppSettings.perfMemoryUrl, {})\n        .subscribe(\n            function(data) {\n                self.loading = false;\n                self.lineChartData = data.values;\n                self.lineChartLabels = data.dates;\n                self.chart.ngOnChanges({});\n\n                self.onInitTime = true;\n                self.dateRangeMin =  data.date_range.start_date;\n                self.dateRangeMax =  data.date_range.end_date;\n                self.slider.slider.updateOptions({\n                    start: [data.date_range.start, data.date_range.end_date],\n                    range: {\n                        'min': data.date_range.start,\n                        'max': data.date_range.end_date\n                    }\n                });\n                self.dateRange = [data.date_range.start, data.date_range.end_date];\n                    \n                setTimeout(function() {\n                    self.onInitTime = false;\n                }, 1000);\n            },\n            function(error) {\n                self.loading = false;\n                self.error_message = <any>error;\n            }\n        );\n        \n    }\n\n    public chartClicked(e:any):void {\n        console.log(e);\n    }\n \n    public chartHovered(e:any):void {\n        console.log(e);\n    }\n\n    public onChange($event) {\n        this.rangeStartDate = moment(this.dateRange[0], 'X').format('MMM DD HH:mm');\n        this.rangeEndDate = moment(this.dateRange[1], 'X').format('MMM-DD HH:mm');\n        this.getData();\n    }\n\n    private getData(_params?, callback?) {\n        if (this.loading || this.onInitTime ) {\n            return;\n        }\n\n        let self = this;\n        let params = _params || {\n            date_start: this.dateRange[0],\n            date_end: this.dateRange[1]\n        }\n        self.loading = true;\n        self.dataService.getData(AppSettings.perfMemoryUrl, params)\n        .subscribe(\n            function(data) {\n                self.loading = false;\n                self.lineChartData = data.values;\n                self.lineChartLabels = data.dates;\n                self.chart.ngOnChanges({});\n                if (callback){\n                    callback(data)\n                }\n            },\n            function(error) {\n                self.loading = false;\n                self.error_message = <any>error;\n            }\n        );\n    }\n\n    public refresh() {\n        let self = this;\n        this.getData({}, function(data) {\n            self.dateRange = [data.date_range.start, data.date_range.end_date];\n            self.chRef.detectChanges();\n        });\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/charts/memory/memory.component.ts","import { Component, OnInit, ViewChild, ChangeDetectorRef } from '@angular/core';\n\n\nimport { BaseChartDirective } from '../../../libs/ng2-charts/ng2-charts';\n\nimport { NouisliderComponent } from 'ng2-nouislider';\n\nimport { AppSettings } from '../../../app.settings';\nimport { DataService } from '../../../services/data.service';\n\ndeclare var moment: any;\n\ninterface NouiFormatter {\n    to(value: number): string;\n    from(value: string): any;\n}\n\n\n\n@Component({\n    selector: 'network-chart',\n    templateUrl: 'network.template.html',\n})\nexport class NetworkComponent implements OnInit { \n    @ViewChild( BaseChartDirective ) chart: BaseChartDirective;\n    @ViewChild( NouisliderComponent ) slider: NouisliderComponent;\n\n    error_message;\n    loading:boolean = false;\n\n    dateRange = [0, 100];\n    rangeStartDate;\n    rangeEndDate;\n   \n    \n\n    formatter: NouiFormatter = {\n         to(value: number): string {\n            if (value) {\n                return moment(value, 'X').format('YYYY-DD-MM HH:mm');\n            }\n          },\n          from(value: string): any {\n              if (value) {\n                  if (moment(value, 'YYYY-DD-MM HH:mm').isValid()) {\n                      let d = moment(value, 'YYYY-DD-MM HH:mm').format('X')\n                      return parseFloat(d);\n                  }\n                  return value;\n              }\n          }\n         \n\n    };\n\n    public lineChartData:Array<any> = [\n        {data: [], label: ''}, {data: [], label: ''}\n    ];\n    public lineChartLabels:Array<any> = [];\n\n    public lineChartOptions:any = {\n        animation: false,\n        responsive: true,\n        scales: {\n            yAxes: [{\n                ticks: {\n                    callback: function(value: number, index, values) {\n                        let k = 1000, dm = 2;\n                        let bytes = value;\n                        if (value == 0) {\n                            return '0 Bytes';\n                        }\n                        let sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'],\n                        i = Math.floor(Math.log(bytes) / Math.log(k));\n                        let data = parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];\n                        return data;\n                    }\n                }\n           }]\n         }\n    };\n    public lineChartColors:Array<any> = [{\n      backgroundColor: 'rgba(28,132,198,0.3)',\n      borderColor: 'rgba(35,198,200,0.2)',\n      pointBackgroundColor: 'rgba(10,10,24,0.2)',\n      pointBorderColor: '#fff',\n      pointHoverBackgroundColor: '#fff',\n      pointHoverBorderColor: 'rgba(10,10,24,0.2)'\n    }, {\n      backgroundColor: 'rgba(200,159,177,0.8)',\n      borderColor: 'rgba(225,10,24,0.2)',\n      pointBackgroundColor: 'rgba(10,10,24,0.2)',\n      pointBorderColor: '#fff',\n      pointHoverBackgroundColor: '#fff',\n      pointHoverBorderColor: 'rgba(10,10,24,0.2)'\n    }];\n\n\n    \n\n    public lineChartLegend:boolean = true;\n    public lineChartType:string = 'line';\n\n    constructor (private dataService: DataService, private chRef: ChangeDetectorRef) {\n        \n    }\n\n    dateRangeMin = 0;\n    dateRangeMax = 10;\n    onInitTime = false;\n    ngOnInit() { \n        let self = this;\n        self.loading = true;\n        self.dataService.getData(AppSettings.perfNetworkUrl, {})\n        .subscribe(\n            function(data) {\n                self.loading = false;\n                self.lineChartData = data.values;\n                self.lineChartLabels = data.dates;\n                self.chart.ngOnChanges({});\n\n                self.onInitTime = true;\n                self.dateRangeMin =  data.date_range.start_date;\n                self.dateRangeMax =  data.date_range.end_date;\n                self.slider.slider.updateOptions({\n                    start: [data.date_range.start, data.date_range.end_date],\n                    range: {\n                        'min': data.date_range.start,\n                        'max': data.date_range.end_date\n                    }\n                });\n                self.dateRange = [data.date_range.start, data.date_range.end_date];\n                    \n                setTimeout(function() {\n                    self.onInitTime = false;\n                }, 1000);\n            },\n            function(error) {\n                self.loading = false;\n                self.error_message = <any>error;\n            }\n        );\n        \n    }\n\n    public chartClicked(e:any):void {\n        console.log(e);\n    }\n \n    public chartHovered(e:any):void {\n        console.log(e);\n    }\n\n    public onChange($event) {\n        this.rangeStartDate = moment(this.dateRange[0], 'X').format('MMM DD HH:mm');\n        this.rangeEndDate = moment(this.dateRange[1], 'X').format('MMM-DD HH:mm');\n        this.getData();\n    }\n\n    private getData(_params?, callback?) {\n        if (this.loading || this.onInitTime ) {\n            return;\n        }\n\n        let self = this;\n        let params = _params || {\n            date_start: this.dateRange[0],\n            date_end: this.dateRange[1]\n        }\n        self.loading = true;\n        self.dataService.getData(AppSettings.perfNetworkUrl, params)\n        .subscribe(\n            function(data) {\n                self.loading = false;\n                self.lineChartData = data.values;\n                self.lineChartLabels = data.dates;\n                self.chart.ngOnChanges({});\n                if (callback){\n                    callback(data)\n                }\n            },\n            function(error) {\n                self.loading = false;\n                self.error_message = <any>error;\n            }\n        );\n    }\n\n    public refresh() {\n        let self = this;\n        this.getData({}, function(data) {\n            self.dateRange = [data.date_range.start, data.date_range.end_date];\n            self.chRef.detectChanges();\n        });\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/charts/network/network.component.ts","import { Component, OnInit, ViewChild, ChangeDetectorRef } from '@angular/core';\n\n\nimport { BaseChartDirective } from '../../../libs/ng2-charts/ng2-charts';\n\nimport { NouisliderComponent } from 'ng2-nouislider';\n\nimport { AppSettings } from '../../../app.settings';\nimport { DataService } from '../../../services/data.service';\n\n\ndeclare var moment: any;\n\ninterface NouiFormatter {\n    to(value: number): string;\n    from(value: string): any;\n}\n\n\n@Component({\n    selector: 'processes-chart',\n    templateUrl: 'processes.template.html',\n})\nexport class ProcessesComponent implements OnInit { \n    @ViewChild( BaseChartDirective ) chart: BaseChartDirective;\n    @ViewChild( NouisliderComponent ) slider: NouisliderComponent;\n\n    error_message;\n    loading:boolean = false;\n\n    dateRange = [0, 100];\n    rangeStartDate;\n    rangeEndDate;\n    \n   \n    \n    formatter: NouiFormatter = {\n         to(value: number): string {\n            if (value) {\n                return moment(value, 'X').format('YYYY-DD-MM HH:mm');\n            }\n          },\n          from(value: string): any {\n              if (value) {\n                  if (moment(value, 'YYYY-DD-MM HH:mm').isValid()) {\n                      let d = moment(value, 'YYYY-DD-MM HH:mm').format('X')\n                      return parseFloat(d);\n                  }\n                  return value;\n              }\n          }\n         \n\n    };\n\n    constructor (private dataService: DataService, private chRef: ChangeDetectorRef) {\n    }\n\n    public lineChartData:Array<any> = [\n        {data: [], label: ''}\n    ];\n    public lineChartLabels:Array<any> = [];\n\n    public lineChartOptions:any = {\n        animation: false,\n        responsive: true\n    };\n    public lineChartColors:Array<any> = [{\n      backgroundColor: 'rgba(10,159,177,0.5)',\n      borderColor: 'rgba(225,10,24,0.2)',\n      pointBackgroundColor: 'rgba(10,10,24,0.2)',\n      pointBorderColor: '#fff',\n      pointHoverBackgroundColor: '#fff',\n      pointHoverBorderColor: 'rgba(10,10,24,0.2)'\n    }];\n\n\n    \n\n    public lineChartLegend:boolean = true;\n    public lineChartType:string = 'line';\n\n    \n\n    dateRangeMin = 0;\n    dateRangeMax = 10;\n    onInitTime = false;\n    ngOnInit() { \n        let self = this;\n        self.loading = true;\n        self.dataService.getData(AppSettings.processesUrl,{})\n        .subscribe(\n            function(data) {\n                self.loading = false;\n                self.lineChartData = data.values;\n                self.lineChartLabels = data.dates;\n                self.chart.ngOnChanges({});\n\n                self.onInitTime = true;\n                self.dateRangeMin =  data.date_range.start_date;\n                self.dateRangeMax =  data.date_range.end_date;\n                self.slider.slider.updateOptions({\n                    start: [data.date_range.start, data.date_range.end_date],\n                    range: {\n                        'min': data.date_range.start,\n                        'max': data.date_range.end_date\n                    }\n                });\n                self.dateRange = [data.date_range.start, data.date_range.end_date];\n                self.chRef.detectChanges();\n                    \n                setTimeout(function() {\n                    self.onInitTime = false;\n                }, 1000);\n\n                \n            },\n            function(error) {\n                self.loading = false;\n                self.error_message = <any>error;\n            }\n        );\n        \n    }\n\n    public chartClicked(e:any):void {\n        console.log(e);\n    }\n \n    public chartHovered(e:any):void {\n        console.log(e);\n    }\n\n    public onChange($event) {\n        this.rangeStartDate = moment(this.dateRange[0], 'X').format('MMM DD HH:mm');\n        this.rangeEndDate = moment(this.dateRange[1], 'X').format('MMM-DD HH:mm');\n        this.getData();\n    }\n\n    private getData(_params?, callback?) {\n        if (this.loading || this.onInitTime ) {\n            return;\n        }\n\n        let self = this;\n        let params = _params || {\n            date_start: this.dateRange[0],\n            date_end: this.dateRange[1]\n        }\n        self.loading = true;\n        self.dataService.getData(AppSettings.processesUrl, params)\n        .subscribe(\n            function(data) {\n                self.loading = false;\n                self.lineChartData = data.values;\n                self.lineChartLabels = data.dates;\n                self.chart.ngOnChanges({});\n                if (callback){\n                    callback(data)\n                }\n            },\n            function(error) {\n                self.loading = false;\n                self.error_message = <any>error;\n            }\n        );\n    }\n\n    public refresh() {\n        let self = this;\n        this.getData({}, function(data) {\n            self.dateRange = [data.date_range.start, data.date_range.end_date];\n            self.chRef.detectChanges();\n        });\n    }\n    \n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/charts/processes/processes.component.ts","import { Component } from '@angular/core';\n\n@Component({\n    selector: 'footer',\n    templateUrl: 'footer.template.html'\n})\nexport class FooterComponent { }\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/common/footer/footer.component.ts","import {NgModule} from \"@angular/core\";\nimport {BrowserModule} from \"@angular/platform-browser\";\nimport {FooterComponent} from \"./footer.component\";\n\n@NgModule({\n    declarations: [FooterComponent],\n    imports     : [BrowserModule],\n    exports     : [FooterComponent],\n})\n\nexport class FooterModule {}\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/common/footer/footer.module.ts","import { Component } from '@angular/core';\n\ndeclare var jQuery:any;\n\n@Component({\n    selector: 'blank',\n    templateUrl: 'blank.template.html'\n})\nexport class blankComponent {\n\n    ngAfterViewInit() {\n        jQuery('body').addClass('gray-bg');\n    }\n\n    ngOnDestroy() {\n        jQuery('body').removeClass('gray-bg');\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/common/layouts/blank.component.ts","import {NgModule} from \"@angular/core\";\nimport {RouterModule} from \"@angular/router\";\nimport {BrowserModule} from \"@angular/platform-browser\";\n\nimport {blankComponent} from \"./blank.component\";\nimport {basicComponent} from \"./basic.component\";\n\nimport {NavigationModule} from \"../navigation/navigation.module\";\nimport {TopnavbarModule} from \"../topnavbar/topnavbar.module\";\nimport {FooterModule} from \"../footer/footer.module\";\n\n@NgModule({\n    declarations: [blankComponent,basicComponent],\n    imports     : [BrowserModule, RouterModule, NavigationModule, TopnavbarModule, FooterModule],\n    exports     : [blankComponent,basicComponent]\n})\n\nexport class LayoutsModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/common/layouts/layouts.module.ts","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { UserService } from '../../../services/user.service';\n\ndeclare var jQuery:any;\n\n@Component({\n    selector: 'navigation',\n    templateUrl: 'navigation.template.html',\n})\n\nexport class NavigationComponent {\n\n\tuser = {\n\t\tusername: \"\"\n\t};\n    apps = {\n        backup: false\n    };\n\n    constructor(private router: Router, private userService: UserService) {}\n\n    ngAfterViewInit() {\n        jQuery('#side-menu').metisMenu();\n    }\n\n    ngOnInit() { \n    \tlet self = this;\n    \t\n    \tthis.userService.getUserFromServer(function(data) {\n    \t\tself.user = data.user;\n            self.apps = data.apps;\n    \t})\n    }\n\n    activeRoute(routename: string): boolean{\n        return this.router.url.indexOf(routename) > -1;\n    }\n\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/common/navigation/navigation.component.ts","import {NgModule} from \"@angular/core\";\nimport {BrowserModule} from \"@angular/platform-browser\";\nimport {RouterModule} from \"@angular/router\";\nimport {NavigationComponent} from \"./navigation.component\";\n\n@NgModule({\n    declarations: [NavigationComponent],\n    imports     : [BrowserModule, RouterModule],\n    exports     : [NavigationComponent],\n})\n\nexport class NavigationModule {}\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/common/navigation/navigation.module.ts","import { Component } from '@angular/core';\n\n\n\n//import { smoothlyMenu } from '../../../app.helpers';\ndeclare var jQuery:any;\n\n@Component({\n    selector: 'topnavbar',\n    templateUrl: 'topnavbar.template.html',\n    \n})\nexport class TopnavbarComponent {\n\n    menuState:string = 'out';\n    toggleNavigation(): void {\n        jQuery(\"body\").toggleClass(\"mini-navbar\");\n       // smoothlyMenu();\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/common/topnavbar/topnavbar.component.ts","import {NgModule} from \"@angular/core\";\nimport {BrowserModule} from \"@angular/platform-browser\";\nimport {TopnavbarComponent} from \"./topnavbar.component\";\n\n@NgModule({\n    declarations: [TopnavbarComponent],\n    imports     : [BrowserModule],\n    exports     : [TopnavbarComponent],\n})\n\nexport class TopnavbarModule {}\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/common/topnavbar/topnavbar.module.ts","import {\n  OnDestroy,\n  OnInit,\n  OnChanges,\n  EventEmitter,\n  ElementRef,\n  Input,\n  Output,\n  NgModule,\n  SimpleChanges,\n  Directive\n} from '@angular/core';\n\nimport Chart from 'chart.js';\n\n/* tslint:disable-next-line */\n@Directive({selector: 'canvas[baseChart]', exportAs: 'base-chart'})\nexport class BaseChartDirective implements OnDestroy, OnChanges, OnInit {\n  public static defaultColors:Array<number[]> = [\n    [255, 99, 132],\n    [54, 162, 235],\n    [255, 206, 86],\n    [231, 233, 237],\n    [75, 192, 192],\n    [151, 187, 205],\n    [220, 220, 220],\n    [247, 70, 74],\n    [70, 191, 189],\n    [253, 180, 92],\n    [148, 159, 177],\n    [77, 83, 96]\n  ];\n\n  @Input() public data:number[] | any[];\n  @Input() public datasets:any[];\n  @Input() public labels:Array<any> = [];\n  @Input() public options:any = {};\n  @Input() public chartType:string;\n  @Input() public colors:Array<any>;\n  @Input() public legend:boolean;\n\n  @Output() public chartClick:EventEmitter<any> = new EventEmitter();\n  @Output() public chartHover:EventEmitter<any> = new EventEmitter();\n\n  public ctx:any;\n  public chart:any;\n  private cvs:any;\n  private initFlag:boolean = false;\n\n  private element:ElementRef;\n\n  public constructor(element:ElementRef) {\n    this.element = element;\n  }\n\n  public ngOnInit():any {\n    this.ctx = this.element.nativeElement.getContext('2d');\n    this.cvs = this.element.nativeElement;\n    this.initFlag = true;\n    if (this.data || this.datasets) {\n      this.refresh();\n    }\n  }\n\n  public ngOnChanges(changes: SimpleChanges): void {\n    if (this.initFlag) {\n      if (changes.hasOwnProperty('labels')) {\n          this.chart.data.labels = changes.labels.currentValue;\n      }\n      // Check if the changes are in the data or datasets\n      if (changes.hasOwnProperty('data') || changes.hasOwnProperty('datasets')) {\n        if (changes['data']) {\n          this.updateChartData(changes['data'].currentValue);\n        } else {\n          this.updateChartData(changes['datasets'].currentValue);\n        }\n\n        this.chart.update();\n      } else {\n      // otherwise rebuild the chart\n        this.refresh();\n      }\n    }\n  }\n\n  public ngOnDestroy():any {\n    if (this.chart) {\n      this.chart.destroy();\n      this.chart = void 0;\n    }\n  }\n\n  public getChartBuilder(ctx:any/*, data:Array<any>, options:any*/):any {\n    let datasets:any = this.getDatasets();\n\n    let options:any = Object.assign({}, this.options);\n    if (this.legend === false) {\n      options.legend = {display: false};\n    }\n    // hock for onHover and onClick events\n    options.hover = options.hover || {};\n    if (!options.hover.onHover) {\n      options.hover.onHover = (active:Array<any>) => {\n        if (active && !active.length) {\n          return;\n        }\n        this.chartHover.emit({active});\n      };\n    }\n\n    if (!options.onClick) {\n      options.onClick = (event:any, active:Array<any>) => {\n        this.chartClick.emit({event, active});\n      };\n    }\n\n    let opts = {\n      type: this.chartType,\n      data: {\n        labels: this.labels,\n        datasets: datasets\n      },\n      options: options\n    };\n\n    return new Chart(ctx, opts);\n  }\n\n  private updateChartData(newDataValues: number[] | any[]): void {\n    if (Array.isArray(newDataValues[0].data)) {\n      this.chart.data.datasets.forEach((dataset: any, i: number) => {\n        dataset.data = newDataValues[i].data;\n\n        if (newDataValues[i].label) {\n          dataset.label = newDataValues[i].label;\n        }\n      });\n    } else {\n      this.chart.data.datasets[0].data = newDataValues;\n    }\n  }\n\n  private getDatasets():any {\n    let datasets:any = void 0;\n    // in case if datasets is not provided, but data is present\n    if (!this.datasets || !this.datasets.length && (this.data && this.data.length)) {\n      if (Array.isArray(this.data[0])) {\n        datasets = (this.data as Array<number[]>).map((data:number[], index:number) => {\n          return {data, label: this.labels[index] || `Label ${index}`};\n        });\n      } else {\n        datasets = [{data: this.data, label: `Label 0`}];\n      }\n    }\n\n    if (this.datasets && this.datasets.length ||\n      (datasets && datasets.length)) {\n      datasets = (this.datasets || datasets)\n        .map((elm:number, index:number) => {\n          let newElm:any = Object.assign({}, elm);\n          if (this.colors && this.colors.length) {\n            Object.assign(newElm, this.colors[index]);\n          } else {\n            Object.assign(newElm, getColors(this.chartType, index, newElm.data.length));\n          }\n          return newElm;\n        });\n    }\n\n    if (!datasets) {\n      throw new Error(`ng-charts configuration error,\n      data or datasets field are required to render char ${this.chartType}`);\n    }\n\n    return datasets;\n  }\n\n  private refresh():any {\n    // if (this.options && this.options.responsive) {\n    //   setTimeout(() => this.refresh(), 50);\n    // }\n\n    // todo: remove this line, it is producing flickering\n    this.ngOnDestroy();\n    this.chart = this.getChartBuilder(this.ctx/*, data, this.options*/);\n  }\n}\n\n// private helper functions\nexport interface Color {\n  backgroundColor?:string | string[];\n  borderWidth?:number | number[];\n  borderColor?:string | string[];\n  borderCapStyle?:string;\n  borderDash?:number[];\n  borderDashOffset?:number;\n  borderJoinStyle?:string;\n\n  pointBorderColor?:string | string[];\n  pointBackgroundColor?:string | string[];\n  pointBorderWidth?:number | number[];\n\n  pointRadius?:number | number[];\n  pointHoverRadius?:number | number[];\n  pointHitRadius?:number | number[];\n\n  pointHoverBackgroundColor?:string | string[];\n  pointHoverBorderColor?:string | string[];\n  pointHoverBorderWidth?:number | number[];\n  pointStyle?:string | string[];\n\n  hoverBackgroundColor?:string | string[];\n  hoverBorderColor?:string | string[];\n  hoverBorderWidth?:number;\n}\n\n// pie | doughnut\nexport interface Colors extends Color {\n  data?:number[];\n  label?:string;\n}\n\nfunction rgba(colour:Array<number>, alpha:number):string {\n  return 'rgba(' + colour.concat(alpha).join(',') + ')';\n}\n\nfunction getRandomInt(min:number, max:number):number {\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\nfunction formatLineColor(colors:Array<number>):Color {\n  return {\n    backgroundColor: rgba(colors, 0.4),\n    borderColor: rgba(colors, 1),\n    pointBackgroundColor: rgba(colors, 1),\n    pointBorderColor: '#fff',\n    pointHoverBackgroundColor: '#fff',\n    pointHoverBorderColor: rgba(colors, 0.8)\n  };\n}\n\nfunction formatBarColor(colors:Array<number>):Color {\n  return {\n    backgroundColor: rgba(colors, 0.6),\n    borderColor: rgba(colors, 1),\n    hoverBackgroundColor: rgba(colors, 0.8),\n    hoverBorderColor: rgba(colors, 1)\n  };\n}\n\nfunction formatPieColors(colors:Array<number[]>):Colors {\n  return {\n    backgroundColor: colors.map((color:number[]) => rgba(color, 0.6)),\n    borderColor: colors.map(() => '#fff'),\n    pointBackgroundColor: colors.map((color:number[]) => rgba(color, 1)),\n    pointBorderColor: colors.map(() => '#fff'),\n    pointHoverBackgroundColor: colors.map((color:number[]) => rgba(color, 1)),\n    pointHoverBorderColor: colors.map((color:number[]) => rgba(color, 1))\n  };\n}\n\nfunction formatPolarAreaColors(colors:Array<number[]>):Color {\n  return {\n    backgroundColor: colors.map((color:number[]) => rgba(color, 0.6)),\n    borderColor: colors.map((color:number[]) => rgba(color, 1)),\n    hoverBackgroundColor: colors.map((color:number[]) => rgba(color, 0.8)),\n    hoverBorderColor: colors.map((color:number[]) => rgba(color, 1))\n  };\n}\n\nfunction getRandomColor():number[] {\n  return [getRandomInt(0, 255), getRandomInt(0, 255), getRandomInt(0, 255)];\n}\n\n/**\n * Generate colors for line|bar charts\n * @param index\n * @returns {number[]|Color}\n */\nfunction generateColor(index:number):number[] {\n  return BaseChartDirective.defaultColors[index] || getRandomColor();\n}\n\n/**\n * Generate colors for pie|doughnut charts\n * @param count\n * @returns {Colors}\n */\nfunction generateColors(count:number):Array<number[]> {\n  let colorsArr:Array<number[]> = new Array(count);\n  for (let i = 0; i < count; i++) {\n    colorsArr[i] = BaseChartDirective.defaultColors[i] || getRandomColor();\n  }\n  return colorsArr;\n}\n\n/**\n * Generate colors by chart type\n * @param chartType\n * @param index\n * @param count\n * @returns {Color}\n */\nfunction getColors(chartType:string, index:number, count:number):Color {\n  if (chartType === 'pie' || chartType === 'doughnut') {\n    return formatPieColors(generateColors(count));\n  }\n\n  if (chartType === 'polarArea') {\n    return formatPolarAreaColors(generateColors(count));\n  }\n\n  if (chartType === 'line' || chartType === 'radar') {\n    return formatLineColor(generateColor(index));\n  }\n\n  if (chartType === 'bar' || chartType === 'horizontalBar') {\n    return formatBarColor(generateColor(index));\n  }\n  return generateColor(index);\n}\n\n@NgModule({\n  declarations: [\n    BaseChartDirective\n  ],\n  exports: [\n    BaseChartDirective\n  ],\n  imports: []\n})\nexport class ChartsModule {\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/libs/ng2-charts/charts/charts.ts","export * from  './charts/charts';\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/libs/ng2-charts/index.ts","import { Injectable } from '@angular/core';\nimport { Http, Response, RequestOptions, URLSearchParams } from '@angular/http';\n\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/catch';\nimport 'rxjs/add/operator/map';\n\nimport { AppSettings } from '../app.settings';\n\n\n@Injectable()\nexport class ChartsService {\n\n\tconstructor (private http: Http) {}\n\n\t\n\t\n\n\tpublic getPerf(url, _params): Observable<any> {\n\t\tlet data = _params || {};\n\t\tdata.t = new Date().getTime();\n\n\t\tlet params: URLSearchParams = new URLSearchParams();\n        for (var key in data) {\n          \tif (data.hasOwnProperty(key)) {\n            \tlet val = data[key];\n             \tparams.set(key, val);\n          \t}\n        }\n        let options = new RequestOptions({\n        \tsearch: params\n      \t});\n\n\t\treturn this.http.get(url, options)\n\t\t\t.map(this.extractData)\n\t\t\t.catch(this.handleError);\n\t}\n\n\n\tprivate extractData(res: Response) {\n\t\tlet body = res.json();\n\t\treturn body || {};\n\t}\n\n\tprivate handleError(error: Response | any) {\n\t\t// In a real world app, you might use a remote logging infrastructure\n\t\tlet errMsg: string;\n\t\tif (error instanceof Response) {\n\t\t\tconst body = error.json() || '';\n\t\t\tconst err = body.error || JSON.stringify(body);\n\t\t\terrMsg = `${error.status} - ${error.statusText || ''} ${err}`;\n\t\t} else {\n\t\t\terrMsg = error.message ? error.message : error.toString();\n\t\t}\n\n\t\tconsole.error(errMsg);\n\t\treturn Observable.throw(errMsg);\n\t}\n\n\n\t\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/charts.services.ts","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class WindowRef {\n    constructor() {}\n\n    getNativeWindow() {\n        return window;\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/window.service.ts","import { NgModule } from \"@angular/core\";\nimport { BrowserModule } from \"@angular/platform-browser\";\nimport { backupViewComponent } from \"./backup-view.component\";\n\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule } from \"@angular/router\";\n\nimport { TimepickerModule } from 'ngx-bootstrap/timepicker';\n\n@NgModule({\n    declarations: [\n    \tbackupViewComponent,\n    ],\n    imports: [\n\t\tBrowserModule,\n\t\tFormsModule,\n\t\tRouterModule,\n\n\t\tTimepickerModule.forRoot()\n    ],\n})\n\nexport class BackupViewModule {}\n\n\n// WEBPACK FOOTER //\n// ./src/app/views/backup-view/backup-view.module.ts","import {NgModule} from \"@angular/core\";\nimport {BrowserModule} from \"@angular/platform-browser\";\nimport {mainViewComponent} from \"./main-view.component\";\n\nimport { FormsModule } from '@angular/forms';\n\n\n@NgModule({\n    declarations: [\n    \tmainViewComponent,\n    ],\n    imports: [\n\t\tBrowserModule,\n\t\tFormsModule,\n    ],\n})\n\nexport class MainViewModule {}\n\n\n// WEBPACK FOOTER //\n// ./src/app/views/main-view/main-view.module.ts","import { Component } from '@angular/core';\n\n@Component({\n    selector: 'minorView',\n    templateUrl: 'minor-view.template.html'\n})\nexport class minorViewComponent { }\n\n\n// WEBPACK FOOTER //\n// ./src/app/views/minor-view/minor-view.component.ts","import {NgModule} from \"@angular/core\";\nimport {BrowserModule} from \"@angular/platform-browser\";\nimport {minorViewComponent} from \"./minor-view.component\";\n\n@NgModule({\n    declarations: [minorViewComponent],\n    imports     : [BrowserModule],\n})\n\nexport class MinorViewModule {}\n\n\n// WEBPACK FOOTER //\n// ./src/app/views/minor-view/minor-view.module.ts","import {NgModule} from \"@angular/core\";\nimport {BrowserModule} from \"@angular/platform-browser\";\n\nimport { FormsModule } from '@angular/forms';\n\nimport { perfViewComponent } from \"./perf-view.component\";\n\nimport { CpuComponent } from \"../../components/charts/cpu/cpu.component\";\nimport { MemoryComponent } from \"../../components/charts/memory/memory.component\";\nimport { DiskComponent } from \"../../components/charts/disk/disk.component\";\nimport { NetworkComponent } from \"../../components/charts/network/network.component\";\n\nimport { ChartsModule } from '../../libs/ng2-charts/ng2-charts';\nimport { NouisliderModule } from 'ng2-nouislider';\n\n@NgModule({\n    declarations: [\n        perfViewComponent,\n    \tCpuComponent,\n        MemoryComponent,\n        DiskComponent,\n        NetworkComponent\n    ],\n    imports: [\n\t\tBrowserModule,\n\t\tFormsModule,\n\t\tChartsModule,\n\t\tNouisliderModule\n    ],\n})\n\nexport class PerfViewModule {}\n\n\n// WEBPACK FOOTER //\n// ./src/app/views/perf-view/perf-view.module.ts","import {NgModule} from \"@angular/core\";\nimport {BrowserModule} from \"@angular/platform-browser\";\n\nimport { FormsModule } from '@angular/forms';\n\nimport { processesViewComponent } from \"./processes-view.component\";\n\nimport { ProcessesComponent } from \"../../components/charts/processes/processes.component\";\nimport { ChartsModule } from '../../libs/ng2-charts/ng2-charts';\nimport { NouisliderModule } from 'ng2-nouislider';\n\n@NgModule({\n    declarations: [\n        processesViewComponent,\n        ProcessesComponent,\n    ],\n    imports: [\n\t\tBrowserModule,\n\t\tFormsModule,\n\t\tChartsModule,\n\t\tNouisliderModule\n    ],\n})\n\nexport class ProcessesViewModule {}\n\n\n// WEBPACK FOOTER //\n// ./src/app/views/processes-view/processes-view.module.ts","import {NgModule} from \"@angular/core\";\nimport {BrowserModule} from \"@angular/platform-browser\";\n\nimport { FormsModule } from '@angular/forms';\n\nimport { secCorrectLoginViewComponent } from \"./sec-correct-login-view.component\";\n\nimport { ChartsModule } from '../../libs/ng2-charts/ng2-charts';\nimport { NouisliderModule } from 'ng2-nouislider';\n\n@NgModule({\n    declarations: [\n        secCorrectLoginViewComponent,\n    ],\n    imports: [\n\t\tBrowserModule,\n\t\tFormsModule,\n\t\tChartsModule,\n\t\tNouisliderModule,\n\n        \n    ],\n})\n\nexport class SecCorrectLoginViewModule {}\n\n\n// WEBPACK FOOTER //\n// ./src/app/views/sec-view/sec-correct-login-view.module.ts","import {NgModule} from \"@angular/core\";\nimport {BrowserModule} from \"@angular/platform-browser\";\n\nimport { FormsModule } from '@angular/forms';\n\nimport { secIncorrectLoginViewComponent } from \"./sec-incorrect-login-view.component\";\n\nimport { ChartsModule } from '../../libs/ng2-charts/ng2-charts';\nimport { NouisliderModule } from 'ng2-nouislider';\n\n@NgModule({\n    declarations: [\n        secIncorrectLoginViewComponent,\n    ],\n    imports: [\n\t\tBrowserModule,\n\t\tFormsModule,\n\t\tChartsModule,\n\t\tNouisliderModule\n    ],\n})\n\nexport class SecIncorrectLoginViewModule {}\n\n\n// WEBPACK FOOTER //\n// ./src/app/views/sec-view/sec-incorrect-login-view.module.ts","import {NgModule} from \"@angular/core\";\nimport {BrowserModule} from \"@angular/platform-browser\";\n\nimport { FormsModule } from '@angular/forms';\n\nimport { urlstatViewComponent } from \"./urlstat-view.component\";\n\nimport { ChartsModule } from '../../libs/ng2-charts/ng2-charts';\nimport { NouisliderModule } from 'ng2-nouislider';\n\n@NgModule({\n    declarations: [\n        urlstatViewComponent\n    ],\n    imports: [\n\t\tBrowserModule,\n\t\tFormsModule,\n\t\tNouisliderModule,\n        ChartsModule\n    ],\n})\n\nexport class UrlStatViewModule {}\n\n\n// WEBPACK FOOTER //\n// ./src/app/views/urlstat-view/urlstat-view.module.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.css\n// module id = 374\n// module chunks = 1","var map = {\n\t\"./af\": 94,\n\t\"./af.js\": 94,\n\t\"./ar\": 101,\n\t\"./ar-dz\": 95,\n\t\"./ar-dz.js\": 95,\n\t\"./ar-kw\": 96,\n\t\"./ar-kw.js\": 96,\n\t\"./ar-ly\": 97,\n\t\"./ar-ly.js\": 97,\n\t\"./ar-ma\": 98,\n\t\"./ar-ma.js\": 98,\n\t\"./ar-sa\": 99,\n\t\"./ar-sa.js\": 99,\n\t\"./ar-tn\": 100,\n\t\"./ar-tn.js\": 100,\n\t\"./ar.js\": 101,\n\t\"./az\": 102,\n\t\"./az.js\": 102,\n\t\"./be\": 103,\n\t\"./be.js\": 103,\n\t\"./bg\": 104,\n\t\"./bg.js\": 104,\n\t\"./bn\": 105,\n\t\"./bn.js\": 105,\n\t\"./bo\": 106,\n\t\"./bo.js\": 106,\n\t\"./br\": 107,\n\t\"./br.js\": 107,\n\t\"./bs\": 108,\n\t\"./bs.js\": 108,\n\t\"./ca\": 109,\n\t\"./ca.js\": 109,\n\t\"./cs\": 110,\n\t\"./cs.js\": 110,\n\t\"./cv\": 111,\n\t\"./cv.js\": 111,\n\t\"./cy\": 112,\n\t\"./cy.js\": 112,\n\t\"./da\": 113,\n\t\"./da.js\": 113,\n\t\"./de\": 116,\n\t\"./de-at\": 114,\n\t\"./de-at.js\": 114,\n\t\"./de-ch\": 115,\n\t\"./de-ch.js\": 115,\n\t\"./de.js\": 116,\n\t\"./dv\": 117,\n\t\"./dv.js\": 117,\n\t\"./el\": 118,\n\t\"./el.js\": 118,\n\t\"./en-au\": 119,\n\t\"./en-au.js\": 119,\n\t\"./en-ca\": 120,\n\t\"./en-ca.js\": 120,\n\t\"./en-gb\": 121,\n\t\"./en-gb.js\": 121,\n\t\"./en-ie\": 122,\n\t\"./en-ie.js\": 122,\n\t\"./en-nz\": 123,\n\t\"./en-nz.js\": 123,\n\t\"./eo\": 124,\n\t\"./eo.js\": 124,\n\t\"./es\": 126,\n\t\"./es-do\": 125,\n\t\"./es-do.js\": 125,\n\t\"./es.js\": 126,\n\t\"./et\": 127,\n\t\"./et.js\": 127,\n\t\"./eu\": 128,\n\t\"./eu.js\": 128,\n\t\"./fa\": 129,\n\t\"./fa.js\": 129,\n\t\"./fi\": 130,\n\t\"./fi.js\": 130,\n\t\"./fo\": 131,\n\t\"./fo.js\": 131,\n\t\"./fr\": 134,\n\t\"./fr-ca\": 132,\n\t\"./fr-ca.js\": 132,\n\t\"./fr-ch\": 133,\n\t\"./fr-ch.js\": 133,\n\t\"./fr.js\": 134,\n\t\"./fy\": 135,\n\t\"./fy.js\": 135,\n\t\"./gd\": 136,\n\t\"./gd.js\": 136,\n\t\"./gl\": 137,\n\t\"./gl.js\": 137,\n\t\"./gom-latn\": 138,\n\t\"./gom-latn.js\": 138,\n\t\"./he\": 139,\n\t\"./he.js\": 139,\n\t\"./hi\": 140,\n\t\"./hi.js\": 140,\n\t\"./hr\": 141,\n\t\"./hr.js\": 141,\n\t\"./hu\": 142,\n\t\"./hu.js\": 142,\n\t\"./hy-am\": 143,\n\t\"./hy-am.js\": 143,\n\t\"./id\": 144,\n\t\"./id.js\": 144,\n\t\"./is\": 145,\n\t\"./is.js\": 145,\n\t\"./it\": 146,\n\t\"./it.js\": 146,\n\t\"./ja\": 147,\n\t\"./ja.js\": 147,\n\t\"./jv\": 148,\n\t\"./jv.js\": 148,\n\t\"./ka\": 149,\n\t\"./ka.js\": 149,\n\t\"./kk\": 150,\n\t\"./kk.js\": 150,\n\t\"./km\": 151,\n\t\"./km.js\": 151,\n\t\"./kn\": 152,\n\t\"./kn.js\": 152,\n\t\"./ko\": 153,\n\t\"./ko.js\": 153,\n\t\"./ky\": 154,\n\t\"./ky.js\": 154,\n\t\"./lb\": 155,\n\t\"./lb.js\": 155,\n\t\"./lo\": 156,\n\t\"./lo.js\": 156,\n\t\"./lt\": 157,\n\t\"./lt.js\": 157,\n\t\"./lv\": 158,\n\t\"./lv.js\": 158,\n\t\"./me\": 159,\n\t\"./me.js\": 159,\n\t\"./mi\": 160,\n\t\"./mi.js\": 160,\n\t\"./mk\": 161,\n\t\"./mk.js\": 161,\n\t\"./ml\": 162,\n\t\"./ml.js\": 162,\n\t\"./mr\": 163,\n\t\"./mr.js\": 163,\n\t\"./ms\": 165,\n\t\"./ms-my\": 164,\n\t\"./ms-my.js\": 164,\n\t\"./ms.js\": 165,\n\t\"./my\": 166,\n\t\"./my.js\": 166,\n\t\"./nb\": 167,\n\t\"./nb.js\": 167,\n\t\"./ne\": 168,\n\t\"./ne.js\": 168,\n\t\"./nl\": 170,\n\t\"./nl-be\": 169,\n\t\"./nl-be.js\": 169,\n\t\"./nl.js\": 170,\n\t\"./nn\": 171,\n\t\"./nn.js\": 171,\n\t\"./pa-in\": 172,\n\t\"./pa-in.js\": 172,\n\t\"./pl\": 173,\n\t\"./pl.js\": 173,\n\t\"./pt\": 175,\n\t\"./pt-br\": 174,\n\t\"./pt-br.js\": 174,\n\t\"./pt.js\": 175,\n\t\"./ro\": 176,\n\t\"./ro.js\": 176,\n\t\"./ru\": 177,\n\t\"./ru.js\": 177,\n\t\"./sd\": 178,\n\t\"./sd.js\": 178,\n\t\"./se\": 179,\n\t\"./se.js\": 179,\n\t\"./si\": 180,\n\t\"./si.js\": 180,\n\t\"./sk\": 181,\n\t\"./sk.js\": 181,\n\t\"./sl\": 182,\n\t\"./sl.js\": 182,\n\t\"./sq\": 183,\n\t\"./sq.js\": 183,\n\t\"./sr\": 185,\n\t\"./sr-cyrl\": 184,\n\t\"./sr-cyrl.js\": 184,\n\t\"./sr.js\": 185,\n\t\"./ss\": 186,\n\t\"./ss.js\": 186,\n\t\"./sv\": 187,\n\t\"./sv.js\": 187,\n\t\"./sw\": 188,\n\t\"./sw.js\": 188,\n\t\"./ta\": 189,\n\t\"./ta.js\": 189,\n\t\"./te\": 190,\n\t\"./te.js\": 190,\n\t\"./tet\": 191,\n\t\"./tet.js\": 191,\n\t\"./th\": 192,\n\t\"./th.js\": 192,\n\t\"./tl-ph\": 193,\n\t\"./tl-ph.js\": 193,\n\t\"./tlh\": 194,\n\t\"./tlh.js\": 194,\n\t\"./tr\": 195,\n\t\"./tr.js\": 195,\n\t\"./tzl\": 196,\n\t\"./tzl.js\": 196,\n\t\"./tzm\": 198,\n\t\"./tzm-latn\": 197,\n\t\"./tzm-latn.js\": 197,\n\t\"./tzm.js\": 198,\n\t\"./uk\": 199,\n\t\"./uk.js\": 199,\n\t\"./ur\": 200,\n\t\"./ur.js\": 200,\n\t\"./uz\": 202,\n\t\"./uz-latn\": 201,\n\t\"./uz-latn.js\": 201,\n\t\"./uz.js\": 202,\n\t\"./vi\": 203,\n\t\"./vi.js\": 203,\n\t\"./x-pseudo\": 204,\n\t\"./x-pseudo.js\": 204,\n\t\"./yo\": 205,\n\t\"./yo.js\": 205,\n\t\"./zh-cn\": 206,\n\t\"./zh-cn.js\": 206,\n\t\"./zh-hk\": 207,\n\t\"./zh-hk.js\": 207,\n\t\"./zh-tw\": 208,\n\t\"./zh-tw.js\": 208\n};\nfunction webpackContext(req) {\n\treturn __webpack_require__(webpackContextResolve(req));\n};\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) // check for number\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\treturn id;\n};\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 379;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/moment/locale ^\\.\\/.*$\n// module id = 379\n// module chunks = 1","module.exports = \"<!-- Main view/routes wrapper-->\\n<router-outlet></router-outlet>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = 388\n// module chunks = 1","module.exports = \"<div style=\\\"text-align: center;\\\">\\n    <button type=\\\"button\\\" class=\\\"btn btn-default btn-xs pull-right\\\" (click)=\\\"refresh()\\\">\\n        <i class=\\\"fa fa-refresh\\\"></i>\\n    </button>\\n\\n    <canvas baseChart\\n                [datasets]=\\\"lineChartData\\\"\\n                [labels]=\\\"lineChartLabels\\\"\\n                [options]=\\\"lineChartOptions\\\"\\n                [colors]=\\\"lineChartColors\\\"\\n                [chartType]=\\\"lineChartType\\\"\\n                (chartHover)=\\\"chartHovered($event)\\\"\\n                (chartClick)=\\\"chartClicked($event)\\\"></canvas>\\n\\n    <h3 style=\\\"color: #337ab7\\\">{{ rangeStartDate }} - {{ rangeEndDate }}</h3>\\n    <nouislider [min]=\\\"dateRangeMin\\\" [max]=\\\"dateRangeMax\\\"  [connect]=\\\"true\\\" [(ngModel)]=\\\"dateRange\\\" (ngModelChange)=\\\"onChange($event)\\\" [disabled]=\\\"loading\\\" [format]=\\\"formatter\\\" [tooltips]=\\\"false\\\" [step]=\\\"1000\\\"></nouislider>\\n\\n    <!-- Loading -->\\n    <div *ngIf=\\\"loading\\\" style=\\\"position: absolute;top:0;left:0;width:100%;height:100%;z-index: 100;\\\">\\n        <div style=\\\"position: absolute;opacity: 0.5;width:100%;height:100%;background-color: white;\\\">\\n        </div>\\n        <div style=\\\"width: 50px;margin: auto;margin-top: 60px;\\\">\\n            <i class=\\\"fa fa-spin fa-gear\\\" style=\\\"font-size: 50px;\\\"></i>\\n        </div>\\n    </div>\\n    <!-- END Loading -->\\n    \\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/charts/cpu/cpu.template.html\n// module id = 389\n// module chunks = 1","module.exports = \"<div style=\\\"text-align: center;\\\">\\n    <button type=\\\"button\\\" class=\\\"btn btn-default btn-xs pull-right\\\" (click)=\\\"refresh()\\\">\\n        <i class=\\\"fa fa-refresh\\\"></i>\\n    </button>\\n    <canvas baseChart\\n                [datasets]=\\\"lineChartData\\\"\\n                [labels]=\\\"lineChartLabels\\\"\\n                [options]=\\\"lineChartOptions\\\"\\n                [colors]=\\\"lineChartColors\\\"\\n                [chartType]=\\\"lineChartType\\\"\\n                (chartHover)=\\\"chartHovered($event)\\\"\\n                (chartClick)=\\\"chartClicked($event)\\\"></canvas>\\n\\n    <h3 style=\\\"color: #337ab7\\\">{{ rangeStartDate }} - {{ rangeEndDate }}</h3>\\n    <nouislider [min]=\\\"dateRangeMin\\\" [max]=\\\"dateRangeMax\\\"  [connect]=\\\"true\\\" [(ngModel)]=\\\"dateRange\\\" (ngModelChange)=\\\"onChange($event)\\\" [disabled]=\\\"loading\\\" [format]=\\\"formatter\\\" [tooltips]=\\\"false\\\" [step]=\\\"1000\\\"></nouislider>\\n\\n\\n    <!-- Loading -->\\n    <div *ngIf=\\\"loading\\\" style=\\\"position: absolute;top:0;left:0;width:100%;height:100%;z-index: 100;\\\">\\n        <div style=\\\"position: absolute;opacity: 0.5;width:100%;height:100%;background-color: white;\\\">\\n        </div>\\n        <div style=\\\"width: 50px;margin: auto;margin-top: 60px;\\\">\\n            <i class=\\\"fa fa-spin fa-gear\\\" style=\\\"font-size: 50px;\\\"></i>\\n        </div>\\n    </div>\\n    <!-- END Loading -->\\n    \\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/charts/disk/disk.template.html\n// module id = 390\n// module chunks = 1","module.exports = \"<div style=\\\"text-align: center;\\\">\\n    <button type=\\\"button\\\" class=\\\"btn btn-default btn-xs pull-right\\\" (click)=\\\"refresh()\\\">\\n        <i class=\\\"fa fa-refresh\\\"></i>\\n    </button>\\n    <canvas baseChart\\n                [datasets]=\\\"lineChartData\\\"\\n                [labels]=\\\"lineChartLabels\\\"\\n                [options]=\\\"lineChartOptions\\\"\\n                [colors]=\\\"lineChartColors\\\"\\n                [chartType]=\\\"lineChartType\\\"\\n                (chartHover)=\\\"chartHovered($event)\\\"\\n                (chartClick)=\\\"chartClicked($event)\\\"></canvas>\\n\\n    <h3 style=\\\"color: #337ab7\\\">{{ rangeStartDate }} - {{ rangeEndDate }}</h3>\\n    <nouislider [min]=\\\"dateRangeMin\\\" [max]=\\\"dateRangeMax\\\"  [connect]=\\\"true\\\" [(ngModel)]=\\\"dateRange\\\" (ngModelChange)=\\\"onChange($event)\\\" [disabled]=\\\"loading\\\" [format]=\\\"formatter\\\" [tooltips]=\\\"false\\\" [step]=\\\"1000\\\"></nouislider>\\n\\n\\n    <!-- Loading -->\\n    <div *ngIf=\\\"loading\\\" style=\\\"position: absolute;top:0;left:0;width:100%;height:100%;z-index: 100;\\\">\\n        <div style=\\\"position: absolute;opacity: 0.5;width:100%;height:100%;background-color: white;\\\">\\n        </div>\\n        <div style=\\\"width: 50px;margin: auto;margin-top: 60px;\\\">\\n            <i class=\\\"fa fa-spin fa-gear\\\" style=\\\"font-size: 50px;\\\"></i>\\n        </div>\\n    </div>\\n    <!-- END Loading -->\\n    \\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/charts/memory/memory.template.html\n// module id = 391\n// module chunks = 1","module.exports = \"<div style=\\\"text-align: center;\\\">\\n    <button type=\\\"button\\\" class=\\\"btn btn-default btn-xs pull-right\\\" (click)=\\\"refresh()\\\">\\n        <i class=\\\"fa fa-refresh\\\"></i>\\n    </button>\\n    <canvas baseChart\\n                [datasets]=\\\"lineChartData\\\"\\n                [labels]=\\\"lineChartLabels\\\"\\n                [options]=\\\"lineChartOptions\\\"\\n                [colors]=\\\"lineChartColors\\\"\\n                [chartType]=\\\"lineChartType\\\"\\n                (chartHover)=\\\"chartHovered($event)\\\"\\n                (chartClick)=\\\"chartClicked($event)\\\"></canvas>\\n\\n    <h3 style=\\\"color: #337ab7\\\">{{ rangeStartDate }} - {{ rangeEndDate }}</h3>\\n    <nouislider [min]=\\\"dateRangeMin\\\" [max]=\\\"dateRangeMax\\\"  [connect]=\\\"true\\\" [(ngModel)]=\\\"dateRange\\\" (ngModelChange)=\\\"onChange($event)\\\" [disabled]=\\\"loading\\\" [format]=\\\"formatter\\\" [tooltips]=\\\"false\\\" [step]=\\\"1000\\\"></nouislider>\\n\\n\\n    <!-- Loading -->\\n    <div *ngIf=\\\"loading\\\" style=\\\"position: absolute;top:0;left:0;width:100%;height:100%;z-index: 100;\\\">\\n        <div style=\\\"position: absolute;opacity: 0.5;width:100%;height:100%;background-color: white;\\\">\\n        </div>\\n        <div style=\\\"width: 50px;margin: auto;margin-top: 60px;\\\">\\n            <i class=\\\"fa fa-spin fa-gear\\\" style=\\\"font-size: 50px;\\\"></i>\\n        </div>\\n    </div>\\n    <!-- END Loading -->\\n    \\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/charts/network/network.template.html\n// module id = 392\n// module chunks = 1","module.exports = \"<div style=\\\"text-align: center;padding: 0;\\\">\\n    <button type=\\\"button\\\" class=\\\"btn btn-default btn-xs pull-right\\\" (click)=\\\"refresh()\\\">\\n        <i class=\\\"fa fa-refresh\\\"></i>\\n    </button>\\n    <canvas baseChart\\n                [datasets]=\\\"lineChartData\\\"\\n                [labels]=\\\"lineChartLabels\\\"\\n                [options]=\\\"lineChartOptions\\\"\\n                [colors]=\\\"lineChartColors\\\"\\n                [chartType]=\\\"lineChartType\\\"\\n                (chartHover)=\\\"chartHovered($event)\\\"\\n                (chartClick)=\\\"chartClicked($event)\\\"></canvas>\\n\\n    <h3 style=\\\"color: #337ab7\\\">{{ rangeStartDate }} - {{ rangeEndDate }}</h3>\\n    <nouislider [min]=\\\"dateRangeMin\\\" [max]=\\\"dateRangeMax\\\"  [connect]=\\\"true\\\" [(ngModel)]=\\\"dateRange\\\" (ngModelChange)=\\\"onChange($event)\\\" [disabled]=\\\"loading\\\" [format]=\\\"formatter\\\" [tooltips]=\\\"false\\\" [step]=\\\"1000\\\"></nouislider>\\n\\n    <!-- Loading -->\\n    <div *ngIf=\\\"loading\\\" style=\\\"position: absolute;top:0;left:0;width:100%;height:100%;z-index: 100;\\\">\\n        <div style=\\\"position: absolute;opacity: 0.5;width:100%;height:100%;background-color: white;\\\">\\n        </div>\\n        <div style=\\\"width: 50px;margin: auto;margin-top: 60px;\\\">\\n            <i class=\\\"fa fa-spin fa-gear\\\" style=\\\"font-size: 50px;\\\"></i>\\n        </div>\\n    </div>\\n    <!-- END Loading -->\\n    \\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/charts/processes/processes.template.html\n// module id = 393\n// module chunks = 1","module.exports = \"<div class=\\\"footer\\\">\\n    <div class=\\\"pull-right\\\">\\n        Version: <strong>0.0.1</strong>\\n    </div>\\n    <div>\\n        <strong>Copyright</strong> Example Company &copy; 2017\\n    </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/common/footer/footer.template.html\n// module id = 394\n// module chunks = 1","module.exports = \"<!-- Wrapper-->\\n<div id=\\\"wrapper\\\">\\n\\n    <!-- Left navigation bar -->\\n    <navigation></navigation>\\n\\n    <!-- Main page wrapper -->\\n    <div id=\\\"page-wrapper\\\" class=\\\"gray-bg\\\">\\n\\n        <!-- Top navigation -->\\n        <topnavbar></topnavbar>\\n\\n        <!-- Main view/routes wrapper-->\\n        <router-outlet></router-outlet>\\n\\n        <!-- Footer -->\\n        <footer></footer>\\n\\n    </div>\\n    <!-- End page wrapper-->\\n\\n</div>\\n<!-- End wrapper-->\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/common/layouts/basic.template.html\n// module id = 395\n// module chunks = 1","module.exports = \"<!-- View/routes wrapper-->\\n<router-outlet></router-outlet>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/common/layouts/blank.template.html\n// module id = 396\n// module chunks = 1","module.exports = \"<nav class=\\\"navbar-default navbar-static-side\\\" role=\\\"navigation\\\">\\n    <div class=\\\"sidebar-collapse\\\">\\n        <ul class=\\\"nav metismenu\\\" id=\\\"side-menu\\\">\\n            <li class=\\\"nav-header\\\">\\n                <a href=\\\"#\\\">\\n                    <i class=\\\"fa fa-user\\\"></i>\\n                    <span class=\\\"nav-label\\\"> <strong class=\\\"font-bold\\\">{{user.username}}</strong> </span>\\n                        <!-- <span class=\\\"text-muted text-xs block\\\">Example <b class=\\\"caret\\\"></b> </span> -->\\n                </a>\\n            </li>\\n            <li [ngClass]=\\\"{active: activeRoute('dash')}\\\">\\n                <a [routerLink]=\\\"['/']\\\"><i class=\\\"fa fa-th-large\\\"></i> <span class=\\\"nav-label\\\">Dashboard</span></a>\\n            </li>\\n            <li [ngClass]=\\\"{active: activeRoute('perf')}\\\">\\n                <a [routerLink]=\\\"['/perf']\\\"><i class=\\\"fa fa-bar-chart-o\\\"></i> <span class=\\\"nav-label\\\">Perfomance</span> </a>\\n            </li>\\n            <li [ngClass]=\\\"{active: activeRoute('processes')}\\\">\\n                <a [routerLink]=\\\"['/processes']\\\"><i class=\\\"fa fa-tasks\\\"></i> <span class=\\\"nav-label\\\">Processes</span> </a>\\n            </li>\\n            <li [ngClass]=\\\"{active: activeRoute('correctlogin') || activeRoute('incorrectlogin')}\\\">\\n                <a href=\\\"\\\" class=\\\"auto\\\">      \\n                  <span class=\\\"pull-right text-muted\\\">\\n                    <i class=\\\"fa fa-fw fa-angle-right text\\\"></i>\\n                    <i class=\\\"fa fa-fw fa-angle-down text-active\\\"></i>\\n                  </span>\\n                  <i class=\\\"fa fa-shield\\\"></i>\\n                  <span>Security</span>\\n                </a>\\n                <ul class=\\\"nav nav-sub dk\\\">\\n                  <li class=\\\"nav-sub-header\\\">\\n                    <a [routerLink]=\\\"['/correctlogin']\\\" style=\\\"font-size: 11px;\\\">\\n                      <i class=\\\"fa fa-square-o\\\"></i><span>Number of login </span>\\n                    </a>\\n                  </li>\\n                  <li ui-sref-active=\\\"active\\\">\\n                    <a [routerLink]=\\\"['/incorrectlogin']\\\" style=\\\"font-size: 11px;\\\">\\n                      <i class=\\\"fa  fa-square\\\"></i><span>Incorrect attempt login</span>\\n                    </a>\\n                  </li>\\n                </ul>\\n            </li>\\n            <li *ngIf=\\\"apps.urlstat\\\" [ngClass]=\\\"{active: activeRoute('urlstat')}\\\">\\n                <a [routerLink]=\\\"['/urlstat']\\\"><i class=\\\"fa fa-sitemap\\\"></i> <span class=\\\"nav-label\\\">Url statistics</span> </a>\\n            </li>\\n            <li *ngIf=\\\"apps.backup\\\" [ngClass]=\\\"{active: activeRoute('backups')}\\\">\\n                <a [routerLink]=\\\"['/backups']\\\"><i class=\\\"fa fa-truck\\\"></i> <span class=\\\"nav-label\\\">Backups</span> </a>\\n            </li>\\n        </ul>\\n\\n    </div>\\n</nav>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/common/navigation/navigation.template.html\n// module id = 397\n// module chunks = 1","module.exports = \"<div class=\\\"row border-bottom\\\">\\n    <nav class=\\\"navbar navbar-static-top white-bg\\\" role=\\\"navigation\\\" style=\\\"margin-bottom: 0\\\">\\n        <div class=\\\"navbar-header\\\">\\n            <a class=\\\"minimalize-styl-2 btn btn-primary \\\" (click)=\\\"toggleNavigation()\\\"><i class=\\\"fa fa-bars\\\"></i> </a>\\n            <!--\\n            <form role=\\\"search\\\" class=\\\"navbar-form-custom\\\" method=\\\"post\\\" action=\\\"#\\\">\\n                <div class=\\\"form-group\\\">\\n                    <input type=\\\"text\\\" placeholder=\\\"Search for something...\\\" class=\\\"form-control\\\" name=\\\"top-search\\\" id=\\\"top-search\\\">\\n                </div>\\n            </form>\\n            -->\\n        </div>\\n        <ul class=\\\"nav navbar-top-links navbar-right\\\">\\n            <li>\\n                <a href=\\\"/admin/logout/\\\">\\n                    <i class=\\\"fa fa-sign-out\\\"></i> Log out\\n                </a>\\n            </li>\\n        </ul>\\n\\n    </nav>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/common/topnavbar/topnavbar.template.html\n// module id = 398\n// module chunks = 1","module.exports = \"<div class=\\\"wrapper wrapper-content\\\">\\n    \\n    <a [href]=\\\"backupMakeUrl\\\" class=\\\"btn btn-success\\\" target=\\\"_blank\\\">Make and download database backup</a>\\n    <a [href]=\\\"backupMakeMediaUrl\\\" class=\\\"btn btn-primary\\\" target=\\\"_blank\\\">Make and download media backup</a>\\n    \\n\\n    <div class=\\\"row\\\" style=\\\"margin-top: 10px;\\\">\\n        <div class=\\\"col-lg-9\\\">\\n            <div class=\\\"wrapper-md\\\">\\n                <div class=\\\"tab-container\\\">\\n                    <ul class=\\\"nav nav-tabs nav-stacked nav-justified\\\">\\n                        <li [ngClass]=\\\"{active: router.url=='/backups'}\\\">\\n                            <a [routerLink]=\\\"['/backups']\\\">Settings</a>\\n                        </li>\\n                        <li [ngClass]=\\\"{active: router.url=='/backups/result'}\\\">\\n                            <a [routerLink]=\\\"['/backups/result']\\\">Result</a>\\n                        </li>\\n                    </ul>\\n                    <div class=\\\"tab-content\\\">\\n                        <div *ngIf=\\\"router.url=='/backups'\\\" class=\\\"tab-pane active\\\">\\n                            <div class=\\\"panel panel-default\\\">\\n                                <div class=\\\"panel-body\\\">\\n                                    <form>\\n                                        <div class=\\\"form-group\\\">\\n                                            <label>Day time for running backup (will be run everyday):</label>\\n                                            <div style=\\\"display: flex;align-items: center;\\\">\\n                                                <timepicker [(ngModel)]=\\\"model.backuptime\\\" [ngModelOptions]=\\\"{standalone: true}\\\" (ngModelChange)=\\\"changedTime()\\\"></timepicker>\\n                                                <button type=\\\"button\\\" class=\\\"btn btn-info\\\" style=\\\"margin-left: 20px;height:40px;\\\" (click)=\\\"saveBackTime()\\\">Save</button>\\n                                                <span *ngIf=\\\"backuptime_is_dirty\\\" class=\\\"text-warning\\\" style=\\\"margin-left: 10px;\\\">Time is not save</span>\\n                                            </div>\\n                                        </div>\\n                                        <div class=\\\"form-group\\\">\\n                                            <label>Absolute path for media directory (optional):</label>\\n                                            <div class=\\\"input-group\\\">\\n                                                <input name=\\\"inputedDir\\\" type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"model.inputedDir\\\" (keyup.enter)=\\\"addDirectory()\\\"/>\\n                                                <span class=\\\"input-group-addon\\\" style=\\\"padding: 0;\\\"> \\n                                                    <button type=\\\"button\\\" class=\\\"btn btn-info\\\" (click)=\\\"addDirectory()\\\" [disabled]=\\\"!model.inputedDir || loading\\\" style=\\\"margin: -2px;\\\">Add</button></span>\\n                                            </div>\\n                                        </div>\\n\\n                                        <div *ngIf=\\\"mediadirs.length > 0\\\" class=\\\"form-group\\\">\\n                                            <div class=\\\"panel panel-default\\\">\\n                                                <div class=\\\"panel-body\\\">\\n                                                    <p *ngIf=\\\"mediadirs.length == 0\\\">No directories specified</p>\\n                                                    <div *ngFor=\\\"let obj of mediadirs; let i = index;\\\" style=\\\"margin-top: 2px;\\\">\\n                                                        <button type=\\\"button\\\" class=\\\"btn btn-default btn-xs\\\" (click)=\\\"deletePath(i)\\\" [disabled]=\\\"loading\\\"><i class=\\\"fa fa-times\\\"></i></button>\\n                                                        <span style=\\\"margin-left:20px;\\\">{{obj.path}}</span>\\n                                                        <span>\\n                                                            <i *ngIf=\\\"obj.checked\\\" class=\\\"fa fa-check text-info\\\"></i>\\n                                                        </span>\\n                                                        <span *ngIf=\\\"!obj.checked\\\">\\n                                                            <i class=\\\"fa fa-exclamation text-warning\\\"></i> \\n                                                            <small>(Path doesn't exist)</small>\\n                                                        </span>\\n                                                    </div>\\n                                                </div>\\n                                            </div>\\n                                        </div>\\n                                    </form>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div *ngIf=\\\"router.url=='/backups/result'\\\" class=\\\"tab-pane active\\\">\\n                            \\n\\n                            <div class=\\\"panel panel-default\\\">\\n                                <div class=\\\"panel-body\\\">\\n                                    <div *ngIf=\\\"backups_daily\\\" class=\\\"panel panel-info\\\">\\n                                        <div class=\\\"panel-heading \\\">\\n                                            Daily Database Backups\\n                                        </div>\\n                                        <div class=\\\"panel-body\\\">\\n                                            <table class=\\\"table\\\">\\n                                                <tr *ngFor=\\\"let backup of backups_daily\\\">\\n                                                    <td>{{getDateFromTimestap(backup.created_at)}}</td>\\n                                                    <td>{{backup.filename}}</td>\\n                                                    <td>{{backup.size}}</td>\\n                                                    <td><a [href]=\\\"getFileUrl(backup.filename)\\\" type=\\\"button\\\" class=\\\"btn btn-default btn-xs\\\" target=\\\"_blank\\\"><i class=\\\"fa fa-download\\\"></i></a></td>\\n                                                </tr>\\n                                            </table>\\n                                        </div>\\n                                    </div>\\n\\n                                    <div *ngIf=\\\"backups_weekly\\\" class=\\\"panel panel-info\\\">\\n                                        <div class=\\\"panel-heading \\\">\\n                                            Weekly Database Backups\\n                                        </div>\\n                                        <div class=\\\"panel-body\\\">\\n                                            <table class=\\\"table\\\">\\n                                                <tr *ngFor=\\\"let backup of backups_weekly\\\">\\n                                                    <td>{{getDateFromTimestap(backup.created_at)}}</td>\\n                                                    <td>{{backup.filename}}</td>\\n                                                    <td>{{backup.size}}</td>\\n                                                    <td><a [href]=\\\"getFileUrl(backup.filename)\\\" type=\\\"button\\\" class=\\\"btn btn-default btn-xs\\\" target=\\\"_blank\\\"><i class=\\\"fa fa-download\\\"></i></a></td>\\n                                                </tr>\\n                                            </table>\\n                                        </div>\\n                                    </div>\\n\\n                                    <div *ngIf=\\\"backups_monthly\\\" class=\\\"panel panel-info\\\">\\n                                        <div class=\\\"panel-heading \\\">\\n                                            Monthly Database Backups\\n                                        </div>\\n                                        <div class=\\\"panel-body\\\">\\n                                            <table class=\\\"table\\\">\\n                                                <tr *ngFor=\\\"let backup of backups_monthly\\\">\\n                                                    <td>{{getDateFromTimestap(backup.created_at)}}</td>\\n                                                    <td>{{backup.filename}}</td>\\n                                                    <td>{{backup.size}}</td>\\n                                                    <td><a [href]=\\\"getFileUrl(backup.filename)\\\" type=\\\"button\\\" class=\\\"btn btn-default btn-xs\\\" target=\\\"_blank\\\"><i class=\\\"fa fa-download\\\"></i></a></td>\\n                                                </tr>\\n                                            </table>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n\\n        <!-- Loading -->\\n        <div *ngIf=\\\"loading\\\" style=\\\"position: absolute;top:0;left:0;width:100%;height:100%;z-index: 100;\\\">\\n            <div style=\\\"position: absolute;opacity: 0.5;width:100%;height:100%;background-color: white;\\\">\\n            </div>\\n            <div style=\\\"width: 50px;margin: auto;margin-top: 60px;\\\">\\n                <i class=\\\"fa fa-spin fa-gear\\\" style=\\\"font-size: 50px;\\\"></i>\\n            </div>\\n        </div>\\n        <!-- END Loading -->\\n\\n        <div class=\\\"col-lg-3\\\">\\n            <div class=\\\"wrapper-md\\\">\\n                <div class=\\\"panel panel-success\\\">\\n\\n                    <div class=\\\"panel-heading \\\">\\n                        Info\\n                        <button type=\\\"button\\\" class=\\\"btn btn-success btn-xs pull-right\\\" (click)=\\\"refresh()\\\">\\n                            <i class=\\\"fa fa-refresh\\\"></i>\\n                        </button>\\n                    </div>\\n                    <div class=\\\"panel-body\\\">\\n                        <span class=\\\"text-success\\\">Last run: </span>\\n                        <span>{{ last_run_backup| date: 'yyyy-MM-dd HH:mm' || \\\"None\\\"}} </span>\\n\\n                        <span class=\\\"text-success\\\">State: </span>\\n                        <span *ngIf=\\\"backups_enable\\\" class=\\\"text-primary\\\" style=\\\"margin-right: 20px;\\\">backup is enable</span>\\n                        <span *ngIf=\\\"!backups_enable\\\" class=\\\"text-danger\\\" style=\\\"margin-right: 20px;\\\">backup is disabled</span>\\n                        <div style=\\\"margin-top: 20px\\\">\\n                            <button *ngIf=\\\"backups_enable\\\" type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"backupSwitch()\\\">Turn off backup</button>\\n                            <button *ngIf=\\\"!backups_enable\\\" type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"backupSwitch()\\\">Turn on backup</button>\\n                        </div>\\n\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n\\n    </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/views/backup-view/backup-view.template.html\n// module id = 399\n// module chunks = 1","module.exports = \"<div class=\\\"wrapper wrapper-content\\\">\\n    <div class=\\\"text-muted font-thin pull-right\\\" style=\\\"font-size: 12px;margin: 10px;\\\">\\n        Running time: {{ boottime || 0 }}\\n    </div>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-lg-9\\\">\\n            <div class=\\\"wrapper-md\\\">\\n                <small>Last {{ avarage.hours || 0}} hours</small>\\n                <div class=\\\"row row-sm\\\">\\n                    <div class=\\\"col-md-3\\\">\\n                        <div class=\\\"panel padder-v item text-center bg-primary\\\" [ngClass]=\\\"{\\n                            'bg-warning': avarage.avarage_cpu > 60 && avarage.avarage_cpu < 90,\\n                            'bg-danger': avarage.avarage_cpu >= 90\\n                        }\\\" style=\\\"height: 90px;\\\" >\\n                            <div class=\\\"h1 text-white font-thin\\\">{{ avarage.avarage_cpu || 0 }}%</div>\\n                            <span class=\\\"text-white text-xs\\\" translate>Avarage cpu used</span><br>\\n\\n                            <div class=\\\"top text-info text-right w-full\\\">\\n                                \\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"col-md-3\\\">\\n                        <div class=\\\"panel padder-v item text-center bg-primary\\\" [ngClass]=\\\"{\\n                            'bg-warning': avarage.avarage_memory > 60 && avarage.avarage_memory < 90,\\n                            'bg-danger': avarage.avarage_memory >= 90\\n                        }\\\" style=\\\"height: 90px;\\\">\\n                            <div class=\\\"h1 text-white font-thin\\\">{{ avarage.avarage_memory || 0 }}%</div>\\n                            <span class=\\\"text-white text-xs\\\" translate>Avarage memory used</span><br>\\n                            <div class=\\\"top text-right w-full\\\">\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"col-md-3\\\">\\n                        <div class=\\\"panel padder-v item text-center bg-primary\\\" [ngClass]=\\\"{\\n                            'bg-warning': avarage.avarage_disk > 60 && avarage.avarage_disk < 90,\\n                            'bg-danger': avarage.avarage_disk >= 90\\n                        }\\\" style=\\\"height: 90px;\\\">\\n                            <div class=\\\"h1 text-white font-thin\\\">{{ avarage.avarage_disk || 0 }}%</div>\\n                            <span class=\\\"text-white text-xs\\\" translate>Avarage disk space used</span>\\n                            <div class=\\\"top text-right w-full\\\">\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"col-lg-3\\\">\\n            <div class=\\\"panel panel-default\\\" style=\\\"padding-top: 20px;\\\">\\n                <div class=\\\"text-center wrapper m-b-sm\\\">              \\n                    <h4>Current users</h4>\\n                    <ul class=\\\"list-group\\\" stlye=\\\"text-align: left;\\\">\\n                        <li class=\\\"list-group-item\\\" style=\\\"text-align: left;\\\" *ngFor=\\\"let user of users; let i = index;\\\">\\n                            <p style=\\\"margin:0;font-size: 8px;text-align: right;\\\">{{getDateFromTimestap(user[3])}}</p>\\n                            <div>\\n                                <span class=\\\"label bg-primary\\\">{{i}}</span>\\n                                <span>{{user[0]}} / {{user[1]}}</span>\\n                            </div>\\n                        </li>\\n                    </ul>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/views/main-view/main-view.template.html\n// module id = 400\n// module chunks = 1","module.exports = \"<div class=\\\"wrapper wrapper-content animated fadeInRight\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-lg-12\\\">\\n            <div class=\\\"text-center m-t-lg\\\">\\n                <h1>\\n                    Simple example of second view\\n                </h1>\\n                <small>Written as an minor-view.</small>\\n            </div>\\n        </div>\\n    </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/views/minor-view/minor-view.template.html\n// module id = 401\n// module chunks = 1","module.exports = \"<div class=\\\"wrapper wrapper-content animated fadeInRight\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-lg-12\\\">\\n            <div class=\\\"text-center m-t-lg\\\" style=\\\"margin-bottom: 20px;\\\">\\n                <h1>\\n                    Perfomance charts\\n                </h1>\\n                <small>\\n                    It is an application skeleton for a typical web app. You can use it to quickly bootstrap your webapp projects and dev environment.\\n                </small>\\n            </div>\\n\\n            <div class=\\\"col-md-6\\\">\\n                <cpu-chart></cpu-chart>\\n            </div>\\n            <div class=\\\"col-md-6\\\">\\n                <memory-chart></memory-chart>\\n            </div>\\n            <div class=\\\"col-md-6\\\">\\n                <disk-chart></disk-chart>\\n            </div>\\n            <div class=\\\"col-md-6\\\">\\n                <network-chart></network-chart>\\n            </div>\\n        </div>\\n    </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/views/perf-view/perf-view.template.html\n// module id = 402\n// module chunks = 1","module.exports = \"<div class=\\\"wrapper wrapper-content\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-lg-12\\\">\\n            <div class=\\\"col-md-7\\\">\\n                <div class=\\\"panel panel-info\\\">\\n                    <div class=\\\"panel-heading \\\">\\n                        <small>Last time update: {{last_time }}</small>\\n                        <button type=\\\"button\\\" class=\\\"btn btn-info btn-xs pull-right\\\" (click)=\\\"refresh()\\\">\\n                            <i class=\\\"fa fa-refresh\\\"></i>\\n                        </button>\\n                    </div>\\n                    <div class=\\\"panel-body\\\">\\n                        <table class=\\\"table\\\">\\n                            <tr *ngFor=\\\"let p of last_processes\\\">\\n                                <td>\\n                                    <span style=\\\"font-size: 8px;\\\">{{p.pid}}</span>\\n                                </td>\\n                                <td><b>{{p.name}}</b> </td>\\n                                <td>{{p.status}}</td>\\n                                <td>{{p.cpu}}</td>\\n                                <td>{{p.create_time}}</td>\\n                            </tr>\\n                        </table>\\n\\n                        <!-- Loading -->\\n                        <div *ngIf=\\\"loading\\\" style=\\\"position: absolute;top:0;left:0;width:100%;height:100%;z-index: 100;\\\">\\n                            <div style=\\\"position: absolute;opacity: 0.5;width:100%;height:100%;background-color: white;\\\">\\n                            </div>\\n                            <div style=\\\"width: 50px;margin: auto;margin-top: 60px;\\\">\\n                                <i class=\\\"fa fa-spin fa-gear\\\" style=\\\"font-size: 50px;\\\"></i>\\n                            </div>\\n                        </div>\\n                        <!-- END Loading -->\\n\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"col-md-5\\\">\\n                <div class=\\\"panel\\\">\\n                    <div class=\\\"panel-body\\\">\\n                        <div class=\\\"wrapper-md\\\">\\n                            <small>Last {{ hours }} hours</small>\\n                            <div class=\\\"row row-sm\\\">\\n                                <div class=\\\"col-md-12\\\">\\n                                    <div class=\\\"panel padder-v item text-center bg-primary\\\" style=\\\"height: 90px;\\\" >\\n                                        <div class=\\\"h1 text-white font-thin\\\">{{ avarage_number || 0 }}</div>\\n                                        <span class=\\\"text-white text-xs\\\" translate>Number of processes</span><br>\\n\\n                                        \\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n\\n                        <processes-chart></processes-chart>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n\\n    </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/views/processes-view/processes-view.template.html\n// module id = 403\n// module chunks = 1","module.exports = \"<div class=\\\"wrapper wrapper-content\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-lg-12\\\">\\n            <div class=\\\"col-md-7\\\">\\n                <div class=\\\"panel panel-info\\\">\\n                    <div class=\\\"panel-heading \\\">\\n                        <small>Top 100 source IP address</small>\\n                    </div>\\n                    <div class=\\\"panel-body\\\">\\n                        <table class=\\\"table\\\">\\n                            <tr *ngFor=\\\"let p of hosts\\\">\\n                                <td>\\n                                    {{p.host}}\\n                                </td>\\n                                <td><b>{{p.count}}</b> </td>\\n                                <td>{{p.last_date}}</td>\\n                            </tr>\\n                        </table>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"col-md-5\\\">\\n                <div class=\\\"panel\\\">\\n                    <div class=\\\"panel-body\\\">\\n                        <div class=\\\"wrapper-md\\\">\\n                            <div class=\\\"row row-sm\\\">\\n                                <div class=\\\"col-md-12\\\">\\n                                    <div class=\\\"panel padder-v item text-center bg-primary\\\" style=\\\"height: 90px;\\\">\\n                                        <div class=\\\"h1 text-white font-thin\\\">{{ count_correct_attempt || 0 }}</div>\\n                                        <span class=\\\"text-white text-xs\\\" translate>Number of correct attempts login</span><br>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n\\n                        <div style=\\\"text-align: center;\\\">\\n                            <button type=\\\"button\\\" class=\\\"btn btn-default btn-xs pull-right\\\" (click)=\\\"refreshChart()\\\">\\n                                <i class=\\\"fa fa-refresh\\\"></i>\\n                            </button>\\n                            \\n                            <canvas baseChart\\n                                        [datasets]=\\\"lineChartData\\\"\\n                                        [labels]=\\\"lineChartLabels\\\"\\n                                        [options]=\\\"lineChartOptions\\\"\\n                                        [colors]=\\\"lineChartColors\\\"\\n                                        [chartType]=\\\"lineChartType\\\"\\n                                        (chartHover)=\\\"chartHovered($event)\\\"\\n                                        (chartClick)=\\\"chartClicked($event)\\\"></canvas>\\n\\n                            <h3 style=\\\"color: #337ab7\\\">{{ rangeStartDate }} - {{ rangeEndDate }}</h3>\\n                            <nouislider [min]=\\\"dateRangeMin\\\" [max]=\\\"dateRangeMax\\\"  [connect]=\\\"true\\\" [(ngModel)]=\\\"dateRange\\\" (ngModelChange)=\\\"onChange($event)\\\" [disabled]=\\\"loading\\\" [format]=\\\"formatter\\\" [tooltips]=\\\"false\\\" [step]=\\\"1000\\\"></nouislider>\\n\\n                            <!-- Loading -->\\n                            <div *ngIf=\\\"loading\\\" style=\\\"position: absolute;top:0;left:0;width:100%;height:100%;z-index: 100;\\\">\\n                                <div style=\\\"position: absolute;opacity: 0.5;width:100%;height:100%;background-color: white;\\\">\\n                                </div>\\n                                <div style=\\\"width: 50px;margin: auto;margin-top: 60px;\\\">\\n                                    <i class=\\\"fa fa-spin fa-gear\\\" style=\\\"font-size: 50px;\\\"></i>\\n                                </div>\\n                            </div>\\n                            <!-- END Loading -->\\n                        </div>\\n\\n\\n                        <div class=\\\"panel panel-info\\\">\\n                            <div class=\\\"panel-heading \\\">\\n                                <small>Top 100 usernames</small>\\n                            </div>\\n                            <div class=\\\"panel-body\\\">\\n                                <table class=\\\"table\\\">\\n                                    <tr *ngFor=\\\"let p of users\\\">\\n                                        <td>\\n                                            {{p.username}}\\n                                        </td>\\n                                        <td><b>{{p.count}}</b> </td>\\n                                        <td>{{p.last_date}}</td>\\n                                    </tr>\\n                                </table>\\n                            </div>\\n                        </div>\\n\\n\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n\\n    </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/views/sec-view/sec-correct-login-view.template.html\n// module id = 404\n// module chunks = 1","module.exports = \"<div class=\\\"wrapper wrapper-content\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-lg-12\\\">\\n            <div class=\\\"col-md-7\\\">\\n                <div class=\\\"panel panel-info\\\">\\n                    <div class=\\\"panel-heading \\\">\\n                        <small>Top 100 source IP address</small>\\n                    </div>\\n                    <div class=\\\"panel-body\\\">\\n                        <table class=\\\"table\\\">\\n                            <tr *ngFor=\\\"let p of hosts\\\">\\n                                <td>\\n                                    {{p.host}}\\n                                </td>\\n                                <td><b>{{p.count}}</b> </td>\\n                                <td>{{p.last_date}}</td>\\n                            </tr>\\n                        </table>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"col-md-5\\\">\\n                <div class=\\\"panel\\\">\\n                    <div class=\\\"panel-body\\\">\\n                        <div class=\\\"wrapper-md\\\">\\n                            <div class=\\\"row row-sm\\\">\\n                                <div class=\\\"col-md-12\\\">\\n                                    <div class=\\\"panel padder-v item text-center bg-primary\\\" style=\\\"height: 90px;\\\" [ngClass]=\\\"{\\n                                    'bg-warning': count_incorrect_attepmt > 0 && count_incorrect_attepmt <= 100,\\n                                    'bg-danger': count_incorrect_attepmt > 100 }\\\">\\n                                        <div class=\\\"h1 text-white font-thin\\\">{{ count_incorrect_attepmt || 0 }}</div>\\n                                        <span class=\\\"text-white text-xs\\\" translate>Number of incorrect attempts login</span><br>\\n\\n                                        \\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n\\n\\n                        <div style=\\\"text-align: center;\\\">\\n                            <button type=\\\"button\\\" class=\\\"btn btn-default btn-xs pull-right\\\" (click)=\\\"refreshChart()\\\">\\n                                <i class=\\\"fa fa-refresh\\\"></i>\\n                            </button>\\n\\n                            <canvas baseChart\\n                                        [datasets]=\\\"lineChartData\\\"\\n                                        [labels]=\\\"lineChartLabels\\\"\\n                                        [options]=\\\"lineChartOptions\\\"\\n                                        [colors]=\\\"lineChartColors\\\"\\n                                        [chartType]=\\\"lineChartType\\\"\\n                                        (chartHover)=\\\"chartHovered($event)\\\"\\n                                        (chartClick)=\\\"chartClicked($event)\\\"></canvas>\\n\\n                            <h3 style=\\\"color: #337ab7\\\">{{ rangeStartDate }} - {{ rangeEndDate }}</h3>\\n                            <nouislider [min]=\\\"dateRangeMin\\\" [max]=\\\"dateRangeMax\\\"  [connect]=\\\"true\\\" [(ngModel)]=\\\"dateRange\\\" (ngModelChange)=\\\"onChange($event)\\\" [disabled]=\\\"loading\\\" [format]=\\\"formatter\\\" [tooltips]=\\\"false\\\" [step]=\\\"1000\\\"></nouislider>\\n\\n                            <!-- Loading -->\\n                            <div *ngIf=\\\"loading\\\" style=\\\"position: absolute;top:0;left:0;width:100%;height:100%;z-index: 100;\\\">\\n                                <div style=\\\"position: absolute;opacity: 0.5;width:100%;height:100%;background-color: white;\\\">\\n                                </div>\\n                                <div style=\\\"width: 50px;margin: auto;margin-top: 60px;\\\">\\n                                    <i class=\\\"fa fa-spin fa-gear\\\" style=\\\"font-size: 50px;\\\"></i>\\n                                </div>\\n                            </div>\\n                            <!-- END Loading -->\\n                            \\n                        </div>\\n\\n                        <div class=\\\"panel panel-info\\\">\\n                            <div class=\\\"panel-heading \\\">\\n                                <small>Top 100 usernames</small>\\n                            </div>\\n                            <div class=\\\"panel-body\\\">\\n                                <table class=\\\"table\\\">\\n                                    <tr *ngFor=\\\"let p of users\\\">\\n                                        <td>\\n                                            {{p.username}}\\n                                        </td>\\n                                        <td><b>{{p.count}}</b> </td>\\n                                        <td>{{p.last_date}}</td>\\n                                    </tr>\\n                                </table>\\n                            </div>\\n                        </div>\\n\\n\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n\\n    </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/views/sec-view/sec-incorrect-login-view.template.html\n// module id = 405\n// module chunks = 1","module.exports = \"<div class=\\\"wrapper wrapper-content\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-lg-12\\\">\\n            <div class=\\\"col-md-7\\\">\\n                <div class=\\\"panel panel-info\\\">\\n                    <div class=\\\"panel-heading \\\">\\n                        <small>Last time update: {{last_time }}</small>\\n                        <button type=\\\"button\\\" class=\\\"btn btn-info btn-xs pull-right\\\" (click)=\\\"refresh()\\\">\\n                            <i class=\\\"fa fa-refresh\\\"></i>\\n                        </button>\\n                    </div>\\n                    <div class=\\\"panel-body\\\">\\n                        <p *ngIf=\\\"debug==false\\\" class=\\\"text-warning\\\">Django in mode DEBUG = False so we can't get sql statistics</p>\\n                        <div class=\\\"table-responsive\\\">\\n                            <table class=\\\"table\\\">\\n                                <thead>\\n                                    <tr>\\n                                        <th style=\\\"font-size: 10px;\\\">Count</th>\\n                                        <th style=\\\"font-size: 10px;\\\">URL</th>\\n                                        <th style=\\\"font-size: 10px;\\\">Duration</th>\\n                                        <th style=\\\"font-size: 10px;\\\">Queries count</th>\\n                                        <th style=\\\"font-size: 10px;\\\">Max query durations</th>\\n                                        <th style=\\\"font-size: 10px;\\\">Last req</th>\\n                                    </tr>\\n                                </thead>\\n                                <tbody>\\n                                    <tr *ngFor=\\\"let p of allRequests\\\" [ngClass]=\\\"{\\n                                        'text-warning': p.request_code >= 400,\\n                                        'text-danger': p.request_code >= 500}\\\">\\n                                        <td>\\n                                            <span>{{p.count}}</span>\\n                                        </td>\\n                                        <td style=\\\"word-break: break-word;\\\">\\n                                            <b>{{p.url}}</b> \\n                                            <p style=\\\"font-size: 8px\\\">{{p.method }} {{p.request_code}}</p>\\n                                        </td>\\n                                        <td>{{toFixed(p.request_duration)}}</td>\\n                                        <td>{{p.request_sql_count}}</td>\\n                                        <td>{{toFixed(p.request_sql_time)}}</td>\\n                                        <td>{{getDateFromTimestap(p.last_time_request)}}</td>\\n                                    </tr>\\n                                </tbody>\\n                            </table>\\n                        </div>\\n                        <!-- Loading -->\\n                        <div *ngIf=\\\"loading\\\" style=\\\"position: absolute;top:0;left:0;width:100%;height:100%;z-index: 100;\\\">\\n                            <div style=\\\"position: absolute;opacity: 0.5;width:100%;height:100%;background-color: white;\\\">\\n                            </div>\\n                            <div style=\\\"width: 50px;margin: auto;margin-top: 60px;\\\">\\n                                <i class=\\\"fa fa-spin fa-gear\\\" style=\\\"font-size: 50px;\\\"></i>\\n                            </div>\\n                        </div>\\n                        <!-- END Loading -->\\n\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"col-md-5\\\">\\n                <div class=\\\"panel\\\">\\n                    <div class=\\\"panel-body\\\">\\n                        <div style=\\\"text-align: center;padding: 0;\\\">\\n                            <button type=\\\"button\\\" class=\\\"btn btn-default btn-xs pull-right\\\" (click)=\\\"refresh()\\\">\\n                                <i class=\\\"fa fa-refresh\\\"></i>\\n                            </button>\\n                            <div>\\n                                <canvas baseChart\\n                                        [datasets]=\\\"lineChartData\\\"\\n                                        [labels]=\\\"lineChartLabels\\\"\\n                                        [options]=\\\"lineChartOptions\\\"\\n                                        [colors]=\\\"lineChartColors\\\"\\n                                        [chartType]=\\\"lineChartType\\\"\\n                                        ></canvas>\\n                            </div>\\n                            <div>\\n                                <canvas baseChart\\n                                        [datasets]=\\\"lineChartTimeData\\\"\\n                                        [labels]=\\\"lineChartLabels\\\"\\n                                        [options]=\\\"lineChartOptions\\\"\\n                                        [colors]=\\\"lineChartTimeColors\\\"\\n                                        [chartType]=\\\"lineChartType\\\"\\n                                        ></canvas>\\n                            </div>\\n\\n                            <h3 style=\\\"color: #337ab7\\\">{{ rangeStartDate }} - {{ rangeEndDate }}</h3>\\n                            <nouislider [min]=\\\"dateRangeMin\\\" [max]=\\\"dateRangeMax\\\"  [connect]=\\\"true\\\" [(ngModel)]=\\\"dateRange\\\" (ngModelChange)=\\\"onChange($event)\\\" [disabled]=\\\"loading\\\" [format]=\\\"formatter\\\" [tooltips]=\\\"false\\\" [step]=\\\"1000\\\"></nouislider>\\n\\n                            <!-- Loading -->\\n                            <div *ngIf=\\\"loading\\\" style=\\\"position: absolute;top:0;left:0;width:100%;height:100%;z-index: 100;\\\">\\n                                <div style=\\\"position: absolute;opacity: 0.5;width:100%;height:100%;background-color: white;\\\">\\n                                </div>\\n                                <div style=\\\"width: 50px;margin: auto;margin-top: 60px;\\\">\\n                                    <i class=\\\"fa fa-spin fa-gear\\\" style=\\\"font-size: 50px;\\\"></i>\\n                                </div>\\n                            </div>\\n                            <!-- END Loading -->\\n                            \\n                        </div>\\n\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n\\n    </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/views/urlstat-view/urlstat-view.template.html\n// module id = 406\n// module chunks = 1","import { Injectable } from '@angular/core';\nimport { Http, Response, RequestOptions, URLSearchParams } from '@angular/http';\n\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/catch';\nimport 'rxjs/add/operator/map';\n\nimport { AppSettings } from '../app.settings';\n\n@Injectable()\nexport class UserService {\n\n\tconstructor (private http: Http) {}\n\n\t\n\tuser;\n\n\tpublic getUserFromServer(callback) {\n\t\tlet self = this;\n\t\tlet data = {\n\t\t\tt: new Date().getTime()\n\t\t}\n\n\t\tlet params: URLSearchParams = new URLSearchParams();\n        for (var key in data) {\n          \tif (data.hasOwnProperty(key)) {\n            \tlet val = data[key];\n             \tparams.set(key, val);\n          \t}\n        }\n        let options = new RequestOptions({\n        \tsearch: params\n      \t});\n\n\t\tthis.http.get(AppSettings.userUrl, options)\n\t\t\t.map(this.extractData)\n\t\t\t.catch(this.handleError)\n\t\t\t.subscribe(\n\t            function(data) {\n\t                if (!data.is_authenticated) {\n\t                    window.location.href = \"/\";\n\t                }\n\t                self.user = data.user;\n\t                if (callback) {\n\t                \tcallback(data);\n\t                }\n\t                \n\t            },\n\t            function(error) {\n\t            }\n        \t);\n\t}\n\n\tgetUser() {\n\t\treturn this.user;\n\t}\n\n\tprivate extractData(res: Response) {\n\t\tlet body = res.json();\n\t\treturn body || {};\n\t}\n\n\tprivate handleError(error: Response | any) {\n\t\t// In a real world app, you might use a remote logging infrastructure\n\t\tlet errMsg: string;\n\t\tif (error instanceof Response) {\n\t\t\tconst body = error.json() || '';\n\t\t\tconst err = body.error || JSON.stringify(body);\n\t\t\terrMsg = `${error.status} - ${error.statusText || ''} ${err}`;\n\t\t} else {\n\t\t\terrMsg = error.message ? error.message : error.toString();\n\t\t}\n\n\t\tconsole.error(errMsg);\n\t\treturn Observable.throw(errMsg);\n\t}\n\n\n\t\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/user.service.ts","import { Component } from '@angular/core';\n\ndeclare var jQuery:any;\n\n@Component({\n    selector: 'basic',\n    templateUrl: 'basic.template.html'\n})\nexport class basicComponent {}\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/common/layouts/basic.component.ts","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n\nimport { AppSettings } from '../../app.settings';\nimport { DataService } from '../../services/data.service';\n\ndeclare var moment: any;\n\n@Component({\n    selector: 'backupView',\n    templateUrl: 'backup-view.template.html'\n})\nexport class backupViewComponent implements OnInit{ \n\n\tloading: boolean = false;\n\terror_message: string = \"\";\n    backupMakeUrl: string;\n    backupMakeMediaUrl: string;\n    backupGetMediaUrl: string;\n    backups_daily:any = [];\n    backups_weekly:any = [];\n    backups_monthly:any = [];\n    backups_enable:boolean = true;\n    last_run_backup: null;\n    result_last_run_backup: \"\";\n\n    mediadirs = [];\n    model = {\n        inputedDir: \"\",\n        backuptime: \"\"\n    }\n    backuptime_is_dirty = false;\n    backuptime_loaded;\n\n\tconstructor (private dataService: DataService, private router: Router) {\n    }\n\n    ngOnInit() { \n    \tlet self = this;\n        self.backupMakeUrl = AppSettings.backupMakeUrl;\n        self.backupMakeMediaUrl = AppSettings.backupMakeMediaUrl;\n        self.backupGetMediaUrl = AppSettings.backupGetMediaUrl;\n        self.getBackups();\n    }\n\n    getBackups() {\n        let self = this;\n        self.loading = true;\n        self.dataService.getData(AppSettings.backupsUrl, {})\n        .subscribe(\n            function(data) {\n                self.loading = false;\n                self.backups_daily = data.backups.daily;\n                self.backups_weekly = data.backups.weekly;\n                self.backups_monthly = data.backups.monthly;\n                self.backups_enable = data.enable;\n                self.last_run_backup = data.last_run_backup;\n                self.mediadirs = data.media_directories;\n                self.result_last_run_backup = data.result;\n                self.model.backuptime = data.run_time;\n                self.backuptime_loaded = data.run_time;\n                if (!self.model.backuptime) {\n                    self.model.backuptime = moment().toDate();\n                    self.backuptime_is_dirty = true;\n                }\n            },\n            function(error) {\n                self.loading = false;\n                self.error_message = <any>error;\n            }\n        );\n    }\n\n    getDateFromTimestap(value) {\n        return moment(value, 'X').format('YYYY-DD-MM HH:mm')\n    }\n      \n    backupSwitch() {\n        let self = this;\n        self.loading = true;\n        self.dataService.postData(AppSettings.backupsEnableUrl, {})\n        .subscribe(\n            function(data) {\n                self.loading = false;\n                self.backups_enable = data.enable;\n            },\n            function(error) {\n                self.loading = false;\n                self.error_message = <any>error;\n            }\n        );\n    }\n\n    addDirectory() {\n        let self = this;\n\n        self.mediadirs.push({\n            path: this.model.inputedDir,\n            checked: false\n        });\n        \n        self.loading = true;\n        self.dataService.postData(AppSettings.backupsPathDirUrl, {\n            dirs:  self.mediadirs\n        })\n        .subscribe(\n            function(data) {\n                self.loading = false;\n                self.model.inputedDir = \"\";\n                self.mediadirs = data.media_directories;\n            },\n            function(error) {\n                self.loading = false;\n                self.error_message = <any>error;\n            }\n        );\n\n    }\n\n    deletePath(index) {\n        let self = this;\n        self.mediadirs.splice(index, 1);\n        self.loading = true;\n        self.dataService.postData(AppSettings.backupsPathDirUrl, {\n            dirs:  self.mediadirs\n        })\n        .subscribe(\n            function(data) {\n                self.loading = false;\n                self.mediadirs = data.media_directories;\n            },\n            function(error) {\n                self.loading = false;\n                self.error_message = <any>error;\n            }\n        );\n    }\n\n    changedTime() {\n        if (this.backuptime_loaded && \n                moment(this.backuptime_loaded).format('X') == moment(this.model.backuptime).format('X')) {\n            this.backuptime_is_dirty = false;\n        } else {\n            this.backuptime_is_dirty = true;\n        }\n        \n    }\n\n    saveBackTime() {\n        let self = this;\n        self.loading = true;\n        self.dataService.postData(AppSettings.backupsSetTimeUrl, {\n            time: moment(self.model.backuptime).format('X')\n        })\n        .subscribe(\n            function(data) {\n                self.loading = false;\n                self.backuptime_is_dirty = false;\n            },\n            function(error) {\n                self.loading = false;\n                self.error_message = <any>error;\n            }\n        );\n    }\n   \n\n    public refresh() {\n        this.getBackups();\n    }\n\n    public getFileUrl(filename) {\n        return AppSettings.backupGetMediaUrl + filename;\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/views/backup-view/backup-view.component.ts","import { Component, OnInit } from '@angular/core';\n\nimport { AppSettings } from '../../app.settings';\nimport { DataService } from '../../services/data.service';\n\ndeclare var moment: any;\n\n@Component({\n    selector: 'mianView',\n    templateUrl: 'main-view.template.html'\n})\nexport class mainViewComponent implements OnInit{ \n\n\tloading: boolean = false;\n\terror_message: string = \"\";\n\tboottime:string = \"\";\n\tusers;\n    avarage = {\n    };\n\n\tconstructor (private dashboardService: DataService) {\n    }\n\n    ngOnInit() { \n    \tlet self = this;\n    \tself.getBootTime(function() {\n    \t\tself.getCurrentUsers(function() {\n                self.getAvarageValues();\n            });\n    \t})\n\n    }\n\n    getBootTime(callback?) {\n    \tlet self = this;\n    \tself.loading = true;\n    \tself.dashboardService.getData(AppSettings.bootTimeUrl, {})\n    \t.subscribe(\n            function(data) {\n                self.loading = false;\n                self.boottime = data.boottime;\n                if (callback) {\n                \tcallback();\n                }\n            },\n            function(error) {\n                self.loading = false;\n                self.error_message = <any>error;\n            }\n        );\n    }\n\n    getCurrentUsers(callback) {\n    \tlet self = this;\n    \tself.loading = true;\n    \tself.dashboardService.getData(AppSettings.usersUrl, {})\n    \t.subscribe(\n            function(data) {\n                self.loading = false;\n                self.users = data.users;\n                if (callback) {\n                    callback();\n                }\n            },\n            function(error) {\n                self.loading = false;\n                self.error_message = <any>error;\n            }\n        );\n    }\n\n    getDateFromTimestap(value) {\n    \treturn moment(value, 'X').format('YYYY-DD-MM HH:mm')\n    }\n\n    getAvarageValues() {\n        let self = this;\n        self.loading = true;\n        self.dashboardService.getData(AppSettings.dashUrl, {})\n        .subscribe(\n            function(data) {\n                self.loading = false;\n                self.avarage = data;\n            },\n            function(error) {\n                self.loading = false;\n                self.error_message = <any>error;\n            }\n        );\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/views/main-view/main-view.component.ts","import { Component } from '@angular/core';\n\n@Component({\n    selector: 'perfView',\n    templateUrl: 'perf-view.template.html'\n})\nexport class perfViewComponent { }\n\n\n// WEBPACK FOOTER //\n// ./src/app/views/perf-view/perf-view.component.ts","import { Component, OnInit } from '@angular/core';\n\nimport { AppSettings } from '../../app.settings';\nimport { DataService } from '../../services/data.service';\n\n@Component({\n    selector: 'processesView',\n    templateUrl: 'processes-view.template.html'\n})\nexport class processesViewComponent implements OnInit { \n\n\tloading: boolean = false;\n\terror_message;\n\thours;\n    avarage_number;\n    last_time;\n    last_processes = [];\n\n\n\tconstructor (private dataService: DataService) {\n    }\n\n\tngOnInit() { \n    \tlet self = this;\n    \tself.getAvarageNumber(function() {\n    \t\tself.getProcesses();\n    \t});\n    }\n\n    private getProcesses(callback?) {\n    \tlet self = this;\n    \tself.loading = true;\n    \tself.dataService.getData(AppSettings.processesLastUrl, {})\n    \t.subscribe(\n            function(data) {\n                self.loading = false;\n                self.last_time = data.time;\n                self.last_processes = data.processes;\n                if (callback) {\n                \tcallback();\n                }\n            },\n            function(error) {\n                self.loading = false;\n                self.error_message = <any>error;\n            }\n        );\n    }\n\n    private getAvarageNumber(callback) {\n\n        let self = this;\n       \n        self.loading = true;\n        self.dataService.getData(AppSettings.processesAvarageNumberUrl, {})\n        .subscribe(\n            function(data) {\n                self.loading = false;\n                self.hours = data.hours;\n                self.avarage_number = data.avarage_number;\n                if (callback) {\n                \tcallback();\n                }\n            },\n            function(error) {\n                self.loading = false;\n                self.error_message = <any>error;\n            }\n        );\n    }\n\n    public refresh() {\n        this.getProcesses();\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/views/processes-view/processes-view.component.ts","import { Component, OnInit, ViewChild, ChangeDetectorRef  } from '@angular/core';\n\nimport { BaseChartDirective } from '../../libs/ng2-charts/ng2-charts';\n\nimport { NouisliderComponent } from 'ng2-nouislider';\n\nimport { AppSettings } from '../../app.settings';\nimport { DataService } from '../../services/data.service';\n\ndeclare var moment: any;\n\ninterface NouiFormatter {\n    to(value: number): string;\n    from(value: string): any;\n}\n\n\n\n@Component({\n    selector: 'secCorrectLoginView',\n    templateUrl: 'sec-correct-login-view.template.html'\n})\nexport class secCorrectLoginViewComponent implements OnInit { \n\t@ViewChild( BaseChartDirective ) chart: BaseChartDirective;\n    @ViewChild( NouisliderComponent ) slider: NouisliderComponent;\n\n    error_message;\n    loading:boolean = false;\n\n    dateRange = [0, 100];\n    rangeStartDate;\n    rangeEndDate;\n\n    count_correct_attempt:number = 0;\n    users = [];\n    hosts = [];\n   \n    \n    formatter: NouiFormatter = {\n         to(value: number): string {\n            if (value) {\n                return moment(value, 'X').format('YYYY-DD-MM HH:mm');\n            }\n          },\n          from(value: string): any {\n              if (value) {\n                  if (moment(value, 'YYYY-DD-MM HH:mm').isValid()) {\n                      let d = moment(value, 'YYYY-DD-MM HH:mm').format('X')\n                      return parseFloat(d);\n                  }\n                  return value;\n              }\n          }\n         \n\n    };\n\n    constructor (private dataService: DataService, private chRef: ChangeDetectorRef) {\n    }\n\n    public lineChartData:Array<any> = [\n        {data: [], label: ''}\n    ];\n    public lineChartLabels:Array<any> = [];\n\n    public lineChartOptions:any = {\n        animation: false,\n        responsive: true,\n    };\n    public lineChartColors:Array<any> = [{\n      backgroundColor: 'rgba(10,159,177,0.5)',\n      borderColor: 'rgba(225,10,24,0.2)',\n      pointBackgroundColor: 'rgba(10,10,24,0.2)',\n      pointBorderColor: '#fff',\n      pointHoverBackgroundColor: '#fff',\n      pointHoverBorderColor: 'rgba(10,10,24,0.2)'\n    }];\n\n\n    \n\n    public lineChartLegend:boolean = true;\n    public lineChartType:string = 'line';\n\n    \n\n    dateRangeMin = 0;\n    dateRangeMax = 10;\n    onInitTime = false;\n    ngOnInit() { \n        let self = this;\n        self.loading = true;\n        self.dataService.getData(AppSettings.secCorrectLoginUrl,{})\n        .subscribe(\n            function(data) {\n                self.loading = false;\n                self.lineChartData = data.values;\n                self.lineChartLabels = data.dates;\n                self.chart.ngOnChanges({});\n\n                self.onInitTime = true;\n                self.dateRangeMin =  data.date_range.start_date;\n                self.dateRangeMax =  data.date_range.end_date;\n                self.slider.slider.updateOptions({\n                    start: [data.date_range.start, data.date_range.end_date],\n                    range: {\n                        'min': data.date_range.start,\n                        'max': data.date_range.end_date\n                    }\n                });\n                self.dateRange = [data.date_range.start, data.date_range.end_date];\n                self.count_correct_attempt = data.count_correct_attempt;\n                self.hosts = data.hosts;\n                self.users = data.users;\n                self.chRef.detectChanges();\n                    \n                setTimeout(function() {\n                    self.onInitTime = false;\n                }, 1000);\n            },\n            function(error) {\n                self.loading = false;\n                self.error_message = <any>error;\n            }\n        );\n        \n    }\n\n    public chartClicked(e:any):void {\n        console.log(e);\n    }\n \n    public chartHovered(e:any):void {\n        console.log(e);\n    }\n\n    public onChange($event) {\n        //console.log('this.dateRange', this.dateRange)\n        this.rangeStartDate = moment(this.dateRange[0], 'X').format('MMM DD HH:mm');\n        this.rangeEndDate = moment(this.dateRange[1], 'X').format('MMM-DD HH:mm');\n        this.getData();\n    }\n\n    private getData(_params?, callback?) {\n        if (this.loading || this.onInitTime ) {\n            return;\n        }\n\n        let self = this;\n        let params = _params || {\n            date_start: this.dateRange[0],\n            date_end: this.dateRange[1]\n        }\n        self.loading = true;\n        self.dataService.getData(AppSettings.secCorrectLoginUrl, params)\n        .subscribe(\n            function(data) {\n                self.loading = false;\n                self.lineChartData = data.values;\n                self.lineChartLabels = data.dates;\n                self.count_correct_attempt = data.count_correct_attempt;\n                self.hosts = data.hosts;\n                self.users = data.users;\n                self.chart.ngOnChanges({});\n                if (callback){\n                    callback(data)\n                }\n            },\n            function(error) {\n                self.loading = false;\n                self.error_message = <any>error;\n            }\n        );\n    }\n\n    public refreshChart() {\n        let self = this;\n        self.getData({}, function(data) {\n            self.dateRange = [data.date_range.start, data.date_range.end_date];\n            self.chRef.detectChanges();\n        });\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/views/sec-view/sec-correct-login-view.component.ts","import { Component, OnInit, ViewChild, ChangeDetectorRef } from '@angular/core';\n\nimport { BaseChartDirective } from '../../libs/ng2-charts/ng2-charts';\n\nimport { NouisliderComponent } from 'ng2-nouislider';\n\nimport { AppSettings } from '../../app.settings';\nimport { DataService } from '../../services/data.service';\n\ndeclare var moment: any;\n\ninterface NouiFormatter {\n    to(value: number): string;\n    from(value: string): any;\n}\n\n\n@Component({\n    selector: 'secIncorrectLoginView',\n    templateUrl: 'sec-incorrect-login-view.template.html'\n})\nexport class secIncorrectLoginViewComponent implements OnInit { \n    @ViewChild( BaseChartDirective ) chart: BaseChartDirective;\n    @ViewChild( NouisliderComponent ) slider: NouisliderComponent;\n\n    error_message;\n    loading:boolean = false;\n\n    dateRange = [0, 100];\n    rangeStartDate;\n    rangeEndDate;\n    count_incorrect_attepmt:number = 0;\n    hosts = [];\n    users = [];\n   \n    \n    formatter: NouiFormatter = {\n         to(value: number): string {\n            if (value) {\n                return moment(value, 'X').format('YYYY-DD-MM HH:mm');\n            }\n          },\n          from(value: string): any {\n              if (value) {\n                  if (moment(value, 'YYYY-DD-MM HH:mm').isValid()) {\n                      let d = moment(value, 'YYYY-DD-MM HH:mm').format('X')\n                      return parseFloat(d);\n                  }\n                  return value;\n              }\n          }\n         \n\n    };\n\n    constructor (private dataService: DataService, private chRef: ChangeDetectorRef) {\n    }\n\n    public lineChartData:Array<any> = [\n        {data: [], label: ''}\n    ];\n    public lineChartLabels:Array<any> = [];\n\n    public lineChartOptions:any = {\n        animation: false,\n        responsive: true\n    };\n    public lineChartColors:Array<any> = [{\n      backgroundColor: 'rgba(237,85,101,0.8)',\n      borderColor: 'rgba(225,10,24,0.2)',\n      pointBackgroundColor: 'rgba(10,10,24,0.2)',\n      pointBorderColor: '#fff',\n      pointHoverBackgroundColor: '#fff',\n      pointHoverBorderColor: 'rgba(10,10,24,0.2)'\n    }];\n\n\n    \n\n    public lineChartLegend:boolean = true;\n    public lineChartType:string = 'line';\n\n    \n\n    dateRangeMin = 0;\n    dateRangeMax = 10;\n    onInitTime = false;\n    ngOnInit() { \n        let self = this;\n        self.loading = true;\n        self.dataService.getData(AppSettings.secIncorrectLoginUrl,{})\n        .subscribe(\n            function(data) {\n                self.loading = false;\n                self.lineChartData = data.values;\n                self.lineChartLabels = data.dates;\n                self.chart.ngOnChanges({});\n\n                self.onInitTime = true;\n                self.dateRangeMin =  data.date_range.start_date;\n                self.dateRangeMax =  data.date_range.end_date;\n                self.slider.slider.updateOptions({\n                    start: [data.date_range.start, data.date_range.end_date],\n                    range: {\n                        'min': data.date_range.start,\n                        'max': data.date_range.end_date\n                    }\n                });\n                self.dateRange = [data.date_range.start, data.date_range.end_date];\n                self.count_incorrect_attepmt = data.count_incorrect_attepmt;\n                self.hosts = data.hosts;\n                self.users = data.users;\n\n                self.chRef.detectChanges();\n                    \n                setTimeout(function() {\n                    self.onInitTime = false;\n                }, 1000);\n            },\n            function(error) {\n                self.loading = false;\n                self.error_message = <any>error;\n            }\n        );\n        \n    }\n\n\n    public onChange($event) {\n        //console.log('this.dateRange', this.dateRange)\n        this.rangeStartDate = moment(this.dateRange[0], 'X').format('MMM DD HH:mm');\n        this.rangeEndDate = moment(this.dateRange[1], 'X').format('MMM-DD HH:mm');\n        this.getData();\n    }\n\n    private getData(_params?, callback?) {\n        if (this.loading || this.onInitTime ) {\n            return;\n        }\n\n        let self = this;\n        let params = _params || {\n            date_start: this.dateRange[0],\n            date_end: this.dateRange[1]\n        }\n        self.loading = true;\n        self.dataService.getData(AppSettings.secIncorrectLoginUrl, params)\n        .subscribe(\n            function(data) {\n                self.loading = false;\n                self.lineChartData = data.values;\n                self.lineChartLabels = data.dates;\n                self.count_incorrect_attepmt = data.count_incorrect_attepmt;\n                self.hosts = data.hosts;\n                self.users = data.users;\n                self.chart.ngOnChanges({});\n                if (callback){\n                    callback(data)\n                }\n            },\n            function(error) {\n                self.loading = false;\n                self.error_message = <any>error;\n            }\n        );\n    }\n\n    public refreshChart() {\n        let self = this;\n        self.getData({}, function(data) {\n            self.dateRange = [data.date_range.start, data.date_range.end_date];\n            self.chRef.detectChanges();\n        });\n    }\n\n    \n    \n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/views/sec-view/sec-incorrect-login-view.component.ts","import { Component, OnInit, ViewChild, ChangeDetectorRef } from '@angular/core';\n\n\nimport { BaseChartDirective } from '../../libs/ng2-charts/ng2-charts';\n\nimport { NouisliderComponent } from 'ng2-nouislider';\n\nimport { AppSettings } from '../../app.settings';\nimport { DataService } from '../../services/data.service';\n\n\ndeclare var moment: any;\n\ninterface NouiFormatter {\n    to(value: number): string;\n    from(value: string): any;\n}\n\n\n@Component({\n    selector: 'urlstatView',\n    templateUrl: 'urlstat-view.template.html',\n})\nexport class urlstatViewComponent implements OnInit { \n    @ViewChild( BaseChartDirective ) chart: BaseChartDirective;\n    @ViewChild( NouisliderComponent ) slider: NouisliderComponent;\n\n    error_message;\n    loading:boolean = false;\n\n    dateRange = [0, 100];\n    rangeStartDate;\n    rangeEndDate;\n    allRequests = [];\n    last_time;\n    \n   \n    \n    formatter: NouiFormatter = {\n         to(value: number): string {\n            if (value) {\n                return moment(value, 'X').format('YYYY-DD-MM HH:mm');\n            }\n          },\n          from(value: string): any {\n              if (value) {\n                  if (moment(value, 'YYYY-DD-MM HH:mm').isValid()) {\n                      let d = moment(value, 'YYYY-DD-MM HH:mm').format('X')\n                      return parseFloat(d);\n                  }\n                  return value;\n              }\n          }\n         \n\n    };\n\n    constructor (private dataService: DataService, private chRef: ChangeDetectorRef) {\n    }\n\n    public lineChartData:Array<any> = [\n        {data: [], label: ''},{data: [], label: ''}\n    ];\n    public lineChartTimeData:Array<any> = [\n        {data: [], label: ''},{data: [], label: ''}\n    ];\n    public lineChartLabels:Array<any> = [];\n\n    public lineChartOptions:any = {\n        animation: false,\n        responsive: true\n    };\n    public lineChartColors:Array<any> = [{\n      backgroundColor: 'rgba(10,159,177,0.5)',\n      borderColor: 'rgba(225,10,24,0.2)',\n      pointBackgroundColor: 'rgba(10,10,24,0.2)',\n      pointBorderColor: '#fff',\n      pointHoverBackgroundColor: '#fff',\n      pointHoverBorderColor: 'rgba(10,10,24,0.2)'\n    }, {\n      backgroundColor: 'rgba(248,172,89,0.5)',\n      borderColor: 'rgba(225,10,24,0.2)',\n      pointBackgroundColor: 'rgba(10,10,24,0.2)',\n      pointBorderColor: '#fff',\n      pointHoverBackgroundColor: '#fff',\n      pointHoverBorderColor: 'rgba(10,10,24,0.2)'\n    }];\n\n    public lineChartTimeColors:Array<any> = [{\n      backgroundColor: 'rgba(51,122,183,0.5)',\n      borderColor: 'rgba(225,10,24,0.2)',\n      pointBackgroundColor: 'rgba(10,10,24,0.2)',\n      pointBorderColor: '#fff',\n      pointHoverBackgroundColor: '#fff',\n      pointHoverBorderColor: 'rgba(10,10,24,0.2)'\n    }, {\n      backgroundColor: 'rgba(138,109,59,0.5)',\n      borderColor: 'rgba(225,10,24,0.2)',\n      pointBackgroundColor: 'rgba(10,10,24,0.2)',\n      pointBorderColor: '#fff',\n      pointHoverBackgroundColor: '#fff',\n      pointHoverBorderColor: 'rgba(10,10,24,0.2)'\n    }];\n\n\n    \n\n    public lineChartLegend:boolean = true;\n    public lineChartType:string = 'line';\n\n    \n\n    dateRangeMin = 0;\n    dateRangeMax = 10;\n    onInitTime = false;\n    ngOnInit() { \n        let self = this;\n        self.loading = true;\n        self.dataService.getData(AppSettings.urlStatUrl,{})\n        .subscribe(\n            function(data) {\n                self.loading = false;\n                self.lineChartData = data.values;\n                self.lineChartTimeData = data.values_time;\n                self.lineChartLabels = data.dates;\n                self.allRequests = data.all_requests;\n                self.last_time = data.last_time;\n                self.chart.ngOnChanges({});\n\n                self.onInitTime = true;\n                self.dateRangeMin =  data.date_range.start_date;\n                self.dateRangeMax =  data.date_range.end_date;\n                self.slider.slider.updateOptions({\n                    start: [data.date_range.start, data.date_range.end_date],\n                    range: {\n                        'min': data.date_range.start,\n                        'max': data.date_range.end_date\n                    }\n                });\n                self.dateRange = [data.date_range.start, data.date_range.end_date];\n                self.chRef.detectChanges();\n                    \n                setTimeout(function() {\n                    self.onInitTime = false;\n                }, 1000);\n\n                \n            },\n            function(error) {\n                self.loading = false;\n                self.error_message = <any>error;\n            }\n        );\n        \n    }\n\n    public chartClicked(e:any):void {\n        console.log(e);\n    }\n \n    public chartHovered(e:any):void {\n        console.log(e);\n    }\n\n    public onChange($event) {\n        this.rangeStartDate = moment(this.dateRange[0], 'X').format('MMM DD HH:mm');\n        this.rangeEndDate = moment(this.dateRange[1], 'X').format('MMM-DD HH:mm');\n        this.getData();\n    }\n\n    private getData(_params?, callback?) {\n        if (this.loading || this.onInitTime ) {\n            return;\n        }\n\n        let self = this;\n        let params = _params || {\n            date_start: this.dateRange[0],\n            date_end: this.dateRange[1]\n        }\n        self.loading = true;\n        self.dataService.getData(AppSettings.urlStatUrl, params)\n        .subscribe(\n            function(data) {\n                self.loading = false;\n                self.lineChartData = data.values;\n                self.lineChartTimeData = data.values_time;\n                self.lineChartLabels = data.dates;\n                self.allRequests = data.all_requests;\n                self.last_time = data.last_time;\n\n                self.chart.ngOnChanges({});\n                if (callback){\n                    callback(data)\n                }\n            },\n            function(error) {\n                self.loading = false;\n                self.error_message = <any>error;\n            }\n        );\n    }\n\n    public getDateFromTimestap(value) {\n        return moment(value, 'X').format('MMM DD HH:mm')\n    }\n\n    public refresh() {\n        let self = this;\n        self.getData({}, function(data) {\n            self.dateRange = [data.date_range.start, data.date_range.end_date];\n            self.chRef.detectChanges();\n        });\n    }\n\n    public toFixed(value) {\n        return value.toFixed(4);\n    }\n    \n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/views/urlstat-view/urlstat-view.component.ts","export * from  './index';\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/libs/ng2-charts/ng2-charts.ts","import { Injectable } from '@angular/core';\nimport { Http, Response, RequestOptions, URLSearchParams } from '@angular/http';\n\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/catch';\nimport 'rxjs/add/operator/map';\n\n\n@Injectable()\nexport class DataService {\n\n\tconstructor (private http: Http) {}\n\n\t\n\t\n\n\tpublic getData(url, _params): Observable<any> {\n\t\tlet data = _params || {};\n\t\tdata.t = new Date().getTime();\n\n\t\tlet params: URLSearchParams = new URLSearchParams();\n        for (var key in data) {\n          \tif (data.hasOwnProperty(key)) {\n            \tlet val = data[key];\n             \tparams.set(key, val);\n          \t}\n        }\n        let options = new RequestOptions({\n        \tsearch: params\n      \t});\n\n\t\treturn this.http.get(url, options)\n\t\t\t.map(this.extractData)\n\t\t\t.catch(this.handleError);\n\t}\n\n\n\tpublic postData(url, _params): Observable<any> {\n\t\tlet data = _params || {};\n\n\t\tlet params: URLSearchParams = new URLSearchParams();\n        for (var key in data) {\n          \tif (data.hasOwnProperty(key)) {\n            \tlet val = data[key];\n             \tparams.set(key, val);\n          \t}\n        }\n        let options = new RequestOptions({\n        \tsearch: params\n      \t});\n\n\t\treturn this.http.post(url, data)\n\t\t\t.map(this.extractData)\n\t\t\t.catch(this.handleError);\n\t}\n\n\n\tprivate extractData(res: Response) {\n\t\tlet body = res.json();\n\t\treturn body || {};\n\t}\n\n\tprivate handleError(error: Response | any) {\n\t\t// In a real world app, you might use a remote logging infrastructure\n\t\tlet errMsg: string;\n\t\tif (error instanceof Response) {\n\t\t\tconst body = error.json() || '';\n\t\t\tconst err = body.error || JSON.stringify(body);\n\t\t\terrMsg = `${error.status} - ${error.statusText || ''} ${err}`;\n\t\t} else {\n\t\t\terrMsg = error.message ? error.message : error.toString();\n\t\t}\n\n\t\tconsole.error(errMsg);\n\t\treturn Observable.throw(errMsg);\n\t}\n\n\n\t\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/data.service.ts"],"sourceRoot":""}